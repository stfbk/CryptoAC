To facilitate the adoption of cloud by organizations, Cryptographic Access Control (CAC) is the obvious solution to control data sharing among users while preventing partially trusted Cloud Service Providers (CSPs) to access sensitive data. In this context, CryptoAC is a Swiss army knife tool for flexible and portable enforcement of role-based CAC policies in the cloud. CryptoAC implements the state of the art role-based CAC scheme proposed by Garrison et al. in "On the Practicality of Cryptographically Enforcing Dynamic Access Control Policies in the Cloud". Moreover, CryptoAC supports 81 different architectures seamlessly and it is cloud-independent, i.e., it can be deployed in any CSP (e.g., AWS, Azure, GCP) without needing extra configuration.

Concretely, CryptoAC is a Java program shipped with Docker. For deploying the CAC scheme, four Docker containers are needed (see the readme.txt file). For demonstration purposes, we propose a local deployment of CryptoAC with docker-compose, i.e., all four containers run in the host. If willing, evaluators can try alternative architectures and CSPs; to quickly adapt the local deployment for AWS see https://docs.docker.com/engine/context/ecs-integration/, and for Azure see https://docs.docker.com/engine/context/aci-integration/.

The source code of CryptoAC is licensed under the Apache License Version 2.0, January 2004 and can be found at https://github.com/stfbk/CryptoAC.