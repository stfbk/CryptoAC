{"version":3,"file":"ktor-ktor-websocket-serialization-js-legacy.js","sources":["../../../../../ktor-shared/ktor-websocket-serialization/common/src/io/ktor/websocket/serialization/WebsocketChannelSerialization.kt"],"sourcesContent":["package io.ktor.websocket.serialization\n\nimport io.ktor.serialization.*\nimport io.ktor.util.reflect.*\nimport io.ktor.utils.io.charsets.*\nimport io.ktor.websocket.*\n\n/*\n * Copyright 2014-2021 JetBrains s.r.o and contributors. Use of this source code is governed by the Apache 2.0 license.\n */\n\n/**\n * Serializes [data] to a frame and enqueues this frame.\n * May suspend if the [outgoing] queue is full.\n * If the [outgoing] channel is already closed, throws an exception, so it is impossible to transfer any message.\n * Frames sent after a Close frame are silently ignored.\n * Note that a Close frame could be sent automatically in reply to a peer's Close frame unless it is a raw WebSocket session.\n *\n * @param data The data to serialize\n * @param converter The WebSocket converter\n * @param charset Response charset\n */\npublic suspend inline fun <reified T : Any> WebSocketSession.sendSerializedBase(\n    data: T,\n    converter: WebsocketContentConverter,\n    charset: Charset\n) {\n    val serializedData = converter.serialize(\n        charset = charset,\n        typeInfo = typeInfo<T>(),\n        value = data\n    )\n    outgoing.send(serializedData)\n}\n\n/**\n * Dequeues a frame and deserializes it to the type [T] using [converter].\n * May throw [WebsocketDeserializeException] if the received frame type is not [Frame.Text] or [Frame.Binary].\n * In this case, [WebsocketDeserializeException.frame] contains the received frame.\n * May throw [ClosedReceiveChannelException] if a channel was closed\n *\n * @param converter The WebSocket converter\n * @param charset Response charset\n *\n * @returns A deserialized value or throws [WebsocketDeserializeException] if the [converter]\n * can't deserialize frame data to type [T]\n */\npublic suspend inline fun <reified T : Any> WebSocketSession.receiveDeserializedBase(\n    converter: WebsocketContentConverter,\n    charset: Charset\n): T {\n    val frame = incoming.receive()\n\n    if (!converter.isApplicable(frame)) {\n        throw WebsocketDeserializeException(\n            \"Converter doesn't support frame type ${frame.frameType.name}\",\n            frame = frame\n        )\n    }\n\n    val result = converter.deserialize(\n        charset = charset,\n        typeInfo = typeInfo<T>(),\n        content = frame\n    )\n\n    if (result is T) return result\n\n    throw WebsocketDeserializeException(\n        \"Can't deserialize value : expected value of type ${T::class.simpleName},\" +\n            \" got ${result::class.simpleName}\",\n        frame = frame\n    )\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;EAWA,iH;IAAA,wC;IAAA,yB;IAAA,sB;IAAA,kC;IAAA,wB;IAAA,kC;IAAA,8B;EAsBA,C;;;;;;;;oDAtBA,Y;;;;;;;;;;;;;;;;;;;;YAgBmC,gB;4BAAV,oBAAU,mBACjB,kBADiB,uDAGnB,eAHmB,O;gBAAA,qC;qBAAA,mB;YAAA,Q;;;;YAA/B,uBAA+B,a;YAKtB,gB;4BAAT,6BAAS,YAAK,gBAAL,O;gBAAA,qC;qBAAA,mB;YAAA,Q;;;;;;;;;;;;;;;;EACb,C;EAtBA,kH;mBAAA,2G;QAAA,S;aAAA,Q;;aAAA,uB;EAsBA,C;iIAtBA,yB;IAAA,sE;;;;;IAAA,8E;;;;;;;;;;;;;;;;MAgBmC,mBAAV,SAAU,mBACjB,OADiB,uDAGnB,IAHmB,8B;MAA/B,uBAA+B,kD;MAKtB,mBAAT,kBAAS,YAAK,gBAAL,8B;IACb,C;GAtBA,C;EAwBA,8G;IAAA,wC;IAAA,yB;IAAA,yB;IAAA,0B;IAAA,sB;IAAA,sB;IAAA,kC;IAAA,kC;IAAA,8B;EAsCA,C;;;;;;;;yDAtCA,Y;;;;;YAgByB,gB;4BAAT,6BAAS,c;gBAAA,qC;qBAAA,mB;YAAA,Q;;;;+BAAA,a;YAErB,IAAI,CAAC,oBAAU,sBAAa,gBAAb,CAAf,C;cACI,MAAM,kCACF,0CAAwC,gBAAM,UAAU,KADtD,UAEM,gBAFN,C;;;;;;;;;;;;;;;;;YAMa,gB;4BAAV,oBAAU,qBACT,kBADS,uDAGT,gBAHS,O;gBAAA,qC;qBAAA,mB;YAAA,Q;;gCAAA,a;YAMvB,IAAI,iCAAJ,C;cAAiB,OAAO,iB;;cAAxB,gB;;;;;YAEA,MAAM,kCACF,+DAA6D,oCAA7D,WACI,mBAAsB,+BAAd,iBAAc,YAAtB,CADJ,CADE,UAGM,gBAHN,C;;;;;;;;;;;;;;EAKV,C;EAtCA,+G;mBAAA,wG;QAAA,S;aAAA,Q;;aAAA,uB;EAsCA,C;sIAtCA,yB;IAAA,wJ;IAAA,sE;IAAA,gC;IAAA,8B;;;;IAAA,wE;MAgByB,mBAAT,kBAAS,qC;MAArB,YAAqB,kD;MAErB,IAAI,CAAC,SAAU,sBAAa,KAAb,CAAf,C;QACI,MAAM,uCACF,0CAAwC,KAAM,UAAU,KADtD,UAEM,KAFN,C;;;;;;;;;;;;;;;;MAMa,mBAAV,SAAU,qBACT,OADS,uDAGT,KAHS,8B;MAAvB,aAAuB,kD;MAMvB,IAAI,WAAJ,C;QAAiB,OAAO,M;MAExB,MAAM,uCACF,+DAA6D,yBAA7D,WACI,mBAAsB,+BAAd,MAAc,YAAtB,CADJ,CADE,UAGM,KAHN,C;IAKV,C;GAtCA,C;;;;;;"}