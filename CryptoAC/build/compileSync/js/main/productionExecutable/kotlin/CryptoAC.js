(function (root, factory) {
  if (typeof define === 'function' && define.amd)
    define(['exports', 'react', '@material-ui/core', '@emotion/css', 'react-icons/fa', 'react-pro-sidebar', 'react-dom/client', '@material-ui/lab', './kotlin-kotlin-stdlib-js-ir.js', './kotlinx-serialization-kotlinx-serialization-core-js-ir.js', './ktor-ktor-client-core-js-ir.js', './ktor-ktor-http-js-ir.js', './ktor-ktor-utils-js-ir.js', './kotlin-logging-js-ir.js', './kotlinx-serialization-kotlinx-serialization-json-js-ir.js', './ktor-ktor-client-content-negotiation-js-ir.js', './ktor-ktor-serialization-kotlinx-json-js-ir.js', './kotlin-react.js', './kotlin-react-dom.js', './kotlinx.coroutines-kotlinx-coroutines-core-js-ir.js', './kotlin-react-core.js', './kotlin-react-legacy.js', './ktor-ktor-websockets-js-ir.js'], factory);
  else if (typeof exports === 'object')
    factory(module.exports, require('react'), require('@material-ui/core'), require('@emotion/css'), require('react-icons/fa'), require('react-pro-sidebar'), require('react-dom/client'), require('@material-ui/lab'), require('./kotlin-kotlin-stdlib-js-ir.js'), require('./kotlinx-serialization-kotlinx-serialization-core-js-ir.js'), require('./ktor-ktor-client-core-js-ir.js'), require('./ktor-ktor-http-js-ir.js'), require('./ktor-ktor-utils-js-ir.js'), require('./kotlin-logging-js-ir.js'), require('./kotlinx-serialization-kotlinx-serialization-json-js-ir.js'), require('./ktor-ktor-client-content-negotiation-js-ir.js'), require('./ktor-ktor-serialization-kotlinx-json-js-ir.js'), require('./kotlin-react.js'), require('./kotlin-react-dom.js'), require('./kotlinx.coroutines-kotlinx-coroutines-core-js-ir.js'), require('./kotlin-react-core.js'), require('./kotlin-react-legacy.js'), require('./ktor-ktor-websockets-js-ir.js'));
  else {
    if (typeof react === 'undefined') {
      throw new Error("Error loading module 'CryptoAC'. Its dependency 'react' was not found. Please, check whether 'react' is loaded prior to 'CryptoAC'.");
    }
    if (typeof this['@material-ui/core'] === 'undefined') {
      throw new Error("Error loading module 'CryptoAC'. Its dependency '@material-ui/core' was not found. Please, check whether '@material-ui/core' is loaded prior to 'CryptoAC'.");
    }
    if (typeof this['@emotion/css'] === 'undefined') {
      throw new Error("Error loading module 'CryptoAC'. Its dependency '@emotion/css' was not found. Please, check whether '@emotion/css' is loaded prior to 'CryptoAC'.");
    }
    if (typeof this['react-icons/fa'] === 'undefined') {
      throw new Error("Error loading module 'CryptoAC'. Its dependency 'react-icons/fa' was not found. Please, check whether 'react-icons/fa' is loaded prior to 'CryptoAC'.");
    }
    if (typeof this['react-pro-sidebar'] === 'undefined') {
      throw new Error("Error loading module 'CryptoAC'. Its dependency 'react-pro-sidebar' was not found. Please, check whether 'react-pro-sidebar' is loaded prior to 'CryptoAC'.");
    }
    if (typeof this['react-dom/client'] === 'undefined') {
      throw new Error("Error loading module 'CryptoAC'. Its dependency 'react-dom/client' was not found. Please, check whether 'react-dom/client' is loaded prior to 'CryptoAC'.");
    }
    if (typeof this['@material-ui/lab'] === 'undefined') {
      throw new Error("Error loading module 'CryptoAC'. Its dependency '@material-ui/lab' was not found. Please, check whether '@material-ui/lab' is loaded prior to 'CryptoAC'.");
    }
    if (typeof this['kotlin-kotlin-stdlib-js-ir'] === 'undefined') {
      throw new Error("Error loading module 'CryptoAC'. Its dependency 'kotlin-kotlin-stdlib-js-ir' was not found. Please, check whether 'kotlin-kotlin-stdlib-js-ir' is loaded prior to 'CryptoAC'.");
    }
    if (typeof this['kotlinx-serialization-kotlinx-serialization-core-js-ir'] === 'undefined') {
      throw new Error("Error loading module 'CryptoAC'. Its dependency 'kotlinx-serialization-kotlinx-serialization-core-js-ir' was not found. Please, check whether 'kotlinx-serialization-kotlinx-serialization-core-js-ir' is loaded prior to 'CryptoAC'.");
    }
    if (typeof this['ktor-ktor-client-core-js-ir'] === 'undefined') {
      throw new Error("Error loading module 'CryptoAC'. Its dependency 'ktor-ktor-client-core-js-ir' was not found. Please, check whether 'ktor-ktor-client-core-js-ir' is loaded prior to 'CryptoAC'.");
    }
    if (typeof this['ktor-ktor-http-js-ir'] === 'undefined') {
      throw new Error("Error loading module 'CryptoAC'. Its dependency 'ktor-ktor-http-js-ir' was not found. Please, check whether 'ktor-ktor-http-js-ir' is loaded prior to 'CryptoAC'.");
    }
    if (typeof this['ktor-ktor-utils-js-ir'] === 'undefined') {
      throw new Error("Error loading module 'CryptoAC'. Its dependency 'ktor-ktor-utils-js-ir' was not found. Please, check whether 'ktor-ktor-utils-js-ir' is loaded prior to 'CryptoAC'.");
    }
    if (typeof this['kotlin-logging-js-ir'] === 'undefined') {
      throw new Error("Error loading module 'CryptoAC'. Its dependency 'kotlin-logging-js-ir' was not found. Please, check whether 'kotlin-logging-js-ir' is loaded prior to 'CryptoAC'.");
    }
    if (typeof this['kotlinx-serialization-kotlinx-serialization-json-js-ir'] === 'undefined') {
      throw new Error("Error loading module 'CryptoAC'. Its dependency 'kotlinx-serialization-kotlinx-serialization-json-js-ir' was not found. Please, check whether 'kotlinx-serialization-kotlinx-serialization-json-js-ir' is loaded prior to 'CryptoAC'.");
    }
    if (typeof this['ktor-ktor-client-content-negotiation-js-ir'] === 'undefined') {
      throw new Error("Error loading module 'CryptoAC'. Its dependency 'ktor-ktor-client-content-negotiation-js-ir' was not found. Please, check whether 'ktor-ktor-client-content-negotiation-js-ir' is loaded prior to 'CryptoAC'.");
    }
    if (typeof this['ktor-ktor-serialization-kotlinx-json-js-ir'] === 'undefined') {
      throw new Error("Error loading module 'CryptoAC'. Its dependency 'ktor-ktor-serialization-kotlinx-json-js-ir' was not found. Please, check whether 'ktor-ktor-serialization-kotlinx-json-js-ir' is loaded prior to 'CryptoAC'.");
    }
    if (typeof this['kotlin-react'] === 'undefined') {
      throw new Error("Error loading module 'CryptoAC'. Its dependency 'kotlin-react' was not found. Please, check whether 'kotlin-react' is loaded prior to 'CryptoAC'.");
    }
    if (typeof this['kotlin-react-dom'] === 'undefined') {
      throw new Error("Error loading module 'CryptoAC'. Its dependency 'kotlin-react-dom' was not found. Please, check whether 'kotlin-react-dom' is loaded prior to 'CryptoAC'.");
    }
    if (typeof this['kotlinx.coroutines-kotlinx-coroutines-core-js-ir'] === 'undefined') {
      throw new Error("Error loading module 'CryptoAC'. Its dependency 'kotlinx.coroutines-kotlinx-coroutines-core-js-ir' was not found. Please, check whether 'kotlinx.coroutines-kotlinx-coroutines-core-js-ir' is loaded prior to 'CryptoAC'.");
    }
    if (typeof this['kotlin-react-core'] === 'undefined') {
      throw new Error("Error loading module 'CryptoAC'. Its dependency 'kotlin-react-core' was not found. Please, check whether 'kotlin-react-core' is loaded prior to 'CryptoAC'.");
    }
    if (typeof this['kotlin-react-legacy'] === 'undefined') {
      throw new Error("Error loading module 'CryptoAC'. Its dependency 'kotlin-react-legacy' was not found. Please, check whether 'kotlin-react-legacy' is loaded prior to 'CryptoAC'.");
    }
    if (typeof this['ktor-ktor-websockets-js-ir'] === 'undefined') {
      throw new Error("Error loading module 'CryptoAC'. Its dependency 'ktor-ktor-websockets-js-ir' was not found. Please, check whether 'ktor-ktor-websockets-js-ir' is loaded prior to 'CryptoAC'.");
    }
    root.CryptoAC = factory(typeof CryptoAC === 'undefined' ? {} : CryptoAC, react, this['@material-ui/core'], this['@emotion/css'], this['react-icons/fa'], this['react-pro-sidebar'], this['react-dom/client'], this['@material-ui/lab'], this['kotlin-kotlin-stdlib-js-ir'], this['kotlinx-serialization-kotlinx-serialization-core-js-ir'], this['ktor-ktor-client-core-js-ir'], this['ktor-ktor-http-js-ir'], this['ktor-ktor-utils-js-ir'], this['kotlin-logging-js-ir'], this['kotlinx-serialization-kotlinx-serialization-json-js-ir'], this['ktor-ktor-client-content-negotiation-js-ir'], this['ktor-ktor-serialization-kotlinx-json-js-ir'], this['kotlin-react'], this['kotlin-react-dom'], this['kotlinx.coroutines-kotlinx-coroutines-core-js-ir'], this['kotlin-react-core'], this['kotlin-react-legacy'], this['ktor-ktor-websockets-js-ir']);
  }
}(this, function (_, $module$react, $module$_material_ui_core_n4u1mo, $module$_emotion_css_2enn37, $module$react_icons_fa_m6ytiq, $module$react_pro_sidebar_v1jyna, $module$react_dom_client_y5z5eu, $module$_material_ui_lab_hl129g, kotlin_kotlin, kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core, kotlin_io_ktor_ktor_client_core, kotlin_io_ktor_ktor_http, kotlin_io_ktor_ktor_utils, kotlin_io_github_microutils_kotlin_logging, kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json, kotlin_io_ktor_ktor_client_content_negotiation, kotlin_io_ktor_ktor_serialization_kotlinx_json, kotlin_org_jetbrains_kotlin_wrappers_kotlin_react, kotlin_org_jetbrains_kotlin_wrappers_kotlin_react_dom, kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core, kotlin_org_jetbrains_kotlin_wrappers_kotlin_react_core, kotlin_org_jetbrains_kotlin_wrappers_kotlin_react_legacy, kotlin_io_ktor_ktor_websockets) {
  'use strict';
  //region block: imports
  var imul = Math.imul;
  var useState = $module$react.useState;
  var CircularProgress = $module$_material_ui_core_n4u1mo.CircularProgress;
  var css = $module$_emotion_css_2enn37.css;
  var Backdrop = $module$_material_ui_core_n4u1mo.Backdrop;
  var FaDoorOpen = $module$react_icons_fa_m6ytiq.FaDoorOpen;
  var IconButton = $module$_material_ui_core_n4u1mo.IconButton;
  var Tooltip = $module$_material_ui_core_n4u1mo.Tooltip;
  var Container = $module$_material_ui_core_n4u1mo.Container;
  var Button = $module$_material_ui_core_n4u1mo.Button;
  var FaStream = $module$react_icons_fa_m6ytiq.FaStream;
  var FaBoxes = $module$react_icons_fa_m6ytiq.FaBoxes;
  var FaVials = $module$react_icons_fa_m6ytiq.FaVials;
  var FaGithub = $module$react_icons_fa_m6ytiq.FaGithub;
  var Sidebar = $module$react_pro_sidebar_v1jyna.Sidebar;
  var ProSidebarProvider = $module$react_pro_sidebar_v1jyna.ProSidebarProvider;
  var FaCloud = $module$react_icons_fa_m6ytiq.FaCloud;
  var FaWifi = $module$react_icons_fa_m6ytiq.FaWifi;
  var FaCloudMeatball = $module$react_icons_fa_m6ytiq.FaCloudMeatball;
  var FaWater = $module$react_icons_fa_m6ytiq.FaWater;
  var createRoot = $module$react_dom_client_y5z5eu.createRoot;
  var Snackbar = $module$_material_ui_core_n4u1mo.Snackbar;
  var Alert = $module$_material_ui_lab_hl129g.Alert;
  var FormControlLabel = $module$_material_ui_core_n4u1mo.FormControlLabel;
  var Checkbox = $module$_material_ui_core_n4u1mo.Checkbox;
  var FaCloudUploadAlt = $module$react_icons_fa_m6ytiq.FaCloudUploadAlt;
  var FaChevronUp = $module$react_icons_fa_m6ytiq.FaChevronUp;
  var FaChevronDown = $module$react_icons_fa_m6ytiq.FaChevronDown;
  var Typography = $module$_material_ui_core_n4u1mo.Typography;
  var Paper = $module$_material_ui_core_n4u1mo.Paper;
  var FormControl = $module$_material_ui_core_n4u1mo.FormControl;
  var FaPaperPlane = $module$react_icons_fa_m6ytiq.FaPaperPlane;
  var Button_0 = $module$_material_ui_core_n4u1mo.Button;
  var Grid = $module$_material_ui_core_n4u1mo.Grid;
  var RadioGroup = $module$_material_ui_core_n4u1mo.RadioGroup;
  var Radio = $module$_material_ui_core_n4u1mo.Radio;
  var Box = $module$_material_ui_core_n4u1mo.Box;
  var MenuItem = $module$_material_ui_core_n4u1mo.MenuItem;
  var InputLabel = $module$_material_ui_core_n4u1mo.InputLabel;
  var Select = $module$_material_ui_core_n4u1mo.Select;
  var Slider = $module$_material_ui_core_n4u1mo.Slider;
  var TextField = $module$_material_ui_core_n4u1mo.TextField;
  var FaTimes = $module$react_icons_fa_m6ytiq.FaTimes;
  var FaDownload = $module$react_icons_fa_m6ytiq.FaDownload;
  var FaUndoAlt = $module$react_icons_fa_m6ytiq.FaUndoAlt;
  var TableCell = $module$_material_ui_core_n4u1mo.TableCell;
  var TableRow = $module$_material_ui_core_n4u1mo.TableRow;
  var TableHead = $module$_material_ui_core_n4u1mo.TableHead;
  var TableBody = $module$_material_ui_core_n4u1mo.TableBody;
  var Table = $module$_material_ui_core_n4u1mo.Table;
  var TableContainer = $module$_material_ui_core_n4u1mo.TableContainer;
  var Toolbar = $module$_material_ui_core_n4u1mo.Toolbar;
  var TablePagination = $module$_material_ui_core_n4u1mo.TablePagination;
  var FaUserPlus = $module$react_icons_fa_m6ytiq.FaUserPlus;
  var FaUserSecret = $module$react_icons_fa_m6ytiq.FaUserSecret;
  var FaUserFriends = $module$react_icons_fa_m6ytiq.FaUserFriends;
  var FaUserShield = $module$react_icons_fa_m6ytiq.FaUserShield;
  var FaUserMinus = $module$react_icons_fa_m6ytiq.FaUserMinus;
  var FaUserNinja = $module$react_icons_fa_m6ytiq.FaUserNinja;
  var FaFileExcel = $module$react_icons_fa_m6ytiq.FaFileExcel;
  var FaUserTimes = $module$react_icons_fa_m6ytiq.FaUserTimes;
  var FaUserLock = $module$react_icons_fa_m6ytiq.FaUserLock;
  var FaFileMedical = $module$react_icons_fa_m6ytiq.FaFileMedical;
  var FaFileSignature = $module$react_icons_fa_m6ytiq.FaFileSignature;
  var FaFileDownload = $module$react_icons_fa_m6ytiq.FaFileDownload;
  var SubMenu = $module$react_pro_sidebar_v1jyna.SubMenu;
  var Menu = $module$react_pro_sidebar_v1jyna.Menu;
  var protoOf = kotlin_kotlin.$_$.sa;
  var objectMeta = kotlin_kotlin.$_$.ra;
  var VOID = kotlin_kotlin.$_$.lf;
  var setMetadataFor = kotlin_kotlin.$_$.ta;
  var getStringHashCode = kotlin_kotlin.$_$.t9;
  var hashCode = kotlin_kotlin.$_$.u9;
  var THROW_CCE = kotlin_kotlin.$_$.he;
  var equals = kotlin_kotlin.$_$.n9;
  var classMeta = kotlin_kotlin.$_$.k9;
  var Unit_getInstance = kotlin_kotlin.$_$.t4;
  var Enum = kotlin_kotlin.$_$.vd;
  var createSimpleEnumSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.f2;
  var LazyThreadSafetyMode_PUBLICATION_getInstance = kotlin_kotlin.$_$.g;
  var lazy = kotlin_kotlin.$_$.df;
  var SerializerFactory = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.e2;
  var split = kotlin_kotlin.$_$.rc;
  var toMutableList = kotlin_kotlin.$_$.c8;
  var ArrayList_init_$Create$ = kotlin_kotlin.$_$.j;
  var checkIndexOverflow = kotlin_kotlin.$_$.m5;
  var joinToString = kotlin_kotlin.$_$.u6;
  var CoroutineImpl = kotlin_kotlin.$_$.z8;
  var HttpRequestBuilder = kotlin_io_ktor_ktor_client_core.$_$.m;
  var Companion_getInstance = kotlin_io_ktor_ktor_http.$_$.g;
  var FormDataContent = kotlin_io_ktor_ktor_client_core.$_$.i;
  var JsType_getInstance = kotlin_io_ktor_ktor_utils.$_$.b;
  var getKClass = kotlin_kotlin.$_$.e;
  var arrayOf = kotlin_kotlin.$_$.ve;
  var createKType = kotlin_kotlin.$_$.b;
  var typeInfoImpl = kotlin_io_ktor_ktor_utils.$_$.q;
  var OutgoingContent = kotlin_io_ktor_ktor_http.$_$.r;
  var NullBody_getInstance = kotlin_io_ktor_ktor_http.$_$.a;
  var HttpStatement = kotlin_io_ktor_ktor_client_core.$_$.t;
  var get_COROUTINE_SUSPENDED = kotlin_kotlin.$_$.l8;
  var interfaceMeta = kotlin_kotlin.$_$.v9;
  var THROW_ISE = kotlin_kotlin.$_$.ie;
  var ensureNotNull = kotlin_kotlin.$_$.ye;
  var toInt = kotlin_kotlin.$_$.bd;
  var toBooleanStrict = kotlin_kotlin.$_$.wc;
  var replace = kotlin_kotlin.$_$.nc;
  var toString = kotlin_kotlin.$_$.jf;
  var listOf = kotlin_kotlin.$_$.e7;
  var listOf_0 = kotlin_kotlin.$_$.d7;
  var PluginGeneratedSerialDescriptor = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.d2;
  var StringSerializer_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.r;
  var IntSerializer_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.q;
  var BooleanSerializer_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.o;
  var UnknownFieldException_init_$Create$ = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.f;
  var typeParametersSerializers = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.z1;
  var GeneratedSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.a2;
  var throwMissingFieldException = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.h2;
  var objectCreate = kotlin_kotlin.$_$.qa;
  var getKClassFromExpression = kotlin_kotlin.$_$.d;
  var PolymorphicSerializer_init_$Create$ = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.b;
  var SerializersModuleBuilder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.k2;
  var PolymorphicModuleBuilder = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.j2;
  var serializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.w2;
  var KSerializer = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.p2;
  var isInterface = kotlin_kotlin.$_$.ea;
  var KotlinLogging_getInstance = kotlin_io_github_microutils_kotlin_logging.$_$.c;
  var Json = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_json.$_$.a;
  var get_nullable = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.v;
  var noWhenBranchMatchedException = kotlin_kotlin.$_$.ff;
  var ByteArraySerializer_getInstance = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.p;
  var toString_0 = kotlin_kotlin.$_$.xa;
  var IllegalArgumentException_init_$Create$ = kotlin_kotlin.$_$.m1;
  var contentEquals = kotlin_kotlin.$_$.p5;
  var contentHashCode = kotlin_kotlin.$_$.q5;
  var SealedClassSerializer_init_$Create$ = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.c;
  var _Char___init__impl__6a9atx = kotlin_kotlin.$_$.d2;
  var Char__rangeTo_impl_tkncvp = kotlin_kotlin.$_$.i2;
  var plus = kotlin_kotlin.$_$.k7;
  var plus_0 = kotlin_kotlin.$_$.l7;
  var numberRangeToNumber = kotlin_kotlin.$_$.ma;
  var collectionSizeOrDefault = kotlin_kotlin.$_$.n5;
  var ArrayList_init_$Create$_0 = kotlin_kotlin.$_$.i;
  var Default_getInstance = kotlin_kotlin.$_$.i4;
  var Plugin_getInstance = kotlin_io_ktor_ktor_client_core.$_$.d;
  var Companion_getInstance_0 = kotlin_io_ktor_ktor_client_core.$_$.c;
  var Plugin_getInstance_0 = kotlin_io_ktor_ktor_client_content_negotiation.$_$.a;
  var json = kotlin_io_ktor_ktor_serialization_kotlinx_json.$_$.a;
  var HttpClient = kotlin_io_ktor_ktor_client_core.$_$.u;
  var HashMap_init_$Create$ = kotlin_kotlin.$_$.m;
  var emptyList = kotlin_kotlin.$_$.f6;
  var trimMargin = kotlin_kotlin.$_$.md;
  var FC = kotlin_org_jetbrains_kotlin_wrappers_kotlin_react.$_$.a;
  var create = kotlin_org_jetbrains_kotlin_wrappers_kotlin_react.$_$.b;
  var ReactHTML_getInstance = kotlin_org_jetbrains_kotlin_wrappers_kotlin_react_dom.$_$.a;
  var KMutableProperty0 = kotlin_kotlin.$_$.kb;
  var getLocalDelegateReference = kotlin_kotlin.$_$.q9;
  var CoroutineScope = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.c1;
  var MainScope = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.g1;
  var launch = kotlin_org_jetbrains_kotlinx_kotlinx_coroutines_core.$_$.o1;
  var mutableListOf = kotlin_kotlin.$_$.h7;
  var Companion_getInstance_1 = kotlin_io_ktor_ktor_http.$_$.j;
  var ParametersBuilder = kotlin_io_ktor_ktor_http.$_$.a1;
  var url = kotlin_io_ktor_ktor_client_core.$_$.q;
  var Companion_getInstance_2 = kotlin_io_ktor_ktor_http.$_$.i;
  var Error_0 = kotlin_kotlin.$_$.wd;
  var arrayIterator = kotlin_kotlin.$_$.c9;
  var first = kotlin_kotlin.$_$.n6;
  var bodyAsText = kotlin_io_ktor_ktor_client_core.$_$.b;
  var serializer_0 = kotlin_org_jetbrains_kotlinx_kotlinx_serialization_core.$_$.y2;
  var KotlinLoggingConfiguration_getInstance = kotlin_io_github_microutils_kotlin_logging.$_$.b;
  var KotlinLoggingLevel_DEBUG_getInstance = kotlin_io_github_microutils_kotlin_logging.$_$.a;
  var useEffect = kotlin_org_jetbrains_kotlin_wrappers_kotlin_react_core.$_$.a;
  var toBoolean = kotlin_kotlin.$_$.xc;
  var createElement = kotlin_org_jetbrains_kotlin_wrappers_kotlin_react_legacy.$_$.a;
  var endsWith = kotlin_kotlin.$_$.xb;
  var UnsupportedOperationException_init_$Create$ = kotlin_kotlin.$_$.b2;
  var UnsupportedOperationException = kotlin_kotlin.$_$.te;
  var NullPointerException = kotlin_kotlin.$_$.de;
  var NotImplementedError = kotlin_kotlin.$_$.ce;
  var printStackTrace = kotlin_kotlin.$_$.hf;
  var toList = kotlin_kotlin.$_$.y7;
  var Application_getInstance = kotlin_io_ktor_ktor_http.$_$.b;
  var contentType = kotlin_io_ktor_ktor_http.$_$.k1;
  var isBlank = kotlin_kotlin.$_$.dc;
  var Exception_init_$Create$ = kotlin_kotlin.$_$.i1;
  var numberToInt = kotlin_kotlin.$_$.oa;
  var contentEquals_0 = kotlin_kotlin.$_$.o5;
  var contentHashCode_0 = kotlin_kotlin.$_$.r5;
  var isArray = kotlin_kotlin.$_$.w9;
  var StringBuilder_init_$Create$ = kotlin_kotlin.$_$.c1;
  var joinToString_0 = kotlin_kotlin.$_$.v6;
  var defineProp = kotlin_kotlin.$_$.m9;
  var first_0 = kotlin_kotlin.$_$.o6;
  var HashSet = kotlin_kotlin.$_$.x4;
  var createInvariantKTypeProjection = kotlin_kotlin.$_$.a;
  var get_host = kotlin_io_ktor_ktor_client_core.$_$.o;
  var get_port = kotlin_io_ktor_ktor_client_core.$_$.p;
  var url_0 = kotlin_io_ktor_ktor_client_core.$_$.r;
  var webSocketSession = kotlin_io_ktor_ktor_client_core.$_$.a;
  var Text = kotlin_io_ktor_ktor_websockets.$_$.k;
  var readText = kotlin_io_ktor_ktor_websockets.$_$.o;
  var IllegalStateException_init_$Create$ = kotlin_kotlin.$_$.q1;
  var first_1 = kotlin_kotlin.$_$.m6;
  var firstOrNull = kotlin_kotlin.$_$.k6;
  var HashSet_init_$Create$ = kotlin_kotlin.$_$.p;
  var emptySet = kotlin_kotlin.$_$.h6;
  var setOf = kotlin_kotlin.$_$.q7;
  var drop = kotlin_kotlin.$_$.e6;
  var plus_1 = kotlin_kotlin.$_$.j7;
  var plus_2 = kotlin_kotlin.$_$.i7;
  var getNumberHashCode = kotlin_kotlin.$_$.r9;
  var toMutableList_0 = kotlin_kotlin.$_$.d8;
  var to = kotlin_kotlin.$_$.kf;
  var linkedMapOf = kotlin_kotlin.$_$.c7;
  var NoSuchElementException_init_$Create$ = kotlin_kotlin.$_$.w1;
  var sortedWith = kotlin_kotlin.$_$.u7;
  var compareValues = kotlin_kotlin.$_$.j8;
  var hashMapOf = kotlin_kotlin.$_$.q6;
  var Exception = kotlin_kotlin.$_$.xd;
  var copyToArray = kotlin_kotlin.$_$.c6;
  var formData = kotlin_io_ktor_ktor_client_core.$_$.l;
  var MultiPartFormDataContent = kotlin_io_ktor_ktor_client_core.$_$.k;
  var Companion_getInstance_3 = kotlin_io_ktor_ktor_http.$_$.e;
  var HeadersBuilder = kotlin_io_ktor_ktor_http.$_$.y;
  var HttpHeaders_getInstance = kotlin_io_ktor_ktor_http.$_$.f;
  var FormPart = kotlin_io_ktor_ktor_client_core.$_$.j;
  var StringBuilder = kotlin_kotlin.$_$.qb;
  //endregion
  //region block: pre-declaration
  setMetadataFor(API, 'API', objectMeta);
  setMetadataFor(Constants, 'Constants', objectMeta);
  setMetadataFor(CryptoACFormField, 'CryptoACFormField', classMeta);
  setMetadataFor(InputType, 'InputType', classMeta, Enum);
  setMetadataFor(Companion, 'Companion', objectMeta, VOID, [SerializerFactory]);
  setMetadataFor(OutcomeCode, 'OutcomeCode', classMeta, Enum, VOID, VOID, {0: Companion_getInstance_4});
  setMetadataFor(SERVER, 'SERVER', objectMeta);
  setMetadataFor($submitFormPatchCOROUTINE$0, '$submitFormPatchCOROUTINE$0', classMeta, CoroutineImpl);
  setMetadataFor(ACServiceParameters, 'ACServiceParameters', interfaceMeta);
  setMetadataFor(ACType, 'ACType', classMeta, Enum);
  setMetadataFor(Companion_0, 'Companion', objectMeta);
  setMetadataFor($serializer, '$serializer', objectMeta, VOID, [GeneratedSerializer]);
  setMetadataFor(ACServiceRBACDynSecParameters, 'ACServiceRBACDynSecParameters', classMeta, VOID, [ACServiceParameters], VOID, {0: $serializer_getInstance});
  setMetadataFor(Companion_1, 'Companion', objectMeta);
  setMetadataFor($serializer_0, '$serializer', objectMeta, VOID, [GeneratedSerializer]);
  setMetadataFor(ACServiceRBACOPAParameters, 'ACServiceRBACOPAParameters', classMeta, VOID, [ACServiceParameters], VOID, {0: $serializer_getInstance_0});
  setMetadataFor(Companion_2, 'Companion', objectMeta);
  setMetadataFor($serializer_1, '$serializer', objectMeta, VOID, [GeneratedSerializer]);
  setMetadataFor(ACServiceRBACXACMLAuthzForceParameters, 'ACServiceRBACXACMLAuthzForceParameters', classMeta, VOID, [ACServiceParameters], VOID, {0: $serializer_getInstance_1});
  setMetadataFor(Companion_3, 'Companion', objectMeta, VOID, [SerializerFactory]);
  setMetadataFor(CoreParameters, 'CoreParameters', classMeta, VOID, VOID, VOID, {0: Companion_getInstance_8});
  setMetadataFor(Companion_4, 'Companion', objectMeta);
  setMetadataFor($serializer_2, '$serializer', objectMeta, VOID, [GeneratedSerializer]);
  setMetadataFor(CoreParametersRBAC, 'CoreParametersRBAC', classMeta, CoreParameters, VOID, VOID, {0: $serializer_getInstance_2});
  setMetadataFor(CoreType, 'CoreType', classMeta, Enum);
  setMetadataFor(Companion_5, 'Companion', objectMeta);
  setMetadataFor($serializer_3, '$serializer', objectMeta, VOID, [GeneratedSerializer]);
  setMetadataFor(MQTTMessage, 'MQTTMessage', classMeta, VOID, VOID, VOID, {0: $serializer_getInstance_3});
  setMetadataFor(Companion_6, 'Companion', objectMeta);
  setMetadataFor($serializer_4, '$serializer', objectMeta, VOID, [GeneratedSerializer]);
  setMetadataFor(AsymKeys, 'AsymKeys', classMeta, VOID, VOID, VOID, {0: $serializer_getInstance_4});
  setMetadataFor(Companion_7, 'Companion', objectMeta, VOID, [SerializerFactory]);
  setMetadataFor(AsymKeysType, 'AsymKeysType', classMeta, Enum, VOID, VOID, {0: Companion_getInstance_12});
  setMetadataFor(Companion_8, 'Companion', objectMeta, VOID, [SerializerFactory]);
  setMetadataFor(CryptoType, 'CryptoType', classMeta, Enum, VOID, VOID, {0: Companion_getInstance_13});
  setMetadataFor($serializer_5, '$serializer', objectMeta, VOID, [GeneratedSerializer]);
  setMetadataFor(EncryptedSymKey, 'EncryptedSymKey', classMeta, VOID, VOID, VOID, {0: $serializer_getInstance_5});
  setMetadataFor(DMServiceParameters, 'DMServiceParameters', interfaceMeta);
  setMetadataFor(DMServiceRemoteUPParameters, 'DMServiceRemoteUPParameters', interfaceMeta, VOID, [DMServiceParameters]);
  setMetadataFor(DMType, 'DMType', classMeta, Enum);
  setMetadataFor(Companion_9, 'Companion', objectMeta);
  setMetadataFor($serializer_6, '$serializer', objectMeta, VOID, [GeneratedSerializer]);
  setMetadataFor(DMServiceCryptoACParameters, 'DMServiceCryptoACParameters', classMeta, VOID, [DMServiceRemoteUPParameters], VOID, {0: $serializer_getInstance_6});
  setMetadataFor(Companion_10, 'Companion', objectMeta);
  setMetadataFor($serializer_7, '$serializer', objectMeta, VOID, [GeneratedSerializer]);
  setMetadataFor(DMServiceMQTTParameters, 'DMServiceMQTTParameters', classMeta, VOID, [DMServiceRemoteUPParameters], VOID, {0: $serializer_getInstance_7});
  setMetadataFor(MMServiceParameters, 'MMServiceParameters', interfaceMeta);
  setMetadataFor(MMServiceRemoteUPParameters, 'MMServiceRemoteUPParameters', interfaceMeta, VOID, [MMServiceParameters]);
  setMetadataFor(MMType, 'MMType', classMeta, Enum);
  setMetadataFor(Companion_11, 'Companion', objectMeta);
  setMetadataFor($serializer_8, '$serializer', objectMeta, VOID, [GeneratedSerializer]);
  setMetadataFor(MMServiceABACMySQLParameters, 'MMServiceABACMySQLParameters', classMeta, VOID, [MMServiceRemoteUPParameters], VOID, {0: $serializer_getInstance_8});
  setMetadataFor(Companion_12, 'Companion', objectMeta);
  setMetadataFor($serializer_9, '$serializer', objectMeta, VOID, [GeneratedSerializer]);
  setMetadataFor(MMServiceRBACMySQLParameters, 'MMServiceRBACMySQLParameters', classMeta, VOID, [MMServiceRemoteUPParameters], VOID, {0: $serializer_getInstance_9});
  setMetadataFor(Companion_13, 'Companion', objectMeta);
  setMetadataFor($serializer_10, '$serializer', objectMeta, VOID, [GeneratedSerializer]);
  setMetadataFor(MMServiceRedisParameters, 'MMServiceRedisParameters', classMeta, VOID, [MMServiceRemoteUPParameters], VOID, {0: $serializer_getInstance_10});
  setMetadataFor(Companion_14, 'Companion', objectMeta, VOID, [SerializerFactory]);
  setMetadataFor(Element, 'Element', classMeta, VOID, VOID, VOID, {0: Companion_getInstance_19});
  setMetadataFor(RBACElementType, 'RBACElementType', classMeta, Enum);
  setMetadataFor(Companion_15, 'Companion', objectMeta);
  setMetadataFor($serializer_11, '$serializer', objectMeta, VOID, [GeneratedSerializer]);
  setMetadataFor(Tuple, 'Tuple', classMeta, Element, VOID, VOID, {0: Companion_getInstance_23});
  setMetadataFor(PermissionTuple, 'PermissionTuple', classMeta, Tuple, VOID, VOID, {0: $serializer_getInstance_11});
  setMetadataFor(Companion_16, 'Companion', objectMeta, VOID, [SerializerFactory]);
  setMetadataFor(PermissionType, 'PermissionType', classMeta, Enum, VOID, VOID, {0: Companion_getInstance_21});
  setMetadataFor(Companion_17, 'Companion', objectMeta);
  setMetadataFor($serializer_12, '$serializer', objectMeta, VOID, [GeneratedSerializer]);
  setMetadataFor(RoleTuple, 'RoleTuple', classMeta, Tuple, VOID, VOID, {0: $serializer_getInstance_12});
  setMetadataFor(Companion_18, 'Companion', objectMeta, VOID, [SerializerFactory]);
  setMetadataFor(Companion_19, 'Companion', objectMeta, VOID, [SerializerFactory]);
  setMetadataFor(EnforcementType, 'EnforcementType', classMeta, Enum, VOID, VOID, {0: Companion_getInstance_24});
  setMetadataFor(Companion_20, 'Companion', objectMeta);
  setMetadataFor($serializer_13, '$serializer', objectMeta, VOID, [GeneratedSerializer]);
  setMetadataFor(UnitElement, 'UnitElement', classMeta, Element, VOID, VOID, {0: Companion_getInstance_27});
  setMetadataFor(Resource, 'Resource', classMeta, UnitElement, VOID, VOID, {0: $serializer_getInstance_13});
  setMetadataFor(Companion_21, 'Companion', objectMeta);
  setMetadataFor($serializer_14, '$serializer', objectMeta, VOID, [GeneratedSerializer]);
  setMetadataFor(UnitElementWithKeys, 'UnitElementWithKeys', classMeta, UnitElement, VOID, VOID, {0: Companion_getInstance_28});
  setMetadataFor(Role, 'Role', classMeta, UnitElementWithKeys, VOID, VOID, {0: $serializer_getInstance_14});
  setMetadataFor(Companion_22, 'Companion', objectMeta, VOID, [SerializerFactory]);
  setMetadataFor(UnitElementStatus, 'UnitElementStatus', classMeta, Enum);
  setMetadataFor(Companion_23, 'Companion', objectMeta, VOID, [SerializerFactory]);
  setMetadataFor(Companion_24, 'Companion', objectMeta);
  setMetadataFor($serializer_15, '$serializer', objectMeta, VOID, [GeneratedSerializer]);
  setMetadataFor(User, 'User', classMeta, UnitElementWithKeys, VOID, VOID, {0: $serializer_getInstance_15});
  setMetadataFor(RMServiceParameters, 'RMServiceParameters', interfaceMeta);
  setMetadataFor(RMServiceRemoteUPParameters, 'RMServiceRemoteUPParameters', interfaceMeta, VOID, [RMServiceParameters]);
  setMetadataFor(RMType, 'RMType', classMeta, Enum);
  setMetadataFor(Companion_25, 'Companion', objectMeta);
  setMetadataFor($serializer_16, '$serializer', objectMeta, VOID, [GeneratedSerializer]);
  setMetadataFor(RMServiceRBACCryptoACParameters, 'RMServiceRBACCryptoACParameters', classMeta, VOID, [RMServiceRemoteUPParameters], VOID, {0: $serializer_getInstance_16});
  setMetadataFor(AppState, 'AppState', classMeta);
  setMetadataFor(UIType, 'UIType', classMeta, Enum);
  setMetadataFor(App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$slambda, 'App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, [1]);
  setMetadataFor(App$lambda$lambda$lambda$lambda$lambda$lambda$slambda, 'App$lambda$lambda$lambda$lambda$lambda$lambda$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, [1]);
  setMetadataFor(App$lambda$lambda$lambda$lambda$lambda$lambda$slambda_1, 'App$lambda$lambda$lambda$lambda$lambda$lambda$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, [1]);
  setMetadataFor(App$lambda$lambda$lambda$slambda, 'App$lambda$lambda$lambda$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, [1]);
  setMetadataFor($profileWasCreatedOrModifiedCOROUTINE$1, '$profileWasCreatedOrModifiedCOROUTINE$1', classMeta, CoroutineImpl);
  setMetadataFor($resetAppStateCOROUTINE$2, '$resetAppStateCOROUTINE$2', classMeta, CoroutineImpl);
  setMetadataFor($submitLoginCOROUTINE$3, '$submitLoginCOROUTINE$3', classMeta, CoroutineImpl);
  setMetadataFor($submitLogoutCOROUTINE$4, '$submitLogoutCOROUTINE$4', classMeta, CoroutineImpl);
  setMetadataFor($changeUserIsLoggedCOROUTINE$5, '$changeUserIsLoggedCOROUTINE$5', classMeta, CoroutineImpl);
  setMetadataFor($getProfileFromCryptoACCOROUTINE$6, '$getProfileFromCryptoACCOROUTINE$6', classMeta, CoroutineImpl);
  setMetadataFor(Themes, 'Themes', objectMeta);
  setMetadataFor(CryptoACAlertSeverity, 'CryptoACAlertSeverity', classMeta, Enum);
  setMetadataFor(CryptoACButtonAndIconData, 'CryptoACButtonAndIconData', classMeta);
  setMetadataFor(CryptoACButtonAndIconGroupState, 'CryptoACButtonAndIconGroupState', classMeta);
  setMetadataFor(CryptoACCheckboxState, 'CryptoACCheckboxState', classMeta);
  setMetadataFor(CryptoACEditProfileFormState, 'CryptoACEditProfileFormState', classMeta);
  setMetadataFor(submitEditProfileForm$slambda, 'submitEditProfileForm$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, [1]);
  setMetadataFor(CryptoACFormData, 'CryptoACFormData', classMeta);
  setMetadataFor(handleCryptoACFormSubmit$slambda, 'handleCryptoACFormSubmit$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, [1]);
  setMetadataFor(CryptoACPaperState, 'CryptoACPaperState', classMeta);
  setMetadataFor(CryptoACRadioGroupState, 'CryptoACRadioGroupState', classMeta);
  setMetadataFor(CryptoACRadioOption, 'CryptoACRadioOption', classMeta);
  setMetadataFor(CryptoACSelectState, 'CryptoACSelectState', classMeta);
  setMetadataFor(CryptoACSliderState, 'CryptoACSliderState', classMeta);
  setMetadataFor(CryptoACTextFieldState, 'CryptoACTextFieldState', classMeta);
  setMetadataFor(CryptoACTableState, 'CryptoACTableState', classMeta);
  setMetadataFor(CryptoACTableColumn, 'CryptoACTableColumn', classMeta);
  setMetadataFor(CryptoACTableData, 'CryptoACTableData', classMeta);
  setMetadataFor(RBACCryptoACDashboardState, 'RBACCryptoACDashboardState', classMeta);
  setMetadataFor(RBACCryptoACDashboard$lambda$slambda, 'RBACCryptoACDashboard$lambda$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, [1]);
  setMetadataFor(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda, 'RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, [1]);
  setMetadataFor(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_1, 'RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, [1]);
  setMetadataFor(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_3, 'RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, [1]);
  setMetadataFor(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_5, 'RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, [1]);
  setMetadataFor(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_7, 'RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, [1]);
  setMetadataFor(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_9, 'RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, [1]);
  setMetadataFor(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_11, 'RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, [1]);
  setMetadataFor(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_13, 'RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, [1]);
  setMetadataFor($getElementsCOROUTINE$7, '$getElementsCOROUTINE$7', classMeta, CoroutineImpl);
  setMetadataFor(MQTTDashboardState, 'MQTTDashboardState', classMeta);
  setMetadataFor(RBACMQTTDashboard$lambda$slambda, 'RBACMQTTDashboard$lambda$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, [1]);
  setMetadataFor(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda, 'RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, [1]);
  setMetadataFor(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_1, 'RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, [1]);
  setMetadataFor(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_3, 'RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, [1]);
  setMetadataFor(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_5, 'RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, [1]);
  setMetadataFor(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_7, 'RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, [1]);
  setMetadataFor(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_9, 'RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, [1]);
  setMetadataFor(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_11, 'RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, [1]);
  setMetadataFor(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_13, 'RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, [1]);
  setMetadataFor(ModuleItemState, 'ModuleItemState', classMeta);
  setMetadataFor(NewProfileState, 'NewProfileState', classMeta);
  setMetadataFor(Companion_26, 'Companion', objectMeta);
  setMetadataFor(Architecture, 'Architecture', classMeta);
  setMetadataFor(Assignment, 'Assignment', classMeta);
  setMetadataFor(Attacker, 'Attacker', classMeta);
  setMetadataFor(EntityIconState, 'EntityIconState', classMeta);
  setMetadataFor(Requirement, 'Requirement', classMeta);
  setMetadataFor(TradeOffBoardState, 'TradeOffBoardState', classMeta);
  setMetadataFor(Scenario, 'Scenario', classMeta, Enum);
  setMetadataFor(Algorithm, 'Algorithm', classMeta, Enum);
  setMetadataFor(Metric, 'Metric', classMeta, Enum);
  setMetadataFor(Domains, 'Domains', classMeta, Enum);
  setMetadataFor(DomainsWithChannels, 'DomainsWithChannels', classMeta, Enum);
  setMetadataFor(Entities, 'Entities', classMeta, Enum);
  setMetadataFor(EntitiesWithChannels, 'EntitiesWithChannels', classMeta, Enum);
  setMetadataFor(Attackers, 'Attackers', classMeta, Enum);
  setMetadataFor(Likelihood, 'Likelihood', classMeta, Enum);
  setMetadataFor(Impact, 'Impact', classMeta, Enum);
  setMetadataFor(Threshold, 'Threshold', classMeta, Enum);
  setMetadataFor(SecurityRequirements, 'SecurityRequirements', classMeta, Enum);
  setMetadataFor(PerformanceRequirements, 'PerformanceRequirements', classMeta, Enum);
  setMetadataFor(sam$kotlin_Comparator$0, 'sam$kotlin_Comparator$0', classMeta);
  setMetadataFor(TrustAssumptionsLikelihoodState, 'TrustAssumptionsLikelihoodState', classMeta);
  setMetadataFor(submitCryptoACForm$slambda, 'submitCryptoACForm$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, [1]);
  setMetadataFor(submitCryptoACFormWithBinaryData$slambda$lambda$slambda, 'submitCryptoACFormWithBinaryData$slambda$lambda$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, [1]);
  setMetadataFor(submitCryptoACFormWithBinaryData$slambda, 'submitCryptoACFormWithBinaryData$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, [1]);
  setMetadataFor(submitCryptoACFormInNewTab$slambda, 'submitCryptoACFormInNewTab$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, [1]);
  setMetadataFor(submitCryptoACForm$slambda_1, 'submitCryptoACForm$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, [1]);
  setMetadataFor(callbackShowOutcomeCode$slambda, 'callbackShowOutcomeCode$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, [1]);
  setMetadataFor(callbackDownloadUserProfile$slambda, 'callbackDownloadUserProfile$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, [1]);
  setMetadataFor(callbackSubscribeToTopic$slambda, 'callbackSubscribeToTopic$slambda', classMeta, CoroutineImpl, VOID, VOID, VOID, [1]);
  //endregion
  function API() {
    API_instance = this;
    this.y4r_1 = 'https://';
    this.z4r_1 = '/v1/';
    this.a4s_1 = '/v1/';
    this.b4s_1 = '/v1/CryptoAC/';
    this.c4s_1 = '/v1/rm/';
    this.d4s_1 = '/v1/dm/';
    this.e4s_1 = '/v1/';
    this.f4s_1 = '/authzforce-ce/domains/';
    this.g4s_1 = 'users/{Core}/';
    this.h4s_1 = 'roles/{Core}/';
    this.i4s_1 = 'resources/{Core}/';
    this.j4s_1 = 'assignments/{Core}/';
    this.k4s_1 = 'permissions/{Core}/';
    this.l4s_1 = '/v1/profile/{Core}/';
    this.m4s_1 = '/login/';
    this.n4s_1 = '/logout/';
    this.o4s_1 = '/v1/policies/rbac';
    this.p4s_1 = '/v1/data/rbac';
    this.q4s_1 = '/v1/data/rbac/allow';
  }
  var API_instance;
  function API_getInstance() {
    if (API_instance == null)
      new API();
    return API_instance;
  }
  function Constants() {
    Constants_instance = this;
    this.r4s_1 = 'admin';
  }
  var Constants_instance;
  function Constants_getInstance() {
    if (Constants_instance == null)
      new Constants();
    return Constants_instance;
  }
  function CryptoACFormField(name, label, type, options, defaultValue, className, disabled) {
    options = options === VOID ? null : options;
    defaultValue = defaultValue === VOID ? null : defaultValue;
    className = className === VOID ? null : className;
    disabled = disabled === VOID ? false : disabled;
    this.s4s_1 = name;
    this.t4s_1 = label;
    this.u4s_1 = type;
    this.v4s_1 = options;
    this.w4s_1 = defaultValue;
    this.x4s_1 = className;
    this.y4s_1 = disabled;
  }
  protoOf(CryptoACFormField).toString = function () {
    return 'CryptoACFormField(name=' + this.s4s_1 + ', label=' + this.t4s_1 + ', type=' + this.u4s_1 + ', options=' + this.v4s_1 + ', defaultValue=' + this.w4s_1 + ', className=' + this.x4s_1 + ', disabled=' + this.y4s_1 + ')';
  };
  protoOf(CryptoACFormField).hashCode = function () {
    var result = getStringHashCode(this.s4s_1);
    result = imul(result, 31) + getStringHashCode(this.t4s_1) | 0;
    result = imul(result, 31) + this.u4s_1.hashCode() | 0;
    result = imul(result, 31) + (this.v4s_1 == null ? 0 : hashCode(this.v4s_1)) | 0;
    result = imul(result, 31) + (this.w4s_1 == null ? 0 : getStringHashCode(this.w4s_1)) | 0;
    result = imul(result, 31) + (this.x4s_1 == null ? 0 : getStringHashCode(this.x4s_1)) | 0;
    result = imul(result, 31) + (this.y4s_1 | 0) | 0;
    return result;
  };
  protoOf(CryptoACFormField).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CryptoACFormField))
      return false;
    var tmp0_other_with_cast = other instanceof CryptoACFormField ? other : THROW_CCE();
    if (!(this.s4s_1 === tmp0_other_with_cast.s4s_1))
      return false;
    if (!(this.t4s_1 === tmp0_other_with_cast.t4s_1))
      return false;
    if (!this.u4s_1.equals(tmp0_other_with_cast.u4s_1))
      return false;
    if (!equals(this.v4s_1, tmp0_other_with_cast.v4s_1))
      return false;
    if (!(this.w4s_1 == tmp0_other_with_cast.w4s_1))
      return false;
    if (!(this.x4s_1 == tmp0_other_with_cast.x4s_1))
      return false;
    if (!(this.y4s_1 === tmp0_other_with_cast.y4s_1))
      return false;
    return true;
  };
  var InputType_button_instance;
  var InputType_checkBox_instance;
  var InputType_color_instance;
  var InputType_date_instance;
  var InputType_dateTime_instance;
  var InputType_dateTimeLocal_instance;
  var InputType_email_instance;
  var InputType_file_instance;
  var InputType_hidden_instance;
  var InputType_image_instance;
  var InputType_month_instance;
  var InputType_number_instance;
  var InputType_password_instance;
  var InputType_radio_instance;
  var InputType_range_instance;
  var InputType_reset_instance;
  var InputType_search_instance;
  var InputType_submit_instance;
  var InputType_text_instance;
  var InputType_tel_instance;
  var InputType_time_instance;
  var InputType_url_instance;
  var InputType_week_instance;
  var InputType_select_instance;
  var InputType_entriesInitialized;
  function InputType_initEntries() {
    if (InputType_entriesInitialized)
      return Unit_getInstance();
    InputType_entriesInitialized = true;
    InputType_button_instance = new InputType('button', 0, 'button');
    InputType_checkBox_instance = new InputType('checkBox', 1, 'checkbox');
    InputType_color_instance = new InputType('color', 2, 'color');
    InputType_date_instance = new InputType('date', 3, 'date');
    InputType_dateTime_instance = new InputType('dateTime', 4, 'datetime');
    InputType_dateTimeLocal_instance = new InputType('dateTimeLocal', 5, 'datetime-local');
    InputType_email_instance = new InputType('email', 6, 'email');
    InputType_file_instance = new InputType('file', 7, 'file');
    InputType_hidden_instance = new InputType('hidden', 8, 'hidden');
    InputType_image_instance = new InputType('image', 9, 'image');
    InputType_month_instance = new InputType('month', 10, 'month');
    InputType_number_instance = new InputType('number', 11, 'number');
    InputType_password_instance = new InputType('password', 12, 'password');
    InputType_radio_instance = new InputType('radio', 13, 'radio');
    InputType_range_instance = new InputType('range', 14, 'range');
    InputType_reset_instance = new InputType('reset', 15, 'reset');
    InputType_search_instance = new InputType('search', 16, 'search');
    InputType_submit_instance = new InputType('submit', 17, 'submit');
    InputType_text_instance = new InputType('text', 18, 'text');
    InputType_tel_instance = new InputType('tel', 19, 'tel');
    InputType_time_instance = new InputType('time', 20, 'time');
    InputType_url_instance = new InputType('url', 21, 'url');
    InputType_week_instance = new InputType('week', 22, 'week');
    InputType_select_instance = new InputType('select', 23, 'select');
  }
  function InputType(name, ordinal, realValue) {
    Enum.call(this, name, ordinal);
    this.b4t_1 = realValue;
  }
  function InputType_checkBox_getInstance() {
    InputType_initEntries();
    return InputType_checkBox_instance;
  }
  function InputType_file_getInstance() {
    InputType_initEntries();
    return InputType_file_instance;
  }
  function InputType_number_getInstance() {
    InputType_initEntries();
    return InputType_number_instance;
  }
  function InputType_password_getInstance() {
    InputType_initEntries();
    return InputType_password_instance;
  }
  function InputType_radio_getInstance() {
    InputType_initEntries();
    return InputType_radio_instance;
  }
  function InputType_submit_getInstance() {
    InputType_initEntries();
    return InputType_submit_instance;
  }
  function InputType_text_getInstance() {
    InputType_initEntries();
    return InputType_text_instance;
  }
  function InputType_select_getInstance() {
    InputType_initEntries();
    return InputType_select_instance;
  }
  function _get_$cachedSerializer__te6jhj($this) {
    return $this.c4t_1.q();
  }
  function OutcomeCode$Companion$_anonymous__fdsh1s() {
    return createSimpleEnumSerializer('eu.fbk.st.cryptoac.OutcomeCode', values());
  }
  var OutcomeCode_CODE_000_SUCCESS_instance;
  var OutcomeCode_CODE_001_USER_ALREADY_EXISTS_instance;
  var OutcomeCode_CODE_002_ROLE_ALREADY_EXISTS_instance;
  var OutcomeCode_CODE_003_RESOURCE_ALREADY_EXISTS_instance;
  var OutcomeCode_CODE_004_USER_NOT_FOUND_instance;
  var OutcomeCode_CODE_005_ROLE_NOT_FOUND_instance;
  var OutcomeCode_CODE_006_RESOURCE_NOT_FOUND_instance;
  var OutcomeCode_CODE_007_ROLETUPLE_NOT_FOUND_instance;
  var OutcomeCode_CODE_008_PERMISSIONTUPLE_NOT_FOUND_instance;
  var OutcomeCode_CODE_010_ROLETUPLE_ALREADY_EXISTS_instance;
  var OutcomeCode_CODE_011_PERMISSIONTUPLE_ALREADY_EXISTS_instance;
  var OutcomeCode_CODE_013_USER_WAS_DELETED_instance;
  var OutcomeCode_CODE_014_ROLE_WAS_DELETED_instance;
  var OutcomeCode_CODE_015_RESOURCE_WAS_DELETED_instance;
  var OutcomeCode_CODE_016_INVALID_PERMISSION_instance;
  var OutcomeCode_CODE_017_INVALID_VERSION_NUMBER_instance;
  var OutcomeCode_CODE_018_SERVICE_CONFIGURATION_PARAMETERS_instance;
  var OutcomeCode_CODE_019_MISSING_PARAMETERS_instance;
  var OutcomeCode_CODE_020_INVALID_PARAMETER_instance;
  var OutcomeCode_CODE_021_RM_CONFIGURATION_instance;
  var OutcomeCode_CODE_022_ADMIN_CANNOT_BE_MODIFIED_instance;
  var OutcomeCode_CODE_023_USER_CANNOT_BE_MODIFIED_instance;
  var OutcomeCode_CODE_024_RESOURCE_DELETE_instance;
  var OutcomeCode_CODE_025_RESOURCE_WRITE_instance;
  var OutcomeCode_CODE_026_TUPLE_FORMAT_instance;
  var OutcomeCode_CODE_027_AC_ENFORCEMENT_INCONSISTENT_instance;
  var OutcomeCode_CODE_028_OPA_POLICY_CREATION_instance;
  var OutcomeCode_CODE_029_OPA_POLICY_UPDATE_instance;
  var OutcomeCode_CODE_030_OPA_DOCUMENT_DOWNLOAD_instance;
  var OutcomeCode_CODE_031_LOCK_CALLED_IN_INCONSISTENT_STATUS_instance;
  var OutcomeCode_CODE_032_UNLOCK_CALLED_IN_INCONSISTENT_STATUS_instance;
  var OutcomeCode_CODE_033_ROLLBACK_CALLED_IN_INCONSISTENT_STATUS_instance;
  var OutcomeCode_CODE_034_UNLOCK_FAILED_instance;
  var OutcomeCode_CODE_035_ADMIN_ALREADY_INITIALIZED_instance;
  var OutcomeCode_CODE_036_ADMIN_NAME_instance;
  var OutcomeCode_CODE_037_FORBIDDEN_instance;
  var OutcomeCode_CODE_038_UNAUTHORIZED_instance;
  var OutcomeCode_CODE_039_PROFILE_NOT_FOUND_instance;
  var OutcomeCode_CODE_040_MALFORMED_PROFILE_instance;
  var OutcomeCode_CODE_041_UR_ASSIGNMENTS_NOT_FOUND_instance;
  var OutcomeCode_CODE_042_PA_ASSIGNMENTS_NOT_FOUND_instance;
  var OutcomeCode_CODE_043_RM_CONNECTION_TIMEOUT_instance;
  var OutcomeCode_CODE_044_DM_CONNECTION_TIMEOUT_instance;
  var OutcomeCode_CODE_045_MM_CONNECTION_TIMEOUT_instance;
  var OutcomeCode_CODE_046_CRYPTOAC_CONNECTION_TIMEOUT_instance;
  var OutcomeCode_CODE_047_AC_CONNECTION_TIMEOUT_instance;
  var OutcomeCode_CODE_048_HTTP_METHOD_NOT_SUPPORTED_instance;
  var OutcomeCode_CODE_049_UNEXPECTED_instance;
  var OutcomeCode_CODE_050_FUNCTIONALITY_UNDER_CONSTRUCTION_instance;
  var OutcomeCode_CODE_051_LOGIN_REQUIRED_instance;
  var OutcomeCode_CODE_052_USER_ALREADY_INITIALIZED_instance;
  var OutcomeCode_CODE_053_USER_IS_INCOMPLETE_instance;
  var OutcomeCode_CODE_054_CREATE_USER_MM_instance;
  var OutcomeCode_CODE_055_ACCESS_DENIED_TO_MM_instance;
  var OutcomeCode_CODE_056_DELETE_USER_MM_instance;
  var OutcomeCode_CODE_057_SERVICE_TYPE_UPDATED_instance;
  var OutcomeCode_CODE_058_INCONSISTENT_STATUS_DELETE_TEMPORARY_RESOURCE_IN_DM_instance;
  var OutcomeCode_CODE_059_ACCESS_DENIED_TO_DM_instance;
  var OutcomeCode_CODE_060_HTTP_CONTENT_TYPE_NOT_SUPPORTED_instance;
  var OutcomeCode_CODE_061_WRONG_PARAMETERS_FOR_CORE_instance;
  var OutcomeCode_CODE_062_ALREADY_LOGGED_IN_WITH_DIFFERENT_USERNAME_instance;
  var OutcomeCode_CODE_063_ACCESS_DENIED_TO_AC_instance;
  var OutcomeCode_CODE_062_UR_ASSIGNMENTS_ALREADY_EXISTS_instance;
  var OutcomeCode_CODE_063_PA_ASSIGNMENTS_ALREADY_EXISTS_instance;
  var OutcomeCode_CODE_064_DELETE_ATTRIBUTES_CAUSES_EMPTY_ACCESS_STRUCTURE_instance;
  var OutcomeCode_CODE_065_ATTRIBUTE_ALREADY_EXISTS_instance;
  var OutcomeCode_CODE_066_ATTRIBUTE_NOT_FOUND_instance;
  var OutcomeCode_CODE_067_ATTRIBUTE_WAS_DELETED_instance;
  var OutcomeCode_CODE_068_ATTRIBUTETUPLE_ALREADY_EXISTS_instance;
  var OutcomeCode_CODE_069_ACCESSSTRUCTURETUPLE_ALREADY_EXISTS_instance;
  var OutcomeCode_CODE_070_ATTRIBUTETUPLE_NOT_FOUND_instance;
  var OutcomeCode_CODE_071_ACCESSSTRUCTURETUPLE_NOT_FOUND_instance;
  var OutcomeCode_CODE_072_MPK_ALREADY_INITIALIZED_instance;
  var OutcomeCode_CODE_073_ABE_KEY_NOT_FOUND_instance;
  var OutcomeCode_CODE_074_CANNOT_REVOKE_LAST_ACCESS_STRUCTURE_TUPLE_instance;
  var OutcomeCode_CODE_075_DM_CONFIGURATION_instance;
  var OutcomeCode_CODE_076_OPA_POLICY_EVAL_instance;
  var OutcomeCode_CODE_077_SERVICE_ALREADY_CONFIGURED_instance;
  var OutcomeCode_CODE_078_XACML_CONFIGURATION_instance;
  var OutcomeCode_CODE_079_XACML_DOMAIN_QUERY_instance;
  var OutcomeCode_CODE_080_XACML_PAP_instance;
  var OutcomeCode_CODE_081_XACML_PAP_POLICY_NOT_FOUND_instance;
  var OutcomeCode_CODE_082_XACML_PDP_instance;
  var OutcomeCode_CODE_083_XACML_PDP_UNAUTHORIZED_instance;
  var OutcomeCode_CODE_084_UNSUPPORTED_DYNSEC_ERROR_instance;
  function Companion() {
    Companion_instance = this;
    var tmp = this;
    var tmp_0 = LazyThreadSafetyMode_PUBLICATION_getInstance();
    tmp.c4t_1 = lazy(tmp_0, OutcomeCode$Companion$_anonymous__fdsh1s);
  }
  protoOf(Companion).p37 = function () {
    return _get_$cachedSerializer__te6jhj(this);
  };
  protoOf(Companion).h2u = function (typeParamsSerializers) {
    return this.p37();
  };
  var Companion_instance;
  function Companion_getInstance_4() {
    OutcomeCode_initEntries();
    if (Companion_instance == null)
      new Companion();
    return Companion_instance;
  }
  function values() {
    return [OutcomeCode_CODE_000_SUCCESS_getInstance(), OutcomeCode_CODE_001_USER_ALREADY_EXISTS_getInstance(), OutcomeCode_CODE_002_ROLE_ALREADY_EXISTS_getInstance(), OutcomeCode_CODE_003_RESOURCE_ALREADY_EXISTS_getInstance(), OutcomeCode_CODE_004_USER_NOT_FOUND_getInstance(), OutcomeCode_CODE_005_ROLE_NOT_FOUND_getInstance(), OutcomeCode_CODE_006_RESOURCE_NOT_FOUND_getInstance(), OutcomeCode_CODE_007_ROLETUPLE_NOT_FOUND_getInstance(), OutcomeCode_CODE_008_PERMISSIONTUPLE_NOT_FOUND_getInstance(), OutcomeCode_CODE_010_ROLETUPLE_ALREADY_EXISTS_getInstance(), OutcomeCode_CODE_011_PERMISSIONTUPLE_ALREADY_EXISTS_getInstance(), OutcomeCode_CODE_013_USER_WAS_DELETED_getInstance(), OutcomeCode_CODE_014_ROLE_WAS_DELETED_getInstance(), OutcomeCode_CODE_015_RESOURCE_WAS_DELETED_getInstance(), OutcomeCode_CODE_016_INVALID_PERMISSION_getInstance(), OutcomeCode_CODE_017_INVALID_VERSION_NUMBER_getInstance(), OutcomeCode_CODE_018_SERVICE_CONFIGURATION_PARAMETERS_getInstance(), OutcomeCode_CODE_019_MISSING_PARAMETERS_getInstance(), OutcomeCode_CODE_020_INVALID_PARAMETER_getInstance(), OutcomeCode_CODE_021_RM_CONFIGURATION_getInstance(), OutcomeCode_CODE_022_ADMIN_CANNOT_BE_MODIFIED_getInstance(), OutcomeCode_CODE_023_USER_CANNOT_BE_MODIFIED_getInstance(), OutcomeCode_CODE_024_RESOURCE_DELETE_getInstance(), OutcomeCode_CODE_025_RESOURCE_WRITE_getInstance(), OutcomeCode_CODE_026_TUPLE_FORMAT_getInstance(), OutcomeCode_CODE_027_AC_ENFORCEMENT_INCONSISTENT_getInstance(), OutcomeCode_CODE_028_OPA_POLICY_CREATION_getInstance(), OutcomeCode_CODE_029_OPA_POLICY_UPDATE_getInstance(), OutcomeCode_CODE_030_OPA_DOCUMENT_DOWNLOAD_getInstance(), OutcomeCode_CODE_031_LOCK_CALLED_IN_INCONSISTENT_STATUS_getInstance(), OutcomeCode_CODE_032_UNLOCK_CALLED_IN_INCONSISTENT_STATUS_getInstance(), OutcomeCode_CODE_033_ROLLBACK_CALLED_IN_INCONSISTENT_STATUS_getInstance(), OutcomeCode_CODE_034_UNLOCK_FAILED_getInstance(), OutcomeCode_CODE_035_ADMIN_ALREADY_INITIALIZED_getInstance(), OutcomeCode_CODE_036_ADMIN_NAME_getInstance(), OutcomeCode_CODE_037_FORBIDDEN_getInstance(), OutcomeCode_CODE_038_UNAUTHORIZED_getInstance(), OutcomeCode_CODE_039_PROFILE_NOT_FOUND_getInstance(), OutcomeCode_CODE_040_MALFORMED_PROFILE_getInstance(), OutcomeCode_CODE_041_UR_ASSIGNMENTS_NOT_FOUND_getInstance(), OutcomeCode_CODE_042_PA_ASSIGNMENTS_NOT_FOUND_getInstance(), OutcomeCode_CODE_043_RM_CONNECTION_TIMEOUT_getInstance(), OutcomeCode_CODE_044_DM_CONNECTION_TIMEOUT_getInstance(), OutcomeCode_CODE_045_MM_CONNECTION_TIMEOUT_getInstance(), OutcomeCode_CODE_046_CRYPTOAC_CONNECTION_TIMEOUT_getInstance(), OutcomeCode_CODE_047_AC_CONNECTION_TIMEOUT_getInstance(), OutcomeCode_CODE_048_HTTP_METHOD_NOT_SUPPORTED_getInstance(), OutcomeCode_CODE_049_UNEXPECTED_getInstance(), OutcomeCode_CODE_050_FUNCTIONALITY_UNDER_CONSTRUCTION_getInstance(), OutcomeCode_CODE_051_LOGIN_REQUIRED_getInstance(), OutcomeCode_CODE_052_USER_ALREADY_INITIALIZED_getInstance(), OutcomeCode_CODE_053_USER_IS_INCOMPLETE_getInstance(), OutcomeCode_CODE_054_CREATE_USER_MM_getInstance(), OutcomeCode_CODE_055_ACCESS_DENIED_TO_MM_getInstance(), OutcomeCode_CODE_056_DELETE_USER_MM_getInstance(), OutcomeCode_CODE_057_SERVICE_TYPE_UPDATED_getInstance(), OutcomeCode_CODE_058_INCONSISTENT_STATUS_DELETE_TEMPORARY_RESOURCE_IN_DM_getInstance(), OutcomeCode_CODE_059_ACCESS_DENIED_TO_DM_getInstance(), OutcomeCode_CODE_060_HTTP_CONTENT_TYPE_NOT_SUPPORTED_getInstance(), OutcomeCode_CODE_061_WRONG_PARAMETERS_FOR_CORE_getInstance(), OutcomeCode_CODE_062_ALREADY_LOGGED_IN_WITH_DIFFERENT_USERNAME_getInstance(), OutcomeCode_CODE_063_ACCESS_DENIED_TO_AC_getInstance(), OutcomeCode_CODE_062_UR_ASSIGNMENTS_ALREADY_EXISTS_getInstance(), OutcomeCode_CODE_063_PA_ASSIGNMENTS_ALREADY_EXISTS_getInstance(), OutcomeCode_CODE_064_DELETE_ATTRIBUTES_CAUSES_EMPTY_ACCESS_STRUCTURE_getInstance(), OutcomeCode_CODE_065_ATTRIBUTE_ALREADY_EXISTS_getInstance(), OutcomeCode_CODE_066_ATTRIBUTE_NOT_FOUND_getInstance(), OutcomeCode_CODE_067_ATTRIBUTE_WAS_DELETED_getInstance(), OutcomeCode_CODE_068_ATTRIBUTETUPLE_ALREADY_EXISTS_getInstance(), OutcomeCode_CODE_069_ACCESSSTRUCTURETUPLE_ALREADY_EXISTS_getInstance(), OutcomeCode_CODE_070_ATTRIBUTETUPLE_NOT_FOUND_getInstance(), OutcomeCode_CODE_071_ACCESSSTRUCTURETUPLE_NOT_FOUND_getInstance(), OutcomeCode_CODE_072_MPK_ALREADY_INITIALIZED_getInstance(), OutcomeCode_CODE_073_ABE_KEY_NOT_FOUND_getInstance(), OutcomeCode_CODE_074_CANNOT_REVOKE_LAST_ACCESS_STRUCTURE_TUPLE_getInstance(), OutcomeCode_CODE_075_DM_CONFIGURATION_getInstance(), OutcomeCode_CODE_076_OPA_POLICY_EVAL_getInstance(), OutcomeCode_CODE_077_SERVICE_ALREADY_CONFIGURED_getInstance(), OutcomeCode_CODE_078_XACML_CONFIGURATION_getInstance(), OutcomeCode_CODE_079_XACML_DOMAIN_QUERY_getInstance(), OutcomeCode_CODE_080_XACML_PAP_getInstance(), OutcomeCode_CODE_081_XACML_PAP_POLICY_NOT_FOUND_getInstance(), OutcomeCode_CODE_082_XACML_PDP_getInstance(), OutcomeCode_CODE_083_XACML_PDP_UNAUTHORIZED_getInstance(), OutcomeCode_CODE_084_UNSUPPORTED_DYNSEC_ERROR_getInstance()];
  }
  var OutcomeCode_entriesInitialized;
  function OutcomeCode_initEntries() {
    if (OutcomeCode_entriesInitialized)
      return Unit_getInstance();
    OutcomeCode_entriesInitialized = true;
    OutcomeCode_CODE_000_SUCCESS_instance = new OutcomeCode('CODE_000_SUCCESS', 0);
    OutcomeCode_CODE_001_USER_ALREADY_EXISTS_instance = new OutcomeCode('CODE_001_USER_ALREADY_EXISTS', 1);
    OutcomeCode_CODE_002_ROLE_ALREADY_EXISTS_instance = new OutcomeCode('CODE_002_ROLE_ALREADY_EXISTS', 2);
    OutcomeCode_CODE_003_RESOURCE_ALREADY_EXISTS_instance = new OutcomeCode('CODE_003_RESOURCE_ALREADY_EXISTS', 3);
    OutcomeCode_CODE_004_USER_NOT_FOUND_instance = new OutcomeCode('CODE_004_USER_NOT_FOUND', 4);
    OutcomeCode_CODE_005_ROLE_NOT_FOUND_instance = new OutcomeCode('CODE_005_ROLE_NOT_FOUND', 5);
    OutcomeCode_CODE_006_RESOURCE_NOT_FOUND_instance = new OutcomeCode('CODE_006_RESOURCE_NOT_FOUND', 6);
    OutcomeCode_CODE_007_ROLETUPLE_NOT_FOUND_instance = new OutcomeCode('CODE_007_ROLETUPLE_NOT_FOUND', 7);
    OutcomeCode_CODE_008_PERMISSIONTUPLE_NOT_FOUND_instance = new OutcomeCode('CODE_008_PERMISSIONTUPLE_NOT_FOUND', 8);
    OutcomeCode_CODE_010_ROLETUPLE_ALREADY_EXISTS_instance = new OutcomeCode('CODE_010_ROLETUPLE_ALREADY_EXISTS', 9);
    OutcomeCode_CODE_011_PERMISSIONTUPLE_ALREADY_EXISTS_instance = new OutcomeCode('CODE_011_PERMISSIONTUPLE_ALREADY_EXISTS', 10);
    OutcomeCode_CODE_013_USER_WAS_DELETED_instance = new OutcomeCode('CODE_013_USER_WAS_DELETED', 11);
    OutcomeCode_CODE_014_ROLE_WAS_DELETED_instance = new OutcomeCode('CODE_014_ROLE_WAS_DELETED', 12);
    OutcomeCode_CODE_015_RESOURCE_WAS_DELETED_instance = new OutcomeCode('CODE_015_RESOURCE_WAS_DELETED', 13);
    OutcomeCode_CODE_016_INVALID_PERMISSION_instance = new OutcomeCode('CODE_016_INVALID_PERMISSION', 14);
    OutcomeCode_CODE_017_INVALID_VERSION_NUMBER_instance = new OutcomeCode('CODE_017_INVALID_VERSION_NUMBER', 15);
    OutcomeCode_CODE_018_SERVICE_CONFIGURATION_PARAMETERS_instance = new OutcomeCode('CODE_018_SERVICE_CONFIGURATION_PARAMETERS', 16);
    OutcomeCode_CODE_019_MISSING_PARAMETERS_instance = new OutcomeCode('CODE_019_MISSING_PARAMETERS', 17);
    OutcomeCode_CODE_020_INVALID_PARAMETER_instance = new OutcomeCode('CODE_020_INVALID_PARAMETER', 18);
    OutcomeCode_CODE_021_RM_CONFIGURATION_instance = new OutcomeCode('CODE_021_RM_CONFIGURATION', 19);
    OutcomeCode_CODE_022_ADMIN_CANNOT_BE_MODIFIED_instance = new OutcomeCode('CODE_022_ADMIN_CANNOT_BE_MODIFIED', 20);
    OutcomeCode_CODE_023_USER_CANNOT_BE_MODIFIED_instance = new OutcomeCode('CODE_023_USER_CANNOT_BE_MODIFIED', 21);
    OutcomeCode_CODE_024_RESOURCE_DELETE_instance = new OutcomeCode('CODE_024_RESOURCE_DELETE', 22);
    OutcomeCode_CODE_025_RESOURCE_WRITE_instance = new OutcomeCode('CODE_025_RESOURCE_WRITE', 23);
    OutcomeCode_CODE_026_TUPLE_FORMAT_instance = new OutcomeCode('CODE_026_TUPLE_FORMAT', 24);
    OutcomeCode_CODE_027_AC_ENFORCEMENT_INCONSISTENT_instance = new OutcomeCode('CODE_027_AC_ENFORCEMENT_INCONSISTENT', 25);
    OutcomeCode_CODE_028_OPA_POLICY_CREATION_instance = new OutcomeCode('CODE_028_OPA_POLICY_CREATION', 26);
    OutcomeCode_CODE_029_OPA_POLICY_UPDATE_instance = new OutcomeCode('CODE_029_OPA_POLICY_UPDATE', 27);
    OutcomeCode_CODE_030_OPA_DOCUMENT_DOWNLOAD_instance = new OutcomeCode('CODE_030_OPA_DOCUMENT_DOWNLOAD', 28);
    OutcomeCode_CODE_031_LOCK_CALLED_IN_INCONSISTENT_STATUS_instance = new OutcomeCode('CODE_031_LOCK_CALLED_IN_INCONSISTENT_STATUS', 29);
    OutcomeCode_CODE_032_UNLOCK_CALLED_IN_INCONSISTENT_STATUS_instance = new OutcomeCode('CODE_032_UNLOCK_CALLED_IN_INCONSISTENT_STATUS', 30);
    OutcomeCode_CODE_033_ROLLBACK_CALLED_IN_INCONSISTENT_STATUS_instance = new OutcomeCode('CODE_033_ROLLBACK_CALLED_IN_INCONSISTENT_STATUS', 31);
    OutcomeCode_CODE_034_UNLOCK_FAILED_instance = new OutcomeCode('CODE_034_UNLOCK_FAILED', 32);
    OutcomeCode_CODE_035_ADMIN_ALREADY_INITIALIZED_instance = new OutcomeCode('CODE_035_ADMIN_ALREADY_INITIALIZED', 33);
    OutcomeCode_CODE_036_ADMIN_NAME_instance = new OutcomeCode('CODE_036_ADMIN_NAME', 34);
    OutcomeCode_CODE_037_FORBIDDEN_instance = new OutcomeCode('CODE_037_FORBIDDEN', 35);
    OutcomeCode_CODE_038_UNAUTHORIZED_instance = new OutcomeCode('CODE_038_UNAUTHORIZED', 36);
    OutcomeCode_CODE_039_PROFILE_NOT_FOUND_instance = new OutcomeCode('CODE_039_PROFILE_NOT_FOUND', 37);
    OutcomeCode_CODE_040_MALFORMED_PROFILE_instance = new OutcomeCode('CODE_040_MALFORMED_PROFILE', 38);
    OutcomeCode_CODE_041_UR_ASSIGNMENTS_NOT_FOUND_instance = new OutcomeCode('CODE_041_UR_ASSIGNMENTS_NOT_FOUND', 39);
    OutcomeCode_CODE_042_PA_ASSIGNMENTS_NOT_FOUND_instance = new OutcomeCode('CODE_042_PA_ASSIGNMENTS_NOT_FOUND', 40);
    OutcomeCode_CODE_043_RM_CONNECTION_TIMEOUT_instance = new OutcomeCode('CODE_043_RM_CONNECTION_TIMEOUT', 41);
    OutcomeCode_CODE_044_DM_CONNECTION_TIMEOUT_instance = new OutcomeCode('CODE_044_DM_CONNECTION_TIMEOUT', 42);
    OutcomeCode_CODE_045_MM_CONNECTION_TIMEOUT_instance = new OutcomeCode('CODE_045_MM_CONNECTION_TIMEOUT', 43);
    OutcomeCode_CODE_046_CRYPTOAC_CONNECTION_TIMEOUT_instance = new OutcomeCode('CODE_046_CRYPTOAC_CONNECTION_TIMEOUT', 44);
    OutcomeCode_CODE_047_AC_CONNECTION_TIMEOUT_instance = new OutcomeCode('CODE_047_AC_CONNECTION_TIMEOUT', 45);
    OutcomeCode_CODE_048_HTTP_METHOD_NOT_SUPPORTED_instance = new OutcomeCode('CODE_048_HTTP_METHOD_NOT_SUPPORTED', 46);
    OutcomeCode_CODE_049_UNEXPECTED_instance = new OutcomeCode('CODE_049_UNEXPECTED', 47);
    OutcomeCode_CODE_050_FUNCTIONALITY_UNDER_CONSTRUCTION_instance = new OutcomeCode('CODE_050_FUNCTIONALITY_UNDER_CONSTRUCTION', 48);
    OutcomeCode_CODE_051_LOGIN_REQUIRED_instance = new OutcomeCode('CODE_051_LOGIN_REQUIRED', 49);
    OutcomeCode_CODE_052_USER_ALREADY_INITIALIZED_instance = new OutcomeCode('CODE_052_USER_ALREADY_INITIALIZED', 50);
    OutcomeCode_CODE_053_USER_IS_INCOMPLETE_instance = new OutcomeCode('CODE_053_USER_IS_INCOMPLETE', 51);
    OutcomeCode_CODE_054_CREATE_USER_MM_instance = new OutcomeCode('CODE_054_CREATE_USER_MM', 52);
    OutcomeCode_CODE_055_ACCESS_DENIED_TO_MM_instance = new OutcomeCode('CODE_055_ACCESS_DENIED_TO_MM', 53);
    OutcomeCode_CODE_056_DELETE_USER_MM_instance = new OutcomeCode('CODE_056_DELETE_USER_MM', 54);
    OutcomeCode_CODE_057_SERVICE_TYPE_UPDATED_instance = new OutcomeCode('CODE_057_SERVICE_TYPE_UPDATED', 55);
    OutcomeCode_CODE_058_INCONSISTENT_STATUS_DELETE_TEMPORARY_RESOURCE_IN_DM_instance = new OutcomeCode('CODE_058_INCONSISTENT_STATUS_DELETE_TEMPORARY_RESOURCE_IN_DM', 56);
    OutcomeCode_CODE_059_ACCESS_DENIED_TO_DM_instance = new OutcomeCode('CODE_059_ACCESS_DENIED_TO_DM', 57);
    OutcomeCode_CODE_060_HTTP_CONTENT_TYPE_NOT_SUPPORTED_instance = new OutcomeCode('CODE_060_HTTP_CONTENT_TYPE_NOT_SUPPORTED', 58);
    OutcomeCode_CODE_061_WRONG_PARAMETERS_FOR_CORE_instance = new OutcomeCode('CODE_061_WRONG_PARAMETERS_FOR_CORE', 59);
    OutcomeCode_CODE_062_ALREADY_LOGGED_IN_WITH_DIFFERENT_USERNAME_instance = new OutcomeCode('CODE_062_ALREADY_LOGGED_IN_WITH_DIFFERENT_USERNAME', 60);
    OutcomeCode_CODE_063_ACCESS_DENIED_TO_AC_instance = new OutcomeCode('CODE_063_ACCESS_DENIED_TO_AC', 61);
    OutcomeCode_CODE_062_UR_ASSIGNMENTS_ALREADY_EXISTS_instance = new OutcomeCode('CODE_062_UR_ASSIGNMENTS_ALREADY_EXISTS', 62);
    OutcomeCode_CODE_063_PA_ASSIGNMENTS_ALREADY_EXISTS_instance = new OutcomeCode('CODE_063_PA_ASSIGNMENTS_ALREADY_EXISTS', 63);
    OutcomeCode_CODE_064_DELETE_ATTRIBUTES_CAUSES_EMPTY_ACCESS_STRUCTURE_instance = new OutcomeCode('CODE_064_DELETE_ATTRIBUTES_CAUSES_EMPTY_ACCESS_STRUCTURE', 64);
    OutcomeCode_CODE_065_ATTRIBUTE_ALREADY_EXISTS_instance = new OutcomeCode('CODE_065_ATTRIBUTE_ALREADY_EXISTS', 65);
    OutcomeCode_CODE_066_ATTRIBUTE_NOT_FOUND_instance = new OutcomeCode('CODE_066_ATTRIBUTE_NOT_FOUND', 66);
    OutcomeCode_CODE_067_ATTRIBUTE_WAS_DELETED_instance = new OutcomeCode('CODE_067_ATTRIBUTE_WAS_DELETED', 67);
    OutcomeCode_CODE_068_ATTRIBUTETUPLE_ALREADY_EXISTS_instance = new OutcomeCode('CODE_068_ATTRIBUTETUPLE_ALREADY_EXISTS', 68);
    OutcomeCode_CODE_069_ACCESSSTRUCTURETUPLE_ALREADY_EXISTS_instance = new OutcomeCode('CODE_069_ACCESSSTRUCTURETUPLE_ALREADY_EXISTS', 69);
    OutcomeCode_CODE_070_ATTRIBUTETUPLE_NOT_FOUND_instance = new OutcomeCode('CODE_070_ATTRIBUTETUPLE_NOT_FOUND', 70);
    OutcomeCode_CODE_071_ACCESSSTRUCTURETUPLE_NOT_FOUND_instance = new OutcomeCode('CODE_071_ACCESSSTRUCTURETUPLE_NOT_FOUND', 71);
    OutcomeCode_CODE_072_MPK_ALREADY_INITIALIZED_instance = new OutcomeCode('CODE_072_MPK_ALREADY_INITIALIZED', 72);
    OutcomeCode_CODE_073_ABE_KEY_NOT_FOUND_instance = new OutcomeCode('CODE_073_ABE_KEY_NOT_FOUND', 73);
    OutcomeCode_CODE_074_CANNOT_REVOKE_LAST_ACCESS_STRUCTURE_TUPLE_instance = new OutcomeCode('CODE_074_CANNOT_REVOKE_LAST_ACCESS_STRUCTURE_TUPLE', 74);
    OutcomeCode_CODE_075_DM_CONFIGURATION_instance = new OutcomeCode('CODE_075_DM_CONFIGURATION', 75);
    OutcomeCode_CODE_076_OPA_POLICY_EVAL_instance = new OutcomeCode('CODE_076_OPA_POLICY_EVAL', 76);
    OutcomeCode_CODE_077_SERVICE_ALREADY_CONFIGURED_instance = new OutcomeCode('CODE_077_SERVICE_ALREADY_CONFIGURED', 77);
    OutcomeCode_CODE_078_XACML_CONFIGURATION_instance = new OutcomeCode('CODE_078_XACML_CONFIGURATION', 78);
    OutcomeCode_CODE_079_XACML_DOMAIN_QUERY_instance = new OutcomeCode('CODE_079_XACML_DOMAIN_QUERY', 79);
    OutcomeCode_CODE_080_XACML_PAP_instance = new OutcomeCode('CODE_080_XACML_PAP', 80);
    OutcomeCode_CODE_081_XACML_PAP_POLICY_NOT_FOUND_instance = new OutcomeCode('CODE_081_XACML_PAP_POLICY_NOT_FOUND', 81);
    OutcomeCode_CODE_082_XACML_PDP_instance = new OutcomeCode('CODE_082_XACML_PDP', 82);
    OutcomeCode_CODE_083_XACML_PDP_UNAUTHORIZED_instance = new OutcomeCode('CODE_083_XACML_PDP_UNAUTHORIZED', 83);
    OutcomeCode_CODE_084_UNSUPPORTED_DYNSEC_ERROR_instance = new OutcomeCode('CODE_084_UNSUPPORTED_DYNSEC_ERROR', 84);
    Companion_getInstance_4();
  }
  function OutcomeCode(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  protoOf(OutcomeCode).f4t = function () {
    return split(this.toString(), ['_']).j(1);
  };
  protoOf(OutcomeCode).g4t = function () {
    var tmp$ret$2;
    // Inline function 'kotlin.collections.filterIndexed' call
    var tmp2_filterIndexed = toMutableList(split(this.toString(), ['_']));
    var tmp$ret$1;
    // Inline function 'kotlin.collections.filterIndexedTo' call
    var tmp1_filterIndexedTo = ArrayList_init_$Create$();
    // Inline function 'kotlin.collections.forEachIndexed' call
    var index = 0;
    var tmp0_iterator = tmp2_filterIndexed.f();
    while (tmp0_iterator.g()) {
      var item = tmp0_iterator.h();
      // Inline function 'kotlin.collections.filterIndexedTo.<anonymous>' call
      var tmp1 = index;
      index = tmp1 + 1 | 0;
      var tmp0__anonymous__q1qw7t = checkIndexOverflow(tmp1);
      var tmp$ret$0;
      // Inline function 'eu.fbk.st.cryptoac.OutcomeCode.getMessage.<anonymous>' call
      tmp$ret$0 = !(tmp0__anonymous__q1qw7t === 0) ? !(tmp0__anonymous__q1qw7t === 1) : false;
      if (tmp$ret$0) {
        tmp1_filterIndexedTo.a(item);
      }
    }
    tmp$ret$1 = tmp1_filterIndexedTo;
    tmp$ret$2 = tmp$ret$1;
    return joinToString(tmp$ret$2, ' ');
  };
  function OutcomeCode_CODE_000_SUCCESS_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_000_SUCCESS_instance;
  }
  function OutcomeCode_CODE_001_USER_ALREADY_EXISTS_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_001_USER_ALREADY_EXISTS_instance;
  }
  function OutcomeCode_CODE_002_ROLE_ALREADY_EXISTS_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_002_ROLE_ALREADY_EXISTS_instance;
  }
  function OutcomeCode_CODE_003_RESOURCE_ALREADY_EXISTS_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_003_RESOURCE_ALREADY_EXISTS_instance;
  }
  function OutcomeCode_CODE_004_USER_NOT_FOUND_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_004_USER_NOT_FOUND_instance;
  }
  function OutcomeCode_CODE_005_ROLE_NOT_FOUND_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_005_ROLE_NOT_FOUND_instance;
  }
  function OutcomeCode_CODE_006_RESOURCE_NOT_FOUND_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_006_RESOURCE_NOT_FOUND_instance;
  }
  function OutcomeCode_CODE_007_ROLETUPLE_NOT_FOUND_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_007_ROLETUPLE_NOT_FOUND_instance;
  }
  function OutcomeCode_CODE_008_PERMISSIONTUPLE_NOT_FOUND_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_008_PERMISSIONTUPLE_NOT_FOUND_instance;
  }
  function OutcomeCode_CODE_010_ROLETUPLE_ALREADY_EXISTS_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_010_ROLETUPLE_ALREADY_EXISTS_instance;
  }
  function OutcomeCode_CODE_011_PERMISSIONTUPLE_ALREADY_EXISTS_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_011_PERMISSIONTUPLE_ALREADY_EXISTS_instance;
  }
  function OutcomeCode_CODE_013_USER_WAS_DELETED_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_013_USER_WAS_DELETED_instance;
  }
  function OutcomeCode_CODE_014_ROLE_WAS_DELETED_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_014_ROLE_WAS_DELETED_instance;
  }
  function OutcomeCode_CODE_015_RESOURCE_WAS_DELETED_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_015_RESOURCE_WAS_DELETED_instance;
  }
  function OutcomeCode_CODE_016_INVALID_PERMISSION_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_016_INVALID_PERMISSION_instance;
  }
  function OutcomeCode_CODE_017_INVALID_VERSION_NUMBER_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_017_INVALID_VERSION_NUMBER_instance;
  }
  function OutcomeCode_CODE_018_SERVICE_CONFIGURATION_PARAMETERS_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_018_SERVICE_CONFIGURATION_PARAMETERS_instance;
  }
  function OutcomeCode_CODE_019_MISSING_PARAMETERS_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_019_MISSING_PARAMETERS_instance;
  }
  function OutcomeCode_CODE_020_INVALID_PARAMETER_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_020_INVALID_PARAMETER_instance;
  }
  function OutcomeCode_CODE_021_RM_CONFIGURATION_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_021_RM_CONFIGURATION_instance;
  }
  function OutcomeCode_CODE_022_ADMIN_CANNOT_BE_MODIFIED_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_022_ADMIN_CANNOT_BE_MODIFIED_instance;
  }
  function OutcomeCode_CODE_023_USER_CANNOT_BE_MODIFIED_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_023_USER_CANNOT_BE_MODIFIED_instance;
  }
  function OutcomeCode_CODE_024_RESOURCE_DELETE_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_024_RESOURCE_DELETE_instance;
  }
  function OutcomeCode_CODE_025_RESOURCE_WRITE_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_025_RESOURCE_WRITE_instance;
  }
  function OutcomeCode_CODE_026_TUPLE_FORMAT_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_026_TUPLE_FORMAT_instance;
  }
  function OutcomeCode_CODE_027_AC_ENFORCEMENT_INCONSISTENT_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_027_AC_ENFORCEMENT_INCONSISTENT_instance;
  }
  function OutcomeCode_CODE_028_OPA_POLICY_CREATION_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_028_OPA_POLICY_CREATION_instance;
  }
  function OutcomeCode_CODE_029_OPA_POLICY_UPDATE_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_029_OPA_POLICY_UPDATE_instance;
  }
  function OutcomeCode_CODE_030_OPA_DOCUMENT_DOWNLOAD_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_030_OPA_DOCUMENT_DOWNLOAD_instance;
  }
  function OutcomeCode_CODE_031_LOCK_CALLED_IN_INCONSISTENT_STATUS_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_031_LOCK_CALLED_IN_INCONSISTENT_STATUS_instance;
  }
  function OutcomeCode_CODE_032_UNLOCK_CALLED_IN_INCONSISTENT_STATUS_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_032_UNLOCK_CALLED_IN_INCONSISTENT_STATUS_instance;
  }
  function OutcomeCode_CODE_033_ROLLBACK_CALLED_IN_INCONSISTENT_STATUS_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_033_ROLLBACK_CALLED_IN_INCONSISTENT_STATUS_instance;
  }
  function OutcomeCode_CODE_034_UNLOCK_FAILED_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_034_UNLOCK_FAILED_instance;
  }
  function OutcomeCode_CODE_035_ADMIN_ALREADY_INITIALIZED_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_035_ADMIN_ALREADY_INITIALIZED_instance;
  }
  function OutcomeCode_CODE_036_ADMIN_NAME_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_036_ADMIN_NAME_instance;
  }
  function OutcomeCode_CODE_037_FORBIDDEN_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_037_FORBIDDEN_instance;
  }
  function OutcomeCode_CODE_038_UNAUTHORIZED_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_038_UNAUTHORIZED_instance;
  }
  function OutcomeCode_CODE_039_PROFILE_NOT_FOUND_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_039_PROFILE_NOT_FOUND_instance;
  }
  function OutcomeCode_CODE_040_MALFORMED_PROFILE_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_040_MALFORMED_PROFILE_instance;
  }
  function OutcomeCode_CODE_041_UR_ASSIGNMENTS_NOT_FOUND_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_041_UR_ASSIGNMENTS_NOT_FOUND_instance;
  }
  function OutcomeCode_CODE_042_PA_ASSIGNMENTS_NOT_FOUND_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_042_PA_ASSIGNMENTS_NOT_FOUND_instance;
  }
  function OutcomeCode_CODE_043_RM_CONNECTION_TIMEOUT_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_043_RM_CONNECTION_TIMEOUT_instance;
  }
  function OutcomeCode_CODE_044_DM_CONNECTION_TIMEOUT_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_044_DM_CONNECTION_TIMEOUT_instance;
  }
  function OutcomeCode_CODE_045_MM_CONNECTION_TIMEOUT_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_045_MM_CONNECTION_TIMEOUT_instance;
  }
  function OutcomeCode_CODE_046_CRYPTOAC_CONNECTION_TIMEOUT_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_046_CRYPTOAC_CONNECTION_TIMEOUT_instance;
  }
  function OutcomeCode_CODE_047_AC_CONNECTION_TIMEOUT_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_047_AC_CONNECTION_TIMEOUT_instance;
  }
  function OutcomeCode_CODE_048_HTTP_METHOD_NOT_SUPPORTED_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_048_HTTP_METHOD_NOT_SUPPORTED_instance;
  }
  function OutcomeCode_CODE_049_UNEXPECTED_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_049_UNEXPECTED_instance;
  }
  function OutcomeCode_CODE_050_FUNCTIONALITY_UNDER_CONSTRUCTION_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_050_FUNCTIONALITY_UNDER_CONSTRUCTION_instance;
  }
  function OutcomeCode_CODE_051_LOGIN_REQUIRED_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_051_LOGIN_REQUIRED_instance;
  }
  function OutcomeCode_CODE_052_USER_ALREADY_INITIALIZED_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_052_USER_ALREADY_INITIALIZED_instance;
  }
  function OutcomeCode_CODE_053_USER_IS_INCOMPLETE_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_053_USER_IS_INCOMPLETE_instance;
  }
  function OutcomeCode_CODE_054_CREATE_USER_MM_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_054_CREATE_USER_MM_instance;
  }
  function OutcomeCode_CODE_055_ACCESS_DENIED_TO_MM_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_055_ACCESS_DENIED_TO_MM_instance;
  }
  function OutcomeCode_CODE_056_DELETE_USER_MM_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_056_DELETE_USER_MM_instance;
  }
  function OutcomeCode_CODE_057_SERVICE_TYPE_UPDATED_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_057_SERVICE_TYPE_UPDATED_instance;
  }
  function OutcomeCode_CODE_058_INCONSISTENT_STATUS_DELETE_TEMPORARY_RESOURCE_IN_DM_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_058_INCONSISTENT_STATUS_DELETE_TEMPORARY_RESOURCE_IN_DM_instance;
  }
  function OutcomeCode_CODE_059_ACCESS_DENIED_TO_DM_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_059_ACCESS_DENIED_TO_DM_instance;
  }
  function OutcomeCode_CODE_060_HTTP_CONTENT_TYPE_NOT_SUPPORTED_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_060_HTTP_CONTENT_TYPE_NOT_SUPPORTED_instance;
  }
  function OutcomeCode_CODE_061_WRONG_PARAMETERS_FOR_CORE_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_061_WRONG_PARAMETERS_FOR_CORE_instance;
  }
  function OutcomeCode_CODE_062_ALREADY_LOGGED_IN_WITH_DIFFERENT_USERNAME_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_062_ALREADY_LOGGED_IN_WITH_DIFFERENT_USERNAME_instance;
  }
  function OutcomeCode_CODE_063_ACCESS_DENIED_TO_AC_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_063_ACCESS_DENIED_TO_AC_instance;
  }
  function OutcomeCode_CODE_062_UR_ASSIGNMENTS_ALREADY_EXISTS_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_062_UR_ASSIGNMENTS_ALREADY_EXISTS_instance;
  }
  function OutcomeCode_CODE_063_PA_ASSIGNMENTS_ALREADY_EXISTS_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_063_PA_ASSIGNMENTS_ALREADY_EXISTS_instance;
  }
  function OutcomeCode_CODE_064_DELETE_ATTRIBUTES_CAUSES_EMPTY_ACCESS_STRUCTURE_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_064_DELETE_ATTRIBUTES_CAUSES_EMPTY_ACCESS_STRUCTURE_instance;
  }
  function OutcomeCode_CODE_065_ATTRIBUTE_ALREADY_EXISTS_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_065_ATTRIBUTE_ALREADY_EXISTS_instance;
  }
  function OutcomeCode_CODE_066_ATTRIBUTE_NOT_FOUND_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_066_ATTRIBUTE_NOT_FOUND_instance;
  }
  function OutcomeCode_CODE_067_ATTRIBUTE_WAS_DELETED_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_067_ATTRIBUTE_WAS_DELETED_instance;
  }
  function OutcomeCode_CODE_068_ATTRIBUTETUPLE_ALREADY_EXISTS_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_068_ATTRIBUTETUPLE_ALREADY_EXISTS_instance;
  }
  function OutcomeCode_CODE_069_ACCESSSTRUCTURETUPLE_ALREADY_EXISTS_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_069_ACCESSSTRUCTURETUPLE_ALREADY_EXISTS_instance;
  }
  function OutcomeCode_CODE_070_ATTRIBUTETUPLE_NOT_FOUND_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_070_ATTRIBUTETUPLE_NOT_FOUND_instance;
  }
  function OutcomeCode_CODE_071_ACCESSSTRUCTURETUPLE_NOT_FOUND_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_071_ACCESSSTRUCTURETUPLE_NOT_FOUND_instance;
  }
  function OutcomeCode_CODE_072_MPK_ALREADY_INITIALIZED_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_072_MPK_ALREADY_INITIALIZED_instance;
  }
  function OutcomeCode_CODE_073_ABE_KEY_NOT_FOUND_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_073_ABE_KEY_NOT_FOUND_instance;
  }
  function OutcomeCode_CODE_074_CANNOT_REVOKE_LAST_ACCESS_STRUCTURE_TUPLE_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_074_CANNOT_REVOKE_LAST_ACCESS_STRUCTURE_TUPLE_instance;
  }
  function OutcomeCode_CODE_075_DM_CONFIGURATION_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_075_DM_CONFIGURATION_instance;
  }
  function OutcomeCode_CODE_076_OPA_POLICY_EVAL_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_076_OPA_POLICY_EVAL_instance;
  }
  function OutcomeCode_CODE_077_SERVICE_ALREADY_CONFIGURED_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_077_SERVICE_ALREADY_CONFIGURED_instance;
  }
  function OutcomeCode_CODE_078_XACML_CONFIGURATION_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_078_XACML_CONFIGURATION_instance;
  }
  function OutcomeCode_CODE_079_XACML_DOMAIN_QUERY_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_079_XACML_DOMAIN_QUERY_instance;
  }
  function OutcomeCode_CODE_080_XACML_PAP_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_080_XACML_PAP_instance;
  }
  function OutcomeCode_CODE_081_XACML_PAP_POLICY_NOT_FOUND_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_081_XACML_PAP_POLICY_NOT_FOUND_instance;
  }
  function OutcomeCode_CODE_082_XACML_PDP_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_082_XACML_PDP_instance;
  }
  function OutcomeCode_CODE_083_XACML_PDP_UNAUTHORIZED_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_083_XACML_PDP_UNAUTHORIZED_instance;
  }
  function OutcomeCode_CODE_084_UNSUPPORTED_DYNSEC_ERROR_getInstance() {
    OutcomeCode_initEntries();
    return OutcomeCode_CODE_084_UNSUPPORTED_DYNSEC_ERROR_instance;
  }
  function SERVER() {
    SERVER_instance = this;
    this.h4t_1 = 'Cryptography';
    this.i4t_1 = 'Core';
    this.j4t_1 = 'Username';
    this.k4t_1 = 'Role_Name';
    this.l4t_1 = 'Resource_Name';
    this.m4t_1 = 'Permission';
    this.n4t_1 = 'Offset';
    this.o4t_1 = 'Limit';
    this.p4t_1 = 'Access_Control_Enforcement';
    this.q4t_1 = 'Resource_Content';
    this.r4t_1 = 'Admin';
    this.s4t_1 = 'RM';
    this.t4t_1 = 'MM';
    this.u4t_1 = 'DM';
    this.v4t_1 = 'AC';
    this.w4t_1 = 'RM_URL';
    this.x4t_1 = 'RM_Port';
    this.y4t_1 = 'RM_Password';
    this.z4t_1 = 'DM_URL';
    this.a4u_1 = 'DM_TLS';
    this.b4u_1 = 'DM_Port';
    this.c4u_1 = 'DM_Password';
    this.d4u_1 = 'MM_URL';
    this.e4u_1 = 'MM_Password';
    this.f4u_1 = 'MM_Token';
    this.g4u_1 = 'MM_Port';
    this.h4u_1 = 'MM_Type';
    this.i4u_1 = 'AC_URL';
    this.j4u_1 = 'AC_Port';
    this.k4u_1 = 'AC_Password';
    this.l4u_1 = 'AC_TLS';
  }
  var SERVER_instance;
  function SERVER_getInstance() {
    if (SERVER_instance == null)
      new SERVER();
    return SERVER_instance;
  }
  function submitFormPatch(_this__u8e3s4, formParameters, block, $completion) {
    var tmp = new $submitFormPatchCOROUTINE$0(_this__u8e3s4, formParameters, block, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  }
  function $submitFormPatchCOROUTINE$0(_this__u8e3s4, formParameters, block, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.u4u_1 = _this__u8e3s4;
    this.v4u_1 = formParameters;
    this.w4u_1 = block;
  }
  protoOf($submitFormPatchCOROUTINE$0).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 2;
            var tmp_0 = this;
            var tmp0_apply = new HttpRequestBuilder();
            tmp0_apply.x3h_1 = Companion_getInstance().e21_1;
            var tmp0_setBody = new FormDataContent(this.v4u_1);
            var tmp0_subject = tmp0_setBody;
            if (tmp0_subject == null) {
              tmp0_apply.z3h_1 = NullBody_getInstance();
              var tmp_1 = JsType_getInstance();
              var tmp_2 = getKClass(FormDataContent);
              var tmp_3;
              try {
                tmp_3 = createKType(getKClass(FormDataContent), arrayOf([]), false);
              } catch ($p) {
                var tmp_4;
                if ($p instanceof Error) {
                  var cause = $p;
                  tmp_4 = null;
                } else {
                  throw $p;
                }
                tmp_3 = tmp_4;
              }
              tmp0_apply.v3n(typeInfoImpl(tmp_1, tmp_2, tmp_3));
            } else {
              if (tmp0_subject instanceof OutgoingContent) {
                tmp0_apply.z3h_1 = tmp0_setBody;
                tmp0_apply.v3n(null);
              } else {
                tmp0_apply.z3h_1 = tmp0_setBody;
                var tmp_5 = JsType_getInstance();
                var tmp_6 = getKClass(FormDataContent);
                var tmp_7;
                try {
                  tmp_7 = createKType(getKClass(FormDataContent), arrayOf([]), false);
                } catch ($p) {
                  var tmp_8;
                  if ($p instanceof Error) {
                    var cause_0 = $p;
                    tmp_8 = null;
                  } else {
                    throw $p;
                  }
                  tmp_7 = tmp_8;
                }
                tmp0_apply.v3n(typeInfoImpl(tmp_5, tmp_6, tmp_7));
              }
            }

            this.w4u_1(tmp0_apply);
            tmp_0.x4u_1 = tmp0_apply;
            this.xh_1 = 1;
            suspendResult = (new HttpStatement(this.x4u_1, this.u4u_1)).o4i(this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            return suspendResult;
          case 2:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 2) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  function ACServiceParameters() {
  }
  var ACType_RBAC_OPA_instance;
  var ACType_RBAC_DYNSEC_instance;
  var ACType_RBAC_XACML_AUTHZFORCE_instance;
  var ACType_NONE_instance;
  function values_0() {
    return [ACType_RBAC_OPA_getInstance(), ACType_RBAC_DYNSEC_getInstance(), ACType_RBAC_XACML_AUTHZFORCE_getInstance(), ACType_NONE_getInstance()];
  }
  function valueOf(value) {
    switch (value) {
      case 'RBAC_OPA':
        return ACType_RBAC_OPA_getInstance();
      case 'RBAC_DYNSEC':
        return ACType_RBAC_DYNSEC_getInstance();
      case 'RBAC_XACML_AUTHZFORCE':
        return ACType_RBAC_XACML_AUTHZFORCE_getInstance();
      case 'NONE':
        return ACType_NONE_getInstance();
      default:
        ACType_initEntries();
        THROW_ISE();
        break;
    }
  }
  var ACType_entriesInitialized;
  function ACType_initEntries() {
    if (ACType_entriesInitialized)
      return Unit_getInstance();
    ACType_entriesInitialized = true;
    ACType_RBAC_OPA_instance = new ACType('RBAC_OPA', 0);
    ACType_RBAC_DYNSEC_instance = new ACType('RBAC_DYNSEC', 1);
    ACType_RBAC_XACML_AUTHZFORCE_instance = new ACType('RBAC_XACML_AUTHZFORCE', 2);
    ACType_NONE_instance = new ACType('NONE', 3);
  }
  function ACType(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function ACType_RBAC_OPA_getInstance() {
    ACType_initEntries();
    return ACType_RBAC_OPA_instance;
  }
  function ACType_RBAC_DYNSEC_getInstance() {
    ACType_initEntries();
    return ACType_RBAC_DYNSEC_instance;
  }
  function ACType_RBAC_XACML_AUTHZFORCE_getInstance() {
    ACType_initEntries();
    return ACType_RBAC_XACML_AUTHZFORCE_instance;
  }
  function ACType_NONE_getInstance() {
    ACType_initEntries();
    return ACType_NONE_instance;
  }
  function Companion_0() {
    Companion_instance_0 = this;
    var tmp = this;
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [null, null, null, null, null, createSimpleEnumSerializer('eu.fbk.st.cryptoac.ac.ACType', values_0())];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp.z4u_1 = tmp$ret$2;
  }
  protoOf(Companion_0).a4v = function (parameters) {
    SERVER_getInstance();
    var tmp0_username = ensureNotNull(parameters.y1('Username'));
    SERVER_getInstance();
    var tmp1_port = toInt(ensureNotNull(parameters.y1('AC_Port')));
    SERVER_getInstance();
    var tmp2_url = ensureNotNull(parameters.y1('AC_URL'));
    SERVER_getInstance();
    var tmp3_password = ensureNotNull(parameters.y1('AC_Password'));
    SERVER_getInstance();
    var tmp4_tls = toBooleanStrict(ensureNotNull(parameters.y1('AC_TLS')));
    return new ACServiceRBACDynSecParameters(tmp0_username, tmp3_password, tmp1_port, tmp2_url, tmp4_tls);
  };
  protoOf(Companion_0).b4v = function (parameters) {
    SERVER_getInstance();
    var tmp1_name = 'AC_URL';
    SERVER_getInstance();
    var tmp2_label = replace('AC_URL', '_', ' ');
    var tmp3_type = InputType_text_getInstance();
    var tmp0_safe_receiver = parameters;
    var tmp4_defaultValue = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.f4v_1;
    var tmp = new CryptoACFormField(tmp1_name, tmp2_label, tmp3_type, VOID, tmp4_defaultValue, 'darkTextField');
    SERVER_getInstance();
    var tmp6_name = 'AC_Password';
    SERVER_getInstance();
    var tmp7_label = replace('AC_Password', '_', ' ');
    var tmp8_type = InputType_password_getInstance();
    var tmp5_safe_receiver = parameters;
    var tmp9_defaultValue = tmp5_safe_receiver == null ? null : tmp5_safe_receiver.d4v_1;
    var tmp_0 = new CryptoACFormField(tmp6_name, tmp7_label, tmp8_type, VOID, tmp9_defaultValue, 'darkTextField');
    SERVER_getInstance();
    var tmp11_name = 'AC_Port';
    SERVER_getInstance();
    var tmp12_label = replace('AC_Port', '_', ' ');
    var tmp13_type = InputType_number_getInstance();
    var tmp10_safe_receiver = parameters;
    var tmp14_defaultValue = toString(tmp10_safe_receiver == null ? null : tmp10_safe_receiver.e4v_1);
    var tmp_1 = new CryptoACFormField(tmp11_name, tmp12_label, tmp13_type, VOID, tmp14_defaultValue, 'darkTextField');
    SERVER_getInstance();
    var tmp16_name = 'AC_TLS';
    SERVER_getInstance();
    var tmp17_label = 'AC_TLS';
    var tmp18_type = InputType_checkBox_getInstance();
    var tmp15_safe_receiver = parameters;
    var tmp19_defaultValue = toString(tmp15_safe_receiver == null ? null : tmp15_safe_receiver.g4v_1);
    return listOf_0(listOf([tmp, tmp_0, tmp_1, new CryptoACFormField(tmp16_name, tmp17_label, tmp18_type, VOID, tmp19_defaultValue, 'darkTextField')]));
  };
  var Companion_instance_0;
  function Companion_getInstance_5() {
    if (Companion_instance_0 == null)
      new Companion_0();
    return Companion_instance_0;
  }
  function $serializer() {
    $serializer_instance = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('eu.fbk.st.cryptoac.ac.dynsec.ACServiceRBACDynSecParameters', this, 6);
    tmp0_serialDesc.h2t('username', false);
    tmp0_serialDesc.h2t('password', false);
    tmp0_serialDesc.h2t('port', false);
    tmp0_serialDesc.h2t('url', false);
    tmp0_serialDesc.h2t('tls', false);
    tmp0_serialDesc.h2t('acType', true);
    this.i4v_1 = tmp0_serialDesc;
  }
  protoOf($serializer).s2i = function () {
    return this.i4v_1;
  };
  protoOf($serializer).w2t = function () {
    var tmp0_cached = Companion_getInstance_5().z4u_1;
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [StringSerializer_getInstance(), StringSerializer_getInstance(), IntSerializer_getInstance(), StringSerializer_getInstance(), BooleanSerializer_getInstance(), tmp0_cached[5]];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  protoOf($serializer).u2i = function (decoder) {
    var tmp0_desc = this.i4v_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = null;
    var tmp6_local2 = 0;
    var tmp7_local3 = null;
    var tmp8_local4 = false;
    var tmp9_local5 = null;
    var tmp10_input = decoder.e2m(tmp0_desc);
    var tmp11_cached = Companion_getInstance_5().z4u_1;
    if (tmp10_input.t2m()) {
      tmp4_local0 = tmp10_input.o2m(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp10_input.o2m(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp10_input.j2m(tmp0_desc, 2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp10_input.o2m(tmp0_desc, 3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
      tmp8_local4 = tmp10_input.g2m(tmp0_desc, 4);
      tmp3_bitMask0 = tmp3_bitMask0 | 16;
      tmp9_local5 = tmp10_input.q2m(tmp0_desc, 5, tmp11_cached[5], tmp9_local5);
      tmp3_bitMask0 = tmp3_bitMask0 | 32;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp10_input.u2m(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp10_input.o2m(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp10_input.o2m(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp10_input.j2m(tmp0_desc, 2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp10_input.o2m(tmp0_desc, 3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          case 4:
            tmp8_local4 = tmp10_input.g2m(tmp0_desc, 4);
            tmp3_bitMask0 = tmp3_bitMask0 | 16;
            break;
          case 5:
            tmp9_local5 = tmp10_input.q2m(tmp0_desc, 5, tmp11_cached[5], tmp9_local5);
            tmp3_bitMask0 = tmp3_bitMask0 | 32;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp10_input.f2m(tmp0_desc);
    return ACServiceRBACDynSecParameters_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, null);
  };
  protoOf($serializer).j4v = function (encoder, value) {
    var tmp0_desc = this.i4v_1;
    var tmp1_output = encoder.e2m(tmp0_desc);
    var tmp2_cached = Companion_getInstance_5().z4u_1;
    tmp1_output.s2n(tmp0_desc, 0, value.c4v_1);
    tmp1_output.s2n(tmp0_desc, 1, value.d4v_1);
    tmp1_output.n2n(tmp0_desc, 2, value.e4v_1);
    tmp1_output.s2n(tmp0_desc, 3, value.f4v_1);
    tmp1_output.k2n(tmp0_desc, 4, value.g4v_1);
    if (tmp1_output.a2o(tmp0_desc, 5) ? true : !value.h4v_1.equals(ACType_RBAC_DYNSEC_getInstance())) {
      tmp1_output.u2n(tmp0_desc, 5, tmp2_cached[5], value.h4v_1);
    }
    tmp1_output.f2m(tmp0_desc);
  };
  protoOf($serializer).t2i = function (encoder, value) {
    return this.j4v(encoder, value instanceof ACServiceRBACDynSecParameters ? value : THROW_CCE());
  };
  var $serializer_instance;
  function $serializer_getInstance() {
    if ($serializer_instance == null)
      new $serializer();
    return $serializer_instance;
  }
  function ACServiceRBACDynSecParameters_init_$Init$(seen1, username, password, port, url, tls, acType, serializationConstructorMarker, $this) {
    if (!(31 === (31 & seen1))) {
      throwMissingFieldException(seen1, 31, $serializer_getInstance().i4v_1);
    }
    $this.c4v_1 = username;
    $this.d4v_1 = password;
    $this.e4v_1 = port;
    $this.f4v_1 = url;
    $this.g4v_1 = tls;
    if (0 === (seen1 & 32))
      $this.h4v_1 = ACType_RBAC_DYNSEC_getInstance();
    else
      $this.h4v_1 = acType;
    return $this;
  }
  function ACServiceRBACDynSecParameters_init_$Create$(seen1, username, password, port, url, tls, acType, serializationConstructorMarker) {
    return ACServiceRBACDynSecParameters_init_$Init$(seen1, username, password, port, url, tls, acType, serializationConstructorMarker, objectCreate(protoOf(ACServiceRBACDynSecParameters)));
  }
  function ACServiceRBACDynSecParameters(username, password, port, url, tls) {
    Companion_getInstance_5();
    this.c4v_1 = username;
    this.d4v_1 = password;
    this.e4v_1 = port;
    this.f4v_1 = url;
    this.g4v_1 = tls;
    this.h4v_1 = ACType_RBAC_DYNSEC_getInstance();
  }
  protoOf(ACServiceRBACDynSecParameters).y4u = function () {
    return this.h4v_1;
  };
  protoOf(ACServiceRBACDynSecParameters).equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (other instanceof ACServiceRBACDynSecParameters)
      other;
    else
      THROW_CCE();
    if (!(this.c4v_1 === other.c4v_1))
      return false;
    if (!(this.d4v_1 === other.d4v_1))
      return false;
    if (!(this.e4v_1 === other.e4v_1))
      return false;
    if (!(this.f4v_1 === other.f4v_1))
      return false;
    if (!(this.g4v_1 === other.g4v_1))
      return false;
    if (!this.h4v_1.equals(other.h4v_1))
      return false;
    return true;
  };
  protoOf(ACServiceRBACDynSecParameters).hashCode = function () {
    var result = getStringHashCode(this.c4v_1);
    result = imul(31, result) + getStringHashCode(this.d4v_1) | 0;
    result = imul(31, result) + this.e4v_1 | 0;
    result = imul(31, result) + getStringHashCode(this.f4v_1) | 0;
    result = imul(31, result) + (this.g4v_1 | 0) | 0;
    result = imul(31, result) + this.h4v_1.hashCode() | 0;
    return result;
  };
  function Companion_1() {
    Companion_instance_1 = this;
    var tmp = this;
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [null, null, createSimpleEnumSerializer('eu.fbk.st.cryptoac.ac.ACType', values_0())];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp.k4v_1 = tmp$ret$2;
  }
  protoOf(Companion_1).a4v = function (parameters) {
    SERVER_getInstance();
    var tmp0_url = ensureNotNull(parameters.y1('AC_URL'));
    SERVER_getInstance();
    var tmp1_port = toInt(ensureNotNull(parameters.y1('AC_Port')));
    return new ACServiceRBACOPAParameters(tmp1_port, tmp0_url);
  };
  protoOf(Companion_1).l4v = function (parameters) {
    SERVER_getInstance();
    var tmp1_name = 'AC_URL';
    SERVER_getInstance();
    var tmp2_label = replace('AC_URL', '_', ' ');
    var tmp3_type = InputType_text_getInstance();
    var tmp0_safe_receiver = parameters;
    var tmp4_defaultValue = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.n4v_1;
    var tmp = new CryptoACFormField(tmp1_name, tmp2_label, tmp3_type, VOID, tmp4_defaultValue, 'darkTextField');
    SERVER_getInstance();
    var tmp6_name = 'AC_Port';
    SERVER_getInstance();
    var tmp7_label = replace('AC_Port', '_', ' ');
    var tmp8_type = InputType_number_getInstance();
    var tmp5_safe_receiver = parameters;
    var tmp9_defaultValue = toString(tmp5_safe_receiver == null ? null : tmp5_safe_receiver.m4v_1);
    return listOf_0(listOf([tmp, new CryptoACFormField(tmp6_name, tmp7_label, tmp8_type, VOID, tmp9_defaultValue, 'darkTextField')]));
  };
  var Companion_instance_1;
  function Companion_getInstance_6() {
    if (Companion_instance_1 == null)
      new Companion_1();
    return Companion_instance_1;
  }
  function $serializer_0() {
    $serializer_instance_0 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('eu.fbk.st.cryptoac.ac.opa.ACServiceRBACOPAParameters', this, 3);
    tmp0_serialDesc.h2t('port', false);
    tmp0_serialDesc.h2t('url', false);
    tmp0_serialDesc.h2t('acType', true);
    this.p4v_1 = tmp0_serialDesc;
  }
  protoOf($serializer_0).s2i = function () {
    return this.p4v_1;
  };
  protoOf($serializer_0).w2t = function () {
    var tmp0_cached = Companion_getInstance_6().k4v_1;
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [IntSerializer_getInstance(), StringSerializer_getInstance(), tmp0_cached[2]];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  protoOf($serializer_0).u2i = function (decoder) {
    var tmp0_desc = this.p4v_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = 0;
    var tmp5_local1 = null;
    var tmp6_local2 = null;
    var tmp7_input = decoder.e2m(tmp0_desc);
    var tmp8_cached = Companion_getInstance_6().k4v_1;
    if (tmp7_input.t2m()) {
      tmp4_local0 = tmp7_input.j2m(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp7_input.o2m(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp7_input.q2m(tmp0_desc, 2, tmp8_cached[2], tmp6_local2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp7_input.u2m(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp7_input.j2m(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp7_input.o2m(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp7_input.q2m(tmp0_desc, 2, tmp8_cached[2], tmp6_local2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp7_input.f2m(tmp0_desc);
    return ACServiceRBACOPAParameters_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
  };
  protoOf($serializer_0).q4v = function (encoder, value) {
    var tmp0_desc = this.p4v_1;
    var tmp1_output = encoder.e2m(tmp0_desc);
    var tmp2_cached = Companion_getInstance_6().k4v_1;
    tmp1_output.n2n(tmp0_desc, 0, value.m4v_1);
    tmp1_output.s2n(tmp0_desc, 1, value.n4v_1);
    if (tmp1_output.a2o(tmp0_desc, 2) ? true : !value.o4v_1.equals(ACType_RBAC_OPA_getInstance())) {
      tmp1_output.u2n(tmp0_desc, 2, tmp2_cached[2], value.o4v_1);
    }
    tmp1_output.f2m(tmp0_desc);
  };
  protoOf($serializer_0).t2i = function (encoder, value) {
    return this.q4v(encoder, value instanceof ACServiceRBACOPAParameters ? value : THROW_CCE());
  };
  var $serializer_instance_0;
  function $serializer_getInstance_0() {
    if ($serializer_instance_0 == null)
      new $serializer_0();
    return $serializer_instance_0;
  }
  function ACServiceRBACOPAParameters_init_$Init$(seen1, port, url, acType, serializationConstructorMarker, $this) {
    if (!(3 === (3 & seen1))) {
      throwMissingFieldException(seen1, 3, $serializer_getInstance_0().p4v_1);
    }
    $this.m4v_1 = port;
    $this.n4v_1 = url;
    if (0 === (seen1 & 4))
      $this.o4v_1 = ACType_RBAC_OPA_getInstance();
    else
      $this.o4v_1 = acType;
    return $this;
  }
  function ACServiceRBACOPAParameters_init_$Create$(seen1, port, url, acType, serializationConstructorMarker) {
    return ACServiceRBACOPAParameters_init_$Init$(seen1, port, url, acType, serializationConstructorMarker, objectCreate(protoOf(ACServiceRBACOPAParameters)));
  }
  function ACServiceRBACOPAParameters(port, url) {
    Companion_getInstance_6();
    this.m4v_1 = port;
    this.n4v_1 = url;
    this.o4v_1 = ACType_RBAC_OPA_getInstance();
  }
  protoOf(ACServiceRBACOPAParameters).y4u = function () {
    return this.o4v_1;
  };
  protoOf(ACServiceRBACOPAParameters).equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (other instanceof ACServiceRBACOPAParameters)
      other;
    else
      THROW_CCE();
    if (!(this.m4v_1 === other.m4v_1))
      return false;
    if (!(this.n4v_1 === other.n4v_1))
      return false;
    if (!this.o4v_1.equals(other.o4v_1))
      return false;
    return true;
  };
  protoOf(ACServiceRBACOPAParameters).hashCode = function () {
    var result = this.m4v_1;
    result = imul(31, result) + getStringHashCode(this.n4v_1) | 0;
    result = imul(31, result) + this.o4v_1.hashCode() | 0;
    return result;
  };
  function Companion_2() {
    Companion_instance_2 = this;
    var tmp = this;
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [null, null, createSimpleEnumSerializer('eu.fbk.st.cryptoac.ac.ACType', values_0())];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp.r4v_1 = tmp$ret$2;
  }
  protoOf(Companion_2).a4v = function (parameters) {
    SERVER_getInstance();
    var tmp0_url = ensureNotNull(parameters.y1('AC_URL'));
    SERVER_getInstance();
    var tmp1_port = toInt(ensureNotNull(parameters.y1('AC_Port')));
    return new ACServiceRBACXACMLAuthzForceParameters(tmp1_port, tmp0_url);
  };
  protoOf(Companion_2).s4v = function (parameters) {
    SERVER_getInstance();
    var tmp1_name = 'AC_URL';
    SERVER_getInstance();
    var tmp2_label = replace('AC_URL', '_', ' ');
    var tmp3_type = InputType_text_getInstance();
    var tmp0_safe_receiver = parameters;
    var tmp4_defaultValue = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.u4v_1;
    var tmp = new CryptoACFormField(tmp1_name, tmp2_label, tmp3_type, VOID, tmp4_defaultValue, 'darkTextField');
    SERVER_getInstance();
    var tmp6_name = 'AC_Port';
    SERVER_getInstance();
    var tmp7_label = replace('AC_Port', '_', ' ');
    var tmp8_type = InputType_number_getInstance();
    var tmp5_safe_receiver = parameters;
    var tmp9_defaultValue = toString(tmp5_safe_receiver == null ? null : tmp5_safe_receiver.t4v_1);
    return listOf_0(listOf([tmp, new CryptoACFormField(tmp6_name, tmp7_label, tmp8_type, VOID, tmp9_defaultValue, 'darkTextField')]));
  };
  var Companion_instance_2;
  function Companion_getInstance_7() {
    if (Companion_instance_2 == null)
      new Companion_2();
    return Companion_instance_2;
  }
  function $serializer_1() {
    $serializer_instance_1 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('eu.fbk.st.cryptoac.ac.xacmlauthzforce.ACServiceRBACXACMLAuthzForceParameters', this, 3);
    tmp0_serialDesc.h2t('port', false);
    tmp0_serialDesc.h2t('url', false);
    tmp0_serialDesc.h2t('acType', true);
    this.w4v_1 = tmp0_serialDesc;
  }
  protoOf($serializer_1).s2i = function () {
    return this.w4v_1;
  };
  protoOf($serializer_1).w2t = function () {
    var tmp0_cached = Companion_getInstance_7().r4v_1;
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [IntSerializer_getInstance(), StringSerializer_getInstance(), tmp0_cached[2]];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  protoOf($serializer_1).u2i = function (decoder) {
    var tmp0_desc = this.w4v_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = 0;
    var tmp5_local1 = null;
    var tmp6_local2 = null;
    var tmp7_input = decoder.e2m(tmp0_desc);
    var tmp8_cached = Companion_getInstance_7().r4v_1;
    if (tmp7_input.t2m()) {
      tmp4_local0 = tmp7_input.j2m(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp7_input.o2m(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp7_input.q2m(tmp0_desc, 2, tmp8_cached[2], tmp6_local2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp7_input.u2m(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp7_input.j2m(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp7_input.o2m(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp7_input.q2m(tmp0_desc, 2, tmp8_cached[2], tmp6_local2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp7_input.f2m(tmp0_desc);
    return ACServiceRBACXACMLAuthzForceParameters_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
  };
  protoOf($serializer_1).x4v = function (encoder, value) {
    var tmp0_desc = this.w4v_1;
    var tmp1_output = encoder.e2m(tmp0_desc);
    var tmp2_cached = Companion_getInstance_7().r4v_1;
    tmp1_output.n2n(tmp0_desc, 0, value.t4v_1);
    tmp1_output.s2n(tmp0_desc, 1, value.u4v_1);
    if (tmp1_output.a2o(tmp0_desc, 2) ? true : !value.v4v_1.equals(ACType_RBAC_XACML_AUTHZFORCE_getInstance())) {
      tmp1_output.u2n(tmp0_desc, 2, tmp2_cached[2], value.v4v_1);
    }
    tmp1_output.f2m(tmp0_desc);
  };
  protoOf($serializer_1).t2i = function (encoder, value) {
    return this.x4v(encoder, value instanceof ACServiceRBACXACMLAuthzForceParameters ? value : THROW_CCE());
  };
  var $serializer_instance_1;
  function $serializer_getInstance_1() {
    if ($serializer_instance_1 == null)
      new $serializer_1();
    return $serializer_instance_1;
  }
  function ACServiceRBACXACMLAuthzForceParameters_init_$Init$(seen1, port, url, acType, serializationConstructorMarker, $this) {
    if (!(3 === (3 & seen1))) {
      throwMissingFieldException(seen1, 3, $serializer_getInstance_1().w4v_1);
    }
    $this.t4v_1 = port;
    $this.u4v_1 = url;
    if (0 === (seen1 & 4))
      $this.v4v_1 = ACType_RBAC_XACML_AUTHZFORCE_getInstance();
    else
      $this.v4v_1 = acType;
    return $this;
  }
  function ACServiceRBACXACMLAuthzForceParameters_init_$Create$(seen1, port, url, acType, serializationConstructorMarker) {
    return ACServiceRBACXACMLAuthzForceParameters_init_$Init$(seen1, port, url, acType, serializationConstructorMarker, objectCreate(protoOf(ACServiceRBACXACMLAuthzForceParameters)));
  }
  function ACServiceRBACXACMLAuthzForceParameters(port, url) {
    Companion_getInstance_7();
    this.t4v_1 = port;
    this.u4v_1 = url;
    this.v4v_1 = ACType_RBAC_XACML_AUTHZFORCE_getInstance();
  }
  protoOf(ACServiceRBACXACMLAuthzForceParameters).y4u = function () {
    return this.v4v_1;
  };
  protoOf(ACServiceRBACXACMLAuthzForceParameters).equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (other instanceof ACServiceRBACXACMLAuthzForceParameters)
      other;
    else
      THROW_CCE();
    if (!(this.t4v_1 === other.t4v_1))
      return false;
    if (!(this.u4v_1 === other.u4v_1))
      return false;
    if (!this.v4v_1.equals(other.v4v_1))
      return false;
    return true;
  };
  protoOf(ACServiceRBACXACMLAuthzForceParameters).hashCode = function () {
    var result = this.t4v_1;
    result = imul(31, result) + getStringHashCode(this.u4v_1) | 0;
    result = imul(31, result) + this.v4v_1.hashCode() | 0;
    return result;
  };
  var logger;
  function get_myJson() {
    _init_properties_CoreParameters_kt__7ffign();
    return myJson;
  }
  var myJson;
  function _get_$cachedSerializer__te6jhj_0($this) {
    return $this.y4v_1.q();
  }
  function CoreParameters$Companion$_anonymous__b6xyee() {
    var tmp = getKClass(CoreParameters);
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = [];
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return PolymorphicSerializer_init_$Create$(tmp, tmp$ret$2);
  }
  function Companion_3() {
    Companion_instance_3 = this;
    var tmp = this;
    var tmp_0 = LazyThreadSafetyMode_PUBLICATION_getInstance();
    tmp.y4v_1 = lazy(tmp_0, CoreParameters$Companion$_anonymous__b6xyee);
  }
  protoOf(Companion_3).p37 = function () {
    return _get_$cachedSerializer__te6jhj_0(this);
  };
  protoOf(Companion_3).h2u = function (typeParamsSerializers) {
    return this.p37();
  };
  var Companion_instance_3;
  function Companion_getInstance_8() {
    if (Companion_instance_3 == null)
      new Companion_3();
    return Companion_instance_3;
  }
  function CoreParameters_init_$Init$(seen1, serializationConstructorMarker, $this) {
    return $this;
  }
  function CoreParameters() {
    Companion_getInstance_8();
  }
  protoOf(CoreParameters).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CoreParameters))
      return false;
    if (!this.k25().equals(other.k25()))
      return false;
    if (!this.z4v().equals(other.z4v()))
      return false;
    if (!this.a4w().equals(other.a4w()))
      return false;
    if (!(this.b4w() === other.b4w()))
      return false;
    if (!equals(this.c4w(), other.c4w()))
      return false;
    if (!equals(this.d4w(), other.d4w()))
      return false;
    if (!equals(this.e4w(), other.e4w()))
      return false;
    if (!equals(this.f4w(), other.f4w()))
      return false;
    return true;
  };
  protoOf(CoreParameters).hashCode = function () {
    var result = this.k25().hashCode();
    result = imul(31, result) + this.z4v().hashCode() | 0;
    result = imul(31, result) + this.a4w().hashCode() | 0;
    result = imul(31, result) + this.b4w() | 0;
    var tmp = imul(31, result);
    var tmp0_safe_receiver = this.c4w();
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
    result = tmp + (tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs) | 0;
    result = imul(31, result) + hashCode(this.d4w()) | 0;
    result = imul(31, result) + hashCode(this.e4w()) | 0;
    var tmp_0 = imul(31, result);
    var tmp2_safe_receiver = this.f4w();
    var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : hashCode(tmp2_safe_receiver);
    result = tmp_0 + (tmp3_elvis_lhs == null ? 0 : tmp3_elvis_lhs) | 0;
    return result;
  };
  function logger$lambda() {
    _init_properties_CoreParameters_kt__7ffign();
    return Unit_getInstance();
  }
  function myJson$lambda($this$Json) {
    _init_properties_CoreParameters_kt__7ffign();
    $this$Json.c36_1 = true;
    var tmp = $this$Json;
    var tmp$ret$48;
    // Inline function 'kotlinx.serialization.modules.SerializersModule' call
    var builder = new SerializersModuleBuilder();
    // Inline function 'eu.fbk.st.cryptoac.core.myJson.<anonymous>.<anonymous>' call
    // Inline function 'kotlinx.serialization.modules.polymorphic' call
    var tmp0_polymorphic = getKClass(ACServiceParameters);
    var builder_0 = new PolymorphicModuleBuilder(tmp0_polymorphic, null);
    // Inline function 'eu.fbk.st.cryptoac.core.myJson.<anonymous>.<anonymous>.<anonymous>' call
    var tmp$ret$2;
    // Inline function 'kotlinx.serialization.modules.subclass' call
    var tmp1_subclass = getKClass(ACServiceRBACXACMLAuthzForceParameters);
    var tmp$ret$1;
    // Inline function 'kotlinx.serialization.serializer' call
    var tmp$ret$0;
    // Inline function 'kotlinx.serialization.internal.cast' call
    var tmp0_cast = serializer(createKType(getKClass(ACServiceRBACXACMLAuthzForceParameters), arrayOf([]), false));
    tmp$ret$0 = isInterface(tmp0_cast, KSerializer) ? tmp0_cast : THROW_CCE();
    tmp$ret$1 = tmp$ret$0;
    builder_0.e32(tmp1_subclass, tmp$ret$1);
    tmp$ret$2 = Unit_getInstance();
    var tmp$ret$5;
    // Inline function 'kotlinx.serialization.modules.subclass' call
    var tmp3_subclass = getKClass(ACServiceRBACOPAParameters);
    var tmp$ret$4;
    // Inline function 'kotlinx.serialization.serializer' call
    var tmp$ret$3;
    // Inline function 'kotlinx.serialization.internal.cast' call
    var tmp2_cast = serializer(createKType(getKClass(ACServiceRBACOPAParameters), arrayOf([]), false));
    tmp$ret$3 = isInterface(tmp2_cast, KSerializer) ? tmp2_cast : THROW_CCE();
    tmp$ret$4 = tmp$ret$3;
    builder_0.e32(tmp3_subclass, tmp$ret$4);
    tmp$ret$5 = Unit_getInstance();
    var tmp$ret$8;
    // Inline function 'kotlinx.serialization.modules.subclass' call
    var tmp5_subclass = getKClass(ACServiceRBACDynSecParameters);
    var tmp$ret$7;
    // Inline function 'kotlinx.serialization.serializer' call
    var tmp$ret$6;
    // Inline function 'kotlinx.serialization.internal.cast' call
    var tmp4_cast = serializer(createKType(getKClass(ACServiceRBACDynSecParameters), arrayOf([]), false));
    tmp$ret$6 = isInterface(tmp4_cast, KSerializer) ? tmp4_cast : THROW_CCE();
    tmp$ret$7 = tmp$ret$6;
    builder_0.e32(tmp5_subclass, tmp$ret$7);
    tmp$ret$8 = Unit_getInstance();
    builder_0.f32(builder);
    // Inline function 'kotlinx.serialization.modules.polymorphic' call
    var tmp1_polymorphic = getKClass(DMServiceParameters);
    var builder_1 = new PolymorphicModuleBuilder(tmp1_polymorphic, null);
    // Inline function 'eu.fbk.st.cryptoac.core.myJson.<anonymous>.<anonymous>.<anonymous>' call
    var tmp$ret$11;
    // Inline function 'kotlinx.serialization.modules.subclass' call
    var tmp1_subclass_0 = getKClass(DMServiceCryptoACParameters);
    var tmp$ret$10;
    // Inline function 'kotlinx.serialization.serializer' call
    var tmp$ret$9;
    // Inline function 'kotlinx.serialization.internal.cast' call
    var tmp0_cast_0 = serializer(createKType(getKClass(DMServiceCryptoACParameters), arrayOf([]), false));
    tmp$ret$9 = isInterface(tmp0_cast_0, KSerializer) ? tmp0_cast_0 : THROW_CCE();
    tmp$ret$10 = tmp$ret$9;
    builder_1.e32(tmp1_subclass_0, tmp$ret$10);
    tmp$ret$11 = Unit_getInstance();
    var tmp$ret$14;
    // Inline function 'kotlinx.serialization.modules.subclass' call
    var tmp3_subclass_0 = getKClass(DMServiceMQTTParameters);
    var tmp$ret$13;
    // Inline function 'kotlinx.serialization.serializer' call
    var tmp$ret$12;
    // Inline function 'kotlinx.serialization.internal.cast' call
    var tmp2_cast_0 = serializer(createKType(getKClass(DMServiceMQTTParameters), arrayOf([]), false));
    tmp$ret$12 = isInterface(tmp2_cast_0, KSerializer) ? tmp2_cast_0 : THROW_CCE();
    tmp$ret$13 = tmp$ret$12;
    builder_1.e32(tmp3_subclass_0, tmp$ret$13);
    tmp$ret$14 = Unit_getInstance();
    builder_1.f32(builder);
    // Inline function 'kotlinx.serialization.modules.polymorphic' call
    var tmp2_polymorphic = getKClass(DMServiceRemoteUPParameters);
    var builder_2 = new PolymorphicModuleBuilder(tmp2_polymorphic, null);
    // Inline function 'eu.fbk.st.cryptoac.core.myJson.<anonymous>.<anonymous>.<anonymous>' call
    var tmp$ret$17;
    // Inline function 'kotlinx.serialization.modules.subclass' call
    var tmp1_subclass_1 = getKClass(DMServiceCryptoACParameters);
    var tmp$ret$16;
    // Inline function 'kotlinx.serialization.serializer' call
    var tmp$ret$15;
    // Inline function 'kotlinx.serialization.internal.cast' call
    var tmp0_cast_1 = serializer(createKType(getKClass(DMServiceCryptoACParameters), arrayOf([]), false));
    tmp$ret$15 = isInterface(tmp0_cast_1, KSerializer) ? tmp0_cast_1 : THROW_CCE();
    tmp$ret$16 = tmp$ret$15;
    builder_2.e32(tmp1_subclass_1, tmp$ret$16);
    tmp$ret$17 = Unit_getInstance();
    var tmp$ret$20;
    // Inline function 'kotlinx.serialization.modules.subclass' call
    var tmp3_subclass_1 = getKClass(DMServiceMQTTParameters);
    var tmp$ret$19;
    // Inline function 'kotlinx.serialization.serializer' call
    var tmp$ret$18;
    // Inline function 'kotlinx.serialization.internal.cast' call
    var tmp2_cast_1 = serializer(createKType(getKClass(DMServiceMQTTParameters), arrayOf([]), false));
    tmp$ret$18 = isInterface(tmp2_cast_1, KSerializer) ? tmp2_cast_1 : THROW_CCE();
    tmp$ret$19 = tmp$ret$18;
    builder_2.e32(tmp3_subclass_1, tmp$ret$19);
    tmp$ret$20 = Unit_getInstance();
    builder_2.f32(builder);
    // Inline function 'kotlinx.serialization.modules.polymorphic' call
    var tmp3_polymorphic = getKClass(MMServiceParameters);
    var builder_3 = new PolymorphicModuleBuilder(tmp3_polymorphic, null);
    // Inline function 'eu.fbk.st.cryptoac.core.myJson.<anonymous>.<anonymous>.<anonymous>' call
    var tmp$ret$23;
    // Inline function 'kotlinx.serialization.modules.subclass' call
    var tmp1_subclass_2 = getKClass(MMServiceABACMySQLParameters);
    var tmp$ret$22;
    // Inline function 'kotlinx.serialization.serializer' call
    var tmp$ret$21;
    // Inline function 'kotlinx.serialization.internal.cast' call
    var tmp0_cast_2 = serializer(createKType(getKClass(MMServiceABACMySQLParameters), arrayOf([]), false));
    tmp$ret$21 = isInterface(tmp0_cast_2, KSerializer) ? tmp0_cast_2 : THROW_CCE();
    tmp$ret$22 = tmp$ret$21;
    builder_3.e32(tmp1_subclass_2, tmp$ret$22);
    tmp$ret$23 = Unit_getInstance();
    var tmp$ret$26;
    // Inline function 'kotlinx.serialization.modules.subclass' call
    var tmp3_subclass_2 = getKClass(MMServiceRBACMySQLParameters);
    var tmp$ret$25;
    // Inline function 'kotlinx.serialization.serializer' call
    var tmp$ret$24;
    // Inline function 'kotlinx.serialization.internal.cast' call
    var tmp2_cast_2 = serializer(createKType(getKClass(MMServiceRBACMySQLParameters), arrayOf([]), false));
    tmp$ret$24 = isInterface(tmp2_cast_2, KSerializer) ? tmp2_cast_2 : THROW_CCE();
    tmp$ret$25 = tmp$ret$24;
    builder_3.e32(tmp3_subclass_2, tmp$ret$25);
    tmp$ret$26 = Unit_getInstance();
    var tmp$ret$29;
    // Inline function 'kotlinx.serialization.modules.subclass' call
    var tmp5_subclass_0 = getKClass(MMServiceRedisParameters);
    var tmp$ret$28;
    // Inline function 'kotlinx.serialization.serializer' call
    var tmp$ret$27;
    // Inline function 'kotlinx.serialization.internal.cast' call
    var tmp4_cast_0 = serializer(createKType(getKClass(MMServiceRedisParameters), arrayOf([]), false));
    tmp$ret$27 = isInterface(tmp4_cast_0, KSerializer) ? tmp4_cast_0 : THROW_CCE();
    tmp$ret$28 = tmp$ret$27;
    builder_3.e32(tmp5_subclass_0, tmp$ret$28);
    tmp$ret$29 = Unit_getInstance();
    builder_3.f32(builder);
    // Inline function 'kotlinx.serialization.modules.polymorphic' call
    var tmp4_polymorphic = getKClass(MMServiceRemoteUPParameters);
    var builder_4 = new PolymorphicModuleBuilder(tmp4_polymorphic, null);
    // Inline function 'eu.fbk.st.cryptoac.core.myJson.<anonymous>.<anonymous>.<anonymous>' call
    var tmp$ret$32;
    // Inline function 'kotlinx.serialization.modules.subclass' call
    var tmp1_subclass_3 = getKClass(MMServiceABACMySQLParameters);
    var tmp$ret$31;
    // Inline function 'kotlinx.serialization.serializer' call
    var tmp$ret$30;
    // Inline function 'kotlinx.serialization.internal.cast' call
    var tmp0_cast_3 = serializer(createKType(getKClass(MMServiceABACMySQLParameters), arrayOf([]), false));
    tmp$ret$30 = isInterface(tmp0_cast_3, KSerializer) ? tmp0_cast_3 : THROW_CCE();
    tmp$ret$31 = tmp$ret$30;
    builder_4.e32(tmp1_subclass_3, tmp$ret$31);
    tmp$ret$32 = Unit_getInstance();
    var tmp$ret$35;
    // Inline function 'kotlinx.serialization.modules.subclass' call
    var tmp3_subclass_3 = getKClass(MMServiceRBACMySQLParameters);
    var tmp$ret$34;
    // Inline function 'kotlinx.serialization.serializer' call
    var tmp$ret$33;
    // Inline function 'kotlinx.serialization.internal.cast' call
    var tmp2_cast_3 = serializer(createKType(getKClass(MMServiceRBACMySQLParameters), arrayOf([]), false));
    tmp$ret$33 = isInterface(tmp2_cast_3, KSerializer) ? tmp2_cast_3 : THROW_CCE();
    tmp$ret$34 = tmp$ret$33;
    builder_4.e32(tmp3_subclass_3, tmp$ret$34);
    tmp$ret$35 = Unit_getInstance();
    var tmp$ret$38;
    // Inline function 'kotlinx.serialization.modules.subclass' call
    var tmp5_subclass_1 = getKClass(MMServiceRedisParameters);
    var tmp$ret$37;
    // Inline function 'kotlinx.serialization.serializer' call
    var tmp$ret$36;
    // Inline function 'kotlinx.serialization.internal.cast' call
    var tmp4_cast_1 = serializer(createKType(getKClass(MMServiceRedisParameters), arrayOf([]), false));
    tmp$ret$36 = isInterface(tmp4_cast_1, KSerializer) ? tmp4_cast_1 : THROW_CCE();
    tmp$ret$37 = tmp$ret$36;
    builder_4.e32(tmp5_subclass_1, tmp$ret$37);
    tmp$ret$38 = Unit_getInstance();
    builder_4.f32(builder);
    // Inline function 'kotlinx.serialization.modules.polymorphic' call
    var tmp5_polymorphic = getKClass(RMServiceParameters);
    var builder_5 = new PolymorphicModuleBuilder(tmp5_polymorphic, null);
    // Inline function 'eu.fbk.st.cryptoac.core.myJson.<anonymous>.<anonymous>.<anonymous>' call
    var tmp$ret$41;
    // Inline function 'kotlinx.serialization.modules.subclass' call
    var tmp1_subclass_4 = getKClass(RMServiceRBACCryptoACParameters);
    var tmp$ret$40;
    // Inline function 'kotlinx.serialization.serializer' call
    var tmp$ret$39;
    // Inline function 'kotlinx.serialization.internal.cast' call
    var tmp0_cast_4 = serializer(createKType(getKClass(RMServiceRBACCryptoACParameters), arrayOf([]), false));
    tmp$ret$39 = isInterface(tmp0_cast_4, KSerializer) ? tmp0_cast_4 : THROW_CCE();
    tmp$ret$40 = tmp$ret$39;
    builder_5.e32(tmp1_subclass_4, tmp$ret$40);
    tmp$ret$41 = Unit_getInstance();
    builder_5.f32(builder);
    // Inline function 'kotlinx.serialization.modules.polymorphic' call
    var tmp6_polymorphic = getKClass(RMServiceRemoteUPParameters);
    var builder_6 = new PolymorphicModuleBuilder(tmp6_polymorphic, null);
    // Inline function 'eu.fbk.st.cryptoac.core.myJson.<anonymous>.<anonymous>.<anonymous>' call
    var tmp$ret$44;
    // Inline function 'kotlinx.serialization.modules.subclass' call
    var tmp1_subclass_5 = getKClass(RMServiceRBACCryptoACParameters);
    var tmp$ret$43;
    // Inline function 'kotlinx.serialization.serializer' call
    var tmp$ret$42;
    // Inline function 'kotlinx.serialization.internal.cast' call
    var tmp0_cast_5 = serializer(createKType(getKClass(RMServiceRBACCryptoACParameters), arrayOf([]), false));
    tmp$ret$42 = isInterface(tmp0_cast_5, KSerializer) ? tmp0_cast_5 : THROW_CCE();
    tmp$ret$43 = tmp$ret$42;
    builder_6.e32(tmp1_subclass_5, tmp$ret$43);
    tmp$ret$44 = Unit_getInstance();
    builder_6.f32(builder);
    // Inline function 'kotlinx.serialization.modules.polymorphic' call
    var tmp7_polymorphic = getKClass(CoreParameters);
    var builder_7 = new PolymorphicModuleBuilder(tmp7_polymorphic, null);
    // Inline function 'eu.fbk.st.cryptoac.core.myJson.<anonymous>.<anonymous>.<anonymous>' call
    var tmp$ret$47;
    // Inline function 'kotlinx.serialization.modules.subclass' call
    var tmp1_subclass_6 = getKClass(CoreParametersRBAC);
    var tmp$ret$46;
    // Inline function 'kotlinx.serialization.serializer' call
    var tmp$ret$45;
    // Inline function 'kotlinx.serialization.internal.cast' call
    var tmp0_cast_6 = serializer(createKType(getKClass(CoreParametersRBAC), arrayOf([]), false));
    tmp$ret$45 = isInterface(tmp0_cast_6, KSerializer) ? tmp0_cast_6 : THROW_CCE();
    tmp$ret$46 = tmp$ret$45;
    builder_7.e32(tmp1_subclass_6, tmp$ret$46);
    tmp$ret$47 = Unit_getInstance();
    builder_7.f32(builder);
    tmp$ret$48 = builder.u1a();
    tmp.p36_1 = tmp$ret$48;
    return Unit_getInstance();
  }
  var properties_initialized_CoreParameters_kt_qz7d7;
  function _init_properties_CoreParameters_kt__7ffign() {
    if (properties_initialized_CoreParameters_kt_qz7d7) {
    } else {
      properties_initialized_CoreParameters_kt_qz7d7 = true;
      var tmp = KotlinLogging_getInstance();
      logger = tmp.b4r(logger$lambda);
      myJson = Json(VOID, myJson$lambda);
    }
  }
  function Companion_4() {
    Companion_instance_4 = this;
    var tmp = this;
    var tmp$ret$14;
    // Inline function 'kotlin.arrayOf' call
    var tmp_0 = createSimpleEnumSerializer('eu.fbk.st.cryptoac.core.CoreType', values_1());
    var tmp_1 = Companion_getInstance_13().p37();
    var tmp_2 = getKClass(RMServiceParameters);
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = [];
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    var tmp_3 = PolymorphicSerializer_init_$Create$(tmp_2, tmp$ret$2);
    var tmp_4 = getKClass(MMServiceParameters);
    var tmp$ret$5;
    // Inline function 'kotlin.arrayOf' call
    var tmp$ret$4;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$3;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$3 = [];
    tmp$ret$4 = tmp$ret$3;
    tmp$ret$5 = tmp$ret$4;
    var tmp_5 = PolymorphicSerializer_init_$Create$(tmp_4, tmp$ret$5);
    var tmp_6 = getKClass(DMServiceParameters);
    var tmp$ret$8;
    // Inline function 'kotlin.arrayOf' call
    var tmp$ret$7;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$6;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$6 = [];
    tmp$ret$7 = tmp$ret$6;
    tmp$ret$8 = tmp$ret$7;
    var tmp_7 = PolymorphicSerializer_init_$Create$(tmp_6, tmp$ret$8);
    var tmp_8 = getKClass(ACServiceParameters);
    var tmp$ret$11;
    // Inline function 'kotlin.arrayOf' call
    var tmp$ret$10;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$9;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$9 = [];
    tmp$ret$10 = tmp$ret$9;
    tmp$ret$11 = tmp$ret$10;
    var tmp0_arrayOf = [null, tmp_0, tmp_1, null, tmp_3, tmp_5, tmp_7, PolymorphicSerializer_init_$Create$(tmp_8, tmp$ret$11)];
    var tmp$ret$13;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$12;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$12 = tmp0_arrayOf;
    tmp$ret$13 = tmp$ret$12;
    tmp$ret$14 = tmp$ret$13;
    tmp.h4w_1 = tmp$ret$14;
  }
  var Companion_instance_4;
  function Companion_getInstance_9() {
    if (Companion_instance_4 == null)
      new Companion_4();
    return Companion_instance_4;
  }
  function $serializer_2() {
    $serializer_instance_2 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('eu.fbk.st.cryptoac.core.CoreParametersRBAC', this, 8);
    tmp0_serialDesc.h2t('user', false);
    tmp0_serialDesc.h2t('coreType', false);
    tmp0_serialDesc.h2t('cryptoType', false);
    tmp0_serialDesc.h2t('versionNumber', true);
    tmp0_serialDesc.h2t('rmServiceParameters', false);
    tmp0_serialDesc.h2t('mmServiceParameters', false);
    tmp0_serialDesc.h2t('dmServiceParameters', false);
    tmp0_serialDesc.h2t('acServiceParameters', false);
    this.i4w_1 = tmp0_serialDesc;
  }
  protoOf($serializer_2).s2i = function () {
    return this.i4w_1;
  };
  protoOf($serializer_2).w2t = function () {
    var tmp0_cached = Companion_getInstance_9().h4w_1;
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [$serializer_getInstance_15(), tmp0_cached[1], tmp0_cached[2], IntSerializer_getInstance(), get_nullable(tmp0_cached[4]), tmp0_cached[5], tmp0_cached[6], get_nullable(tmp0_cached[7])];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  protoOf($serializer_2).u2i = function (decoder) {
    var tmp0_desc = this.i4w_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = null;
    var tmp6_local2 = null;
    var tmp7_local3 = 0;
    var tmp8_local4 = null;
    var tmp9_local5 = null;
    var tmp10_local6 = null;
    var tmp11_local7 = null;
    var tmp12_input = decoder.e2m(tmp0_desc);
    var tmp13_cached = Companion_getInstance_9().h4w_1;
    if (tmp12_input.t2m()) {
      tmp4_local0 = tmp12_input.q2m(tmp0_desc, 0, $serializer_getInstance_15(), tmp4_local0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp12_input.q2m(tmp0_desc, 1, tmp13_cached[1], tmp5_local1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp12_input.q2m(tmp0_desc, 2, tmp13_cached[2], tmp6_local2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp12_input.j2m(tmp0_desc, 3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
      tmp8_local4 = tmp12_input.s2m(tmp0_desc, 4, tmp13_cached[4], tmp8_local4);
      tmp3_bitMask0 = tmp3_bitMask0 | 16;
      tmp9_local5 = tmp12_input.q2m(tmp0_desc, 5, tmp13_cached[5], tmp9_local5);
      tmp3_bitMask0 = tmp3_bitMask0 | 32;
      tmp10_local6 = tmp12_input.q2m(tmp0_desc, 6, tmp13_cached[6], tmp10_local6);
      tmp3_bitMask0 = tmp3_bitMask0 | 64;
      tmp11_local7 = tmp12_input.s2m(tmp0_desc, 7, tmp13_cached[7], tmp11_local7);
      tmp3_bitMask0 = tmp3_bitMask0 | 128;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp12_input.u2m(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp12_input.q2m(tmp0_desc, 0, $serializer_getInstance_15(), tmp4_local0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp12_input.q2m(tmp0_desc, 1, tmp13_cached[1], tmp5_local1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp12_input.q2m(tmp0_desc, 2, tmp13_cached[2], tmp6_local2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp12_input.j2m(tmp0_desc, 3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          case 4:
            tmp8_local4 = tmp12_input.s2m(tmp0_desc, 4, tmp13_cached[4], tmp8_local4);
            tmp3_bitMask0 = tmp3_bitMask0 | 16;
            break;
          case 5:
            tmp9_local5 = tmp12_input.q2m(tmp0_desc, 5, tmp13_cached[5], tmp9_local5);
            tmp3_bitMask0 = tmp3_bitMask0 | 32;
            break;
          case 6:
            tmp10_local6 = tmp12_input.q2m(tmp0_desc, 6, tmp13_cached[6], tmp10_local6);
            tmp3_bitMask0 = tmp3_bitMask0 | 64;
            break;
          case 7:
            tmp11_local7 = tmp12_input.s2m(tmp0_desc, 7, tmp13_cached[7], tmp11_local7);
            tmp3_bitMask0 = tmp3_bitMask0 | 128;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp12_input.f2m(tmp0_desc);
    return CoreParametersRBAC_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, tmp11_local7, null);
  };
  protoOf($serializer_2).j4w = function (encoder, value) {
    var tmp0_desc = this.i4w_1;
    var tmp1_output = encoder.e2m(tmp0_desc);
    var tmp2_cached = Companion_getInstance_9().h4w_1;
    tmp1_output.u2n(tmp0_desc, 0, $serializer_getInstance_15(), value.k25());
    tmp1_output.u2n(tmp0_desc, 1, tmp2_cached[1], value.z4v());
    tmp1_output.u2n(tmp0_desc, 2, tmp2_cached[2], value.a4w());
    if (tmp1_output.a2o(tmp0_desc, 3) ? true : !(value.b4w() === 1)) {
      tmp1_output.n2n(tmp0_desc, 3, value.b4w());
    }
    tmp1_output.w2n(tmp0_desc, 4, tmp2_cached[4], value.c4w());
    tmp1_output.u2n(tmp0_desc, 5, tmp2_cached[5], value.d4w());
    tmp1_output.u2n(tmp0_desc, 6, tmp2_cached[6], value.e4w());
    tmp1_output.w2n(tmp0_desc, 7, tmp2_cached[7], value.f4w());
    tmp1_output.f2m(tmp0_desc);
  };
  protoOf($serializer_2).t2i = function (encoder, value) {
    return this.j4w(encoder, value instanceof CoreParametersRBAC ? value : THROW_CCE());
  };
  var $serializer_instance_2;
  function $serializer_getInstance_2() {
    if ($serializer_instance_2 == null)
      new $serializer_2();
    return $serializer_instance_2;
  }
  function CoreParametersRBAC_init_$Init$(seen1, user, coreType, cryptoType, versionNumber, rmServiceParameters, mmServiceParameters, dmServiceParameters, acServiceParameters, serializationConstructorMarker, $this) {
    if (!(247 === (247 & seen1))) {
      throwMissingFieldException(seen1, 247, $serializer_getInstance_2().i4w_1);
    }
    CoreParameters_init_$Init$(seen1, serializationConstructorMarker, $this);
    $this.k4w_1 = user;
    $this.l4w_1 = coreType;
    $this.m4w_1 = cryptoType;
    if (0 === (seen1 & 8))
      $this.n4w_1 = 1;
    else
      $this.n4w_1 = versionNumber;
    $this.o4w_1 = rmServiceParameters;
    $this.p4w_1 = mmServiceParameters;
    $this.q4w_1 = dmServiceParameters;
    $this.r4w_1 = acServiceParameters;
    return $this;
  }
  function CoreParametersRBAC_init_$Create$(seen1, user, coreType, cryptoType, versionNumber, rmServiceParameters, mmServiceParameters, dmServiceParameters, acServiceParameters, serializationConstructorMarker) {
    return CoreParametersRBAC_init_$Init$(seen1, user, coreType, cryptoType, versionNumber, rmServiceParameters, mmServiceParameters, dmServiceParameters, acServiceParameters, serializationConstructorMarker, objectCreate(protoOf(CoreParametersRBAC)));
  }
  function CoreParametersRBAC(user, coreType, cryptoType, versionNumber, rmServiceParameters, mmServiceParameters, dmServiceParameters, acServiceParameters) {
    Companion_getInstance_9();
    versionNumber = versionNumber === VOID ? 1 : versionNumber;
    CoreParameters.call(this);
    this.k4w_1 = user;
    this.l4w_1 = coreType;
    this.m4w_1 = cryptoType;
    this.n4w_1 = versionNumber;
    this.o4w_1 = rmServiceParameters;
    this.p4w_1 = mmServiceParameters;
    this.q4w_1 = dmServiceParameters;
    this.r4w_1 = acServiceParameters;
  }
  protoOf(CoreParametersRBAC).k25 = function () {
    return this.k4w_1;
  };
  protoOf(CoreParametersRBAC).z4v = function () {
    return this.l4w_1;
  };
  protoOf(CoreParametersRBAC).a4w = function () {
    return this.m4w_1;
  };
  protoOf(CoreParametersRBAC).b4w = function () {
    return this.n4w_1;
  };
  protoOf(CoreParametersRBAC).c4w = function () {
    return this.o4w_1;
  };
  protoOf(CoreParametersRBAC).d4w = function () {
    return this.p4w_1;
  };
  protoOf(CoreParametersRBAC).e4w = function () {
    return this.q4w_1;
  };
  protoOf(CoreParametersRBAC).f4w = function () {
    return this.r4w_1;
  };
  var CoreType_RBAC_AT_REST_instance;
  var CoreType_RBAC_MQTT_instance;
  var CoreType_ABAC_AT_REST_instance;
  var CoreType_ABAC_MQTT_instance;
  function values_1() {
    return [CoreType_RBAC_AT_REST_getInstance(), CoreType_RBAC_MQTT_getInstance(), CoreType_ABAC_AT_REST_getInstance(), CoreType_ABAC_MQTT_getInstance()];
  }
  function valueOf_0(value) {
    switch (value) {
      case 'RBAC_AT_REST':
        return CoreType_RBAC_AT_REST_getInstance();
      case 'RBAC_MQTT':
        return CoreType_RBAC_MQTT_getInstance();
      case 'ABAC_AT_REST':
        return CoreType_ABAC_AT_REST_getInstance();
      case 'ABAC_MQTT':
        return CoreType_ABAC_MQTT_getInstance();
      default:
        CoreType_initEntries();
        THROW_ISE();
        break;
    }
  }
  var CoreType_entriesInitialized;
  function CoreType_initEntries() {
    if (CoreType_entriesInitialized)
      return Unit_getInstance();
    CoreType_entriesInitialized = true;
    CoreType_RBAC_AT_REST_instance = new CoreType('RBAC_AT_REST', 0);
    CoreType_RBAC_MQTT_instance = new CoreType('RBAC_MQTT', 1);
    CoreType_ABAC_AT_REST_instance = new CoreType('ABAC_AT_REST', 2);
    CoreType_ABAC_MQTT_instance = new CoreType('ABAC_MQTT', 3);
  }
  function CoreType(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  protoOf(CoreType).u4w = function () {
    var tmp0_subject = this;
    var tmp0 = tmp0_subject.n4_1;
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = 'RBAC for data at rest';
        break;
      case 1:
        tmp = 'RBAC for MQTT';
        break;
      case 2:
        tmp = 'ABAC for data at rest';
        break;
      case 3:
        tmp = 'ABAC for MQTT';
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  };
  function CoreType_RBAC_AT_REST_getInstance() {
    CoreType_initEntries();
    return CoreType_RBAC_AT_REST_instance;
  }
  function CoreType_RBAC_MQTT_getInstance() {
    CoreType_initEntries();
    return CoreType_RBAC_MQTT_instance;
  }
  function CoreType_ABAC_AT_REST_getInstance() {
    CoreType_initEntries();
    return CoreType_ABAC_AT_REST_instance;
  }
  function CoreType_ABAC_MQTT_getInstance() {
    CoreType_initEntries();
    return CoreType_ABAC_MQTT_instance;
  }
  function Companion_5() {
    Companion_instance_5 = this;
  }
  var Companion_instance_5;
  function Companion_getInstance_10() {
    if (Companion_instance_5 == null)
      new Companion_5();
    return Companion_instance_5;
  }
  function $serializer_3() {
    $serializer_instance_3 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('eu.fbk.st.cryptoac.core.mqtt.MQTTMessage', this, 3);
    tmp0_serialDesc.h2t('message', false);
    tmp0_serialDesc.h2t('topic', false);
    tmp0_serialDesc.h2t('error', false);
    this.v4w_1 = tmp0_serialDesc;
  }
  protoOf($serializer_3).s2i = function () {
    return this.v4w_1;
  };
  protoOf($serializer_3).w2t = function () {
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [StringSerializer_getInstance(), StringSerializer_getInstance(), BooleanSerializer_getInstance()];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  protoOf($serializer_3).u2i = function (decoder) {
    var tmp0_desc = this.v4w_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = null;
    var tmp6_local2 = false;
    var tmp7_input = decoder.e2m(tmp0_desc);
    if (tmp7_input.t2m()) {
      tmp4_local0 = tmp7_input.o2m(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp7_input.o2m(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp7_input.g2m(tmp0_desc, 2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp7_input.u2m(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp7_input.o2m(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp7_input.o2m(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp7_input.g2m(tmp0_desc, 2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp7_input.f2m(tmp0_desc);
    return MQTTMessage_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
  };
  protoOf($serializer_3).w4w = function (encoder, value) {
    var tmp0_desc = this.v4w_1;
    var tmp1_output = encoder.e2m(tmp0_desc);
    tmp1_output.s2n(tmp0_desc, 0, value.x4w_1);
    tmp1_output.s2n(tmp0_desc, 1, value.y4w_1);
    tmp1_output.k2n(tmp0_desc, 2, value.z4w_1);
    tmp1_output.f2m(tmp0_desc);
  };
  protoOf($serializer_3).t2i = function (encoder, value) {
    return this.w4w(encoder, value instanceof MQTTMessage ? value : THROW_CCE());
  };
  var $serializer_instance_3;
  function $serializer_getInstance_3() {
    if ($serializer_instance_3 == null)
      new $serializer_3();
    return $serializer_instance_3;
  }
  function MQTTMessage_init_$Init$(seen1, message, topic, error, serializationConstructorMarker, $this) {
    if (!(7 === (7 & seen1))) {
      throwMissingFieldException(seen1, 7, $serializer_getInstance_3().v4w_1);
    }
    $this.x4w_1 = message;
    $this.y4w_1 = topic;
    $this.z4w_1 = error;
    return $this;
  }
  function MQTTMessage_init_$Create$(seen1, message, topic, error, serializationConstructorMarker) {
    return MQTTMessage_init_$Init$(seen1, message, topic, error, serializationConstructorMarker, objectCreate(protoOf(MQTTMessage)));
  }
  function MQTTMessage(message, topic, error) {
    Companion_getInstance_10();
    this.x4w_1 = message;
    this.y4w_1 = topic;
    this.z4w_1 = error;
  }
  protoOf(MQTTMessage).toString = function () {
    return 'MQTTMessage(message=' + this.x4w_1 + ', topic=' + this.y4w_1 + ', error=' + this.z4w_1 + ')';
  };
  protoOf(MQTTMessage).hashCode = function () {
    var result = getStringHashCode(this.x4w_1);
    result = imul(result, 31) + getStringHashCode(this.y4w_1) | 0;
    result = imul(result, 31) + (this.z4w_1 | 0) | 0;
    return result;
  };
  protoOf(MQTTMessage).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MQTTMessage))
      return false;
    var tmp0_other_with_cast = other instanceof MQTTMessage ? other : THROW_CCE();
    if (!(this.x4w_1 === tmp0_other_with_cast.x4w_1))
      return false;
    if (!(this.y4w_1 === tmp0_other_with_cast.y4w_1))
      return false;
    if (!(this.z4w_1 === tmp0_other_with_cast.z4w_1))
      return false;
    return true;
  };
  function Companion_6() {
    Companion_instance_6 = this;
    var tmp = this;
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [null, null, Companion_getInstance_12().p37()];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp.b4x_1 = tmp$ret$2;
  }
  var Companion_instance_6;
  function Companion_getInstance_11() {
    if (Companion_instance_6 == null)
      new Companion_6();
    return Companion_instance_6;
  }
  function $serializer_4() {
    $serializer_instance_4 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('eu.fbk.st.cryptoac.crypto.AsymKeys', this, 3);
    tmp0_serialDesc.h2t('private', false);
    tmp0_serialDesc.h2t('public', false);
    tmp0_serialDesc.h2t('keysType', false);
    this.c4x_1 = tmp0_serialDesc;
  }
  protoOf($serializer_4).s2i = function () {
    return this.c4x_1;
  };
  protoOf($serializer_4).w2t = function () {
    var tmp0_cached = Companion_getInstance_11().b4x_1;
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [StringSerializer_getInstance(), StringSerializer_getInstance(), tmp0_cached[2]];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  protoOf($serializer_4).u2i = function (decoder) {
    var tmp0_desc = this.c4x_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = null;
    var tmp6_local2 = null;
    var tmp7_input = decoder.e2m(tmp0_desc);
    var tmp8_cached = Companion_getInstance_11().b4x_1;
    if (tmp7_input.t2m()) {
      tmp4_local0 = tmp7_input.o2m(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp7_input.o2m(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp7_input.q2m(tmp0_desc, 2, tmp8_cached[2], tmp6_local2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp7_input.u2m(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp7_input.o2m(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp7_input.o2m(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp7_input.q2m(tmp0_desc, 2, tmp8_cached[2], tmp6_local2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp7_input.f2m(tmp0_desc);
    return AsymKeys_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, null);
  };
  protoOf($serializer_4).d4x = function (encoder, value) {
    var tmp0_desc = this.c4x_1;
    var tmp1_output = encoder.e2m(tmp0_desc);
    var tmp2_cached = Companion_getInstance_11().b4x_1;
    tmp1_output.s2n(tmp0_desc, 0, value.e4x_1);
    tmp1_output.s2n(tmp0_desc, 1, value.f4x_1);
    tmp1_output.u2n(tmp0_desc, 2, tmp2_cached[2], value.g4x_1);
    tmp1_output.f2m(tmp0_desc);
  };
  protoOf($serializer_4).t2i = function (encoder, value) {
    return this.d4x(encoder, value instanceof AsymKeys ? value : THROW_CCE());
  };
  var $serializer_instance_4;
  function $serializer_getInstance_4() {
    if ($serializer_instance_4 == null)
      new $serializer_4();
    return $serializer_instance_4;
  }
  function AsymKeys_init_$Init$(seen1, private_0, public_0, keysType, serializationConstructorMarker, $this) {
    if (!(7 === (7 & seen1))) {
      throwMissingFieldException(seen1, 7, $serializer_getInstance_4().c4x_1);
    }
    $this.e4x_1 = private_0;
    $this.f4x_1 = public_0;
    $this.g4x_1 = keysType;
    return $this;
  }
  function AsymKeys_init_$Create$(seen1, private_0, public_0, keysType, serializationConstructorMarker) {
    return AsymKeys_init_$Init$(seen1, private_0, public_0, keysType, serializationConstructorMarker, objectCreate(protoOf(AsymKeys)));
  }
  function AsymKeys() {
  }
  protoOf(AsymKeys).toString = function () {
    return 'AsymKeys(private=' + this.e4x_1 + ', public=' + this.f4x_1 + ', keysType=' + this.g4x_1 + ')';
  };
  protoOf(AsymKeys).hashCode = function () {
    var result = getStringHashCode(this.e4x_1);
    result = imul(result, 31) + getStringHashCode(this.f4x_1) | 0;
    result = imul(result, 31) + this.g4x_1.hashCode() | 0;
    return result;
  };
  protoOf(AsymKeys).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof AsymKeys))
      return false;
    var tmp0_other_with_cast = other instanceof AsymKeys ? other : THROW_CCE();
    if (!(this.e4x_1 === tmp0_other_with_cast.e4x_1))
      return false;
    if (!(this.f4x_1 === tmp0_other_with_cast.f4x_1))
      return false;
    if (!this.g4x_1.equals(tmp0_other_with_cast.g4x_1))
      return false;
    return true;
  };
  function _get_$cachedSerializer__te6jhj_1($this) {
    return $this.a4x_1.q();
  }
  function AsymKeysType$Companion$_anonymous__bs1hln() {
    return createSimpleEnumSerializer('eu.fbk.st.cryptoac.crypto.AsymKeysType', values_2());
  }
  var AsymKeysType_ENC_instance;
  var AsymKeysType_SIG_instance;
  function Companion_7() {
    Companion_instance_7 = this;
    var tmp = this;
    var tmp_0 = LazyThreadSafetyMode_PUBLICATION_getInstance();
    tmp.a4x_1 = lazy(tmp_0, AsymKeysType$Companion$_anonymous__bs1hln);
  }
  protoOf(Companion_7).p37 = function () {
    return _get_$cachedSerializer__te6jhj_1(this);
  };
  protoOf(Companion_7).h2u = function (typeParamsSerializers) {
    return this.p37();
  };
  var Companion_instance_7;
  function Companion_getInstance_12() {
    AsymKeysType_initEntries();
    if (Companion_instance_7 == null)
      new Companion_7();
    return Companion_instance_7;
  }
  function values_2() {
    return [AsymKeysType_ENC_getInstance(), AsymKeysType_SIG_getInstance()];
  }
  var AsymKeysType_entriesInitialized;
  function AsymKeysType_initEntries() {
    if (AsymKeysType_entriesInitialized)
      return Unit_getInstance();
    AsymKeysType_entriesInitialized = true;
    AsymKeysType_ENC_instance = new AsymKeysType('ENC', 0);
    AsymKeysType_SIG_instance = new AsymKeysType('SIG', 1);
    Companion_getInstance_12();
  }
  function AsymKeysType(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function AsymKeysType_ENC_getInstance() {
    AsymKeysType_initEntries();
    return AsymKeysType_ENC_instance;
  }
  function AsymKeysType_SIG_getInstance() {
    AsymKeysType_initEntries();
    return AsymKeysType_SIG_instance;
  }
  function _get_$cachedSerializer__te6jhj_2($this) {
    return $this.g4w_1.q();
  }
  function CryptoType$Companion$_anonymous__gwtd10() {
    return createSimpleEnumSerializer('eu.fbk.st.cryptoac.crypto.CryptoType', values_3());
  }
  var CryptoType_JAVA_instance;
  var CryptoType_SODIUM_instance;
  var CryptoType_OPENABE_instance;
  function Companion_8() {
    Companion_instance_8 = this;
    var tmp = this;
    var tmp_0 = LazyThreadSafetyMode_PUBLICATION_getInstance();
    tmp.g4w_1 = lazy(tmp_0, CryptoType$Companion$_anonymous__gwtd10);
  }
  protoOf(Companion_8).p37 = function () {
    return _get_$cachedSerializer__te6jhj_2(this);
  };
  protoOf(Companion_8).h2u = function (typeParamsSerializers) {
    return this.p37();
  };
  var Companion_instance_8;
  function Companion_getInstance_13() {
    CryptoType_initEntries();
    if (Companion_instance_8 == null)
      new Companion_8();
    return Companion_instance_8;
  }
  function values_3() {
    return [CryptoType_JAVA_getInstance(), CryptoType_SODIUM_getInstance(), CryptoType_OPENABE_getInstance()];
  }
  function valueOf_1(value) {
    switch (value) {
      case 'JAVA':
        return CryptoType_JAVA_getInstance();
      case 'SODIUM':
        return CryptoType_SODIUM_getInstance();
      case 'OPENABE':
        return CryptoType_OPENABE_getInstance();
      default:
        CryptoType_initEntries();
        THROW_ISE();
        break;
    }
  }
  var CryptoType_entriesInitialized;
  function CryptoType_initEntries() {
    if (CryptoType_entriesInitialized)
      return Unit_getInstance();
    CryptoType_entriesInitialized = true;
    CryptoType_JAVA_instance = new CryptoType('JAVA', 0);
    CryptoType_SODIUM_instance = new CryptoType('SODIUM', 1);
    CryptoType_OPENABE_instance = new CryptoType('OPENABE', 2);
    Companion_getInstance_13();
  }
  function CryptoType(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function CryptoType_JAVA_getInstance() {
    CryptoType_initEntries();
    return CryptoType_JAVA_instance;
  }
  function CryptoType_SODIUM_getInstance() {
    CryptoType_initEntries();
    return CryptoType_SODIUM_instance;
  }
  function CryptoType_OPENABE_getInstance() {
    CryptoType_initEntries();
    return CryptoType_OPENABE_instance;
  }
  function $serializer_5() {
    $serializer_instance_5 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('eu.fbk.st.cryptoac.crypto.EncryptedSymKey', this, 1);
    tmp0_serialDesc.h2t('key', false);
    this.h4x_1 = tmp0_serialDesc;
  }
  protoOf($serializer_5).s2i = function () {
    return this.h4x_1;
  };
  protoOf($serializer_5).w2t = function () {
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [ByteArraySerializer_getInstance()];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  protoOf($serializer_5).u2i = function (decoder) {
    var tmp0_desc = this.h4x_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_input = decoder.e2m(tmp0_desc);
    if (tmp5_input.t2m()) {
      tmp4_local0 = tmp5_input.q2m(tmp0_desc, 0, ByteArraySerializer_getInstance(), tmp4_local0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp5_input.u2m(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp5_input.q2m(tmp0_desc, 0, ByteArraySerializer_getInstance(), tmp4_local0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp5_input.f2m(tmp0_desc);
    return EncryptedSymKey_init_$Create$(tmp3_bitMask0, tmp4_local0, null);
  };
  protoOf($serializer_5).i4x = function (encoder, value) {
    var tmp0_desc = this.h4x_1;
    var tmp1_output = encoder.e2m(tmp0_desc);
    tmp1_output.u2n(tmp0_desc, 0, ByteArraySerializer_getInstance(), value.j4x_1);
    tmp1_output.f2m(tmp0_desc);
  };
  protoOf($serializer_5).t2i = function (encoder, value) {
    return this.i4x(encoder, value instanceof EncryptedSymKey ? value : THROW_CCE());
  };
  var $serializer_instance_5;
  function $serializer_getInstance_5() {
    if ($serializer_instance_5 == null)
      new $serializer_5();
    return $serializer_instance_5;
  }
  function EncryptedSymKey_init_$Init$(seen1, key, serializationConstructorMarker, $this) {
    if (!(1 === (1 & seen1))) {
      throwMissingFieldException(seen1, 1, $serializer_getInstance_5().h4x_1);
    }
    $this.j4x_1 = key;
    // Inline function 'kotlin.require' call
    var tmp$ret$1;
    // Inline function 'kotlin.collections.isNotEmpty' call
    var tmp0_isNotEmpty = $this.j4x_1;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.isEmpty' call
    tmp$ret$0 = tmp0_isNotEmpty.length === 0;
    tmp$ret$1 = !tmp$ret$0;
    var tmp1_require = tmp$ret$1;
    // Inline function 'kotlin.contracts.contract' call
    if (!tmp1_require) {
      var tmp$ret$2;
      // Inline function 'eu.fbk.st.cryptoac.crypto.EncryptedSymKey.<init>.<anonymous>' call
      tmp$ret$2 = 'No encrypted symmetric key was given';
      var message = tmp$ret$2;
      throw IllegalArgumentException_init_$Create$(toString_0(message));
    }
    return $this;
  }
  function EncryptedSymKey_init_$Create$(seen1, key, serializationConstructorMarker) {
    return EncryptedSymKey_init_$Init$(seen1, key, serializationConstructorMarker, objectCreate(protoOf(EncryptedSymKey)));
  }
  function EncryptedSymKey() {
  }
  protoOf(EncryptedSymKey).equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (other instanceof EncryptedSymKey)
      other;
    else
      THROW_CCE();
    if (!contentEquals(this.j4x_1, other.j4x_1))
      return false;
    return true;
  };
  protoOf(EncryptedSymKey).hashCode = function () {
    return contentHashCode(this.j4x_1);
  };
  protoOf(EncryptedSymKey).toString = function () {
    return 'EncryptedSymKey(key=' + toString_0(this.j4x_1) + ')';
  };
  function DMServiceParameters() {
  }
  function DMServiceRemoteUPParameters() {
  }
  var DMType_CRYPTOAC_instance;
  var DMType_MQTT_instance;
  function values_4() {
    return [DMType_CRYPTOAC_getInstance(), DMType_MQTT_getInstance()];
  }
  function valueOf_2(value) {
    switch (value) {
      case 'CRYPTOAC':
        return DMType_CRYPTOAC_getInstance();
      case 'MQTT':
        return DMType_MQTT_getInstance();
      default:
        DMType_initEntries();
        THROW_ISE();
        break;
    }
  }
  var DMType_entriesInitialized;
  function DMType_initEntries() {
    if (DMType_entriesInitialized)
      return Unit_getInstance();
    DMType_entriesInitialized = true;
    DMType_CRYPTOAC_instance = new DMType('CRYPTOAC', 0);
    DMType_MQTT_instance = new DMType('MQTT', 1);
  }
  function DMType(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function DMType_CRYPTOAC_getInstance() {
    DMType_initEntries();
    return DMType_CRYPTOAC_instance;
  }
  function DMType_MQTT_getInstance() {
    DMType_initEntries();
    return DMType_MQTT_instance;
  }
  function Companion_9() {
    Companion_instance_9 = this;
    var tmp = this;
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [null, null, null, null, createSimpleEnumSerializer('eu.fbk.st.cryptoac.dm.DMType', values_4())];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp.l4x_1 = tmp$ret$2;
  }
  protoOf(Companion_9).a4v = function (parameters) {
    SERVER_getInstance();
    var tmp0_username = ensureNotNull(parameters.y1('Username'));
    SERVER_getInstance();
    var tmp1_port = toInt(ensureNotNull(parameters.y1('DM_Port')));
    SERVER_getInstance();
    var tmp2_url = ensureNotNull(parameters.y1('DM_URL'));
    SERVER_getInstance();
    var tmp3_password = ensureNotNull(parameters.y1('DM_Password'));
    return new DMServiceCryptoACParameters(tmp0_username, tmp3_password, tmp1_port, tmp2_url);
  };
  protoOf(Companion_9).m4x = function (parameters) {
    SERVER_getInstance();
    var tmp1_name = 'DM_URL';
    SERVER_getInstance();
    var tmp2_label = replace('DM_URL', '_', ' ');
    var tmp3_type = InputType_text_getInstance();
    var tmp0_safe_receiver = parameters;
    var tmp4_defaultValue = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.q4x_1;
    var tmp = new CryptoACFormField(tmp1_name, tmp2_label, tmp3_type, VOID, tmp4_defaultValue, 'darkTextField');
    SERVER_getInstance();
    var tmp6_name = 'DM_Password';
    SERVER_getInstance();
    var tmp7_label = replace('DM_Password', '_', ' ');
    var tmp8_type = InputType_password_getInstance();
    var tmp5_safe_receiver = parameters;
    var tmp9_defaultValue = tmp5_safe_receiver == null ? null : tmp5_safe_receiver.o4x_1;
    var tmp_0 = new CryptoACFormField(tmp6_name, tmp7_label, tmp8_type, VOID, tmp9_defaultValue, 'darkTextField');
    SERVER_getInstance();
    var tmp11_name = 'DM_Port';
    SERVER_getInstance();
    var tmp12_label = replace('DM_Port', '_', ' ');
    var tmp13_type = InputType_number_getInstance();
    var tmp10_safe_receiver = parameters;
    var tmp14_defaultValue = toString(tmp10_safe_receiver == null ? null : tmp10_safe_receiver.p4x_1);
    return listOf_0(listOf([tmp, tmp_0, new CryptoACFormField(tmp11_name, tmp12_label, tmp13_type, VOID, tmp14_defaultValue, 'darkTextField')]));
  };
  var Companion_instance_9;
  function Companion_getInstance_14() {
    if (Companion_instance_9 == null)
      new Companion_9();
    return Companion_instance_9;
  }
  function $serializer_6() {
    $serializer_instance_6 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('eu.fbk.st.cryptoac.dm.cryptoac.DMServiceCryptoACParameters', this, 5);
    tmp0_serialDesc.h2t('username', false);
    tmp0_serialDesc.h2t('password', false);
    tmp0_serialDesc.h2t('port', false);
    tmp0_serialDesc.h2t('url', false);
    tmp0_serialDesc.h2t('dmType', true);
    this.s4x_1 = tmp0_serialDesc;
  }
  protoOf($serializer_6).s2i = function () {
    return this.s4x_1;
  };
  protoOf($serializer_6).w2t = function () {
    var tmp0_cached = Companion_getInstance_14().l4x_1;
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [StringSerializer_getInstance(), StringSerializer_getInstance(), IntSerializer_getInstance(), StringSerializer_getInstance(), tmp0_cached[4]];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  protoOf($serializer_6).u2i = function (decoder) {
    var tmp0_desc = this.s4x_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = null;
    var tmp6_local2 = 0;
    var tmp7_local3 = null;
    var tmp8_local4 = null;
    var tmp9_input = decoder.e2m(tmp0_desc);
    var tmp10_cached = Companion_getInstance_14().l4x_1;
    if (tmp9_input.t2m()) {
      tmp4_local0 = tmp9_input.o2m(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp9_input.o2m(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp9_input.j2m(tmp0_desc, 2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp9_input.o2m(tmp0_desc, 3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
      tmp8_local4 = tmp9_input.q2m(tmp0_desc, 4, tmp10_cached[4], tmp8_local4);
      tmp3_bitMask0 = tmp3_bitMask0 | 16;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp9_input.u2m(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp9_input.o2m(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp9_input.o2m(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp9_input.j2m(tmp0_desc, 2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp9_input.o2m(tmp0_desc, 3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          case 4:
            tmp8_local4 = tmp9_input.q2m(tmp0_desc, 4, tmp10_cached[4], tmp8_local4);
            tmp3_bitMask0 = tmp3_bitMask0 | 16;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp9_input.f2m(tmp0_desc);
    return DMServiceCryptoACParameters_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
  };
  protoOf($serializer_6).t4x = function (encoder, value) {
    var tmp0_desc = this.s4x_1;
    var tmp1_output = encoder.e2m(tmp0_desc);
    var tmp2_cached = Companion_getInstance_14().l4x_1;
    tmp1_output.s2n(tmp0_desc, 0, value.n4x_1);
    tmp1_output.s2n(tmp0_desc, 1, value.o4x_1);
    tmp1_output.n2n(tmp0_desc, 2, value.p4x_1);
    tmp1_output.s2n(tmp0_desc, 3, value.q4x_1);
    if (tmp1_output.a2o(tmp0_desc, 4) ? true : !value.r4x_1.equals(DMType_CRYPTOAC_getInstance())) {
      tmp1_output.u2n(tmp0_desc, 4, tmp2_cached[4], value.r4x_1);
    }
    tmp1_output.f2m(tmp0_desc);
  };
  protoOf($serializer_6).t2i = function (encoder, value) {
    return this.t4x(encoder, value instanceof DMServiceCryptoACParameters ? value : THROW_CCE());
  };
  var $serializer_instance_6;
  function $serializer_getInstance_6() {
    if ($serializer_instance_6 == null)
      new $serializer_6();
    return $serializer_instance_6;
  }
  function DMServiceCryptoACParameters_init_$Init$(seen1, username, password, port, url, dmType, serializationConstructorMarker, $this) {
    if (!(15 === (15 & seen1))) {
      throwMissingFieldException(seen1, 15, $serializer_getInstance_6().s4x_1);
    }
    $this.n4x_1 = username;
    $this.o4x_1 = password;
    $this.p4x_1 = port;
    $this.q4x_1 = url;
    if (0 === (seen1 & 16))
      $this.r4x_1 = DMType_CRYPTOAC_getInstance();
    else
      $this.r4x_1 = dmType;
    return $this;
  }
  function DMServiceCryptoACParameters_init_$Create$(seen1, username, password, port, url, dmType, serializationConstructorMarker) {
    return DMServiceCryptoACParameters_init_$Init$(seen1, username, password, port, url, dmType, serializationConstructorMarker, objectCreate(protoOf(DMServiceCryptoACParameters)));
  }
  function DMServiceCryptoACParameters(username, password, port, url) {
    Companion_getInstance_14();
    this.n4x_1 = username;
    this.o4x_1 = password;
    this.p4x_1 = port;
    this.q4x_1 = url;
    this.r4x_1 = DMType_CRYPTOAC_getInstance();
  }
  protoOf(DMServiceCryptoACParameters).k4x = function () {
    return this.r4x_1;
  };
  protoOf(DMServiceCryptoACParameters).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof DMServiceCryptoACParameters))
      return false;
    if (!(this.n4x_1 === other.n4x_1))
      return false;
    if (!(this.o4x_1 === other.o4x_1))
      return false;
    if (!(this.p4x_1 === other.p4x_1))
      return false;
    if (!(this.q4x_1 === other.q4x_1))
      return false;
    if (!this.r4x_1.equals(other.r4x_1))
      return false;
    return true;
  };
  protoOf(DMServiceCryptoACParameters).hashCode = function () {
    var result = getStringHashCode(this.n4x_1);
    result = imul(31, result) + getStringHashCode(this.o4x_1) | 0;
    result = imul(31, result) + this.p4x_1 | 0;
    result = imul(31, result) + getStringHashCode(this.q4x_1) | 0;
    result = imul(31, result) + this.r4x_1.hashCode() | 0;
    return result;
  };
  function Companion_10() {
    Companion_instance_10 = this;
    var tmp = this;
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [null, null, null, null, null, createSimpleEnumSerializer('eu.fbk.st.cryptoac.dm.DMType', values_4())];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp.u4x_1 = tmp$ret$2;
  }
  protoOf(Companion_10).a4v = function (parameters) {
    SERVER_getInstance();
    var tmp0_username = ensureNotNull(parameters.y1('Username'));
    SERVER_getInstance();
    var tmp1_port = toInt(ensureNotNull(parameters.y1('DM_Port')));
    SERVER_getInstance();
    var tmp2_url = ensureNotNull(parameters.y1('DM_URL'));
    SERVER_getInstance();
    var tmp3_password = ensureNotNull(parameters.y1('DM_Password'));
    SERVER_getInstance();
    var tmp4_tls = toBooleanStrict(ensureNotNull(parameters.y1('DM_TLS')));
    return new DMServiceMQTTParameters(tmp0_username, tmp3_password, tmp1_port, tmp2_url, tmp4_tls);
  };
  protoOf(Companion_10).v4x = function (parameters) {
    SERVER_getInstance();
    var tmp1_name = 'DM_URL';
    SERVER_getInstance();
    var tmp2_label = replace('DM_URL', '_', ' ');
    var tmp3_type = InputType_text_getInstance();
    var tmp0_safe_receiver = parameters;
    var tmp4_defaultValue = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.z4x_1;
    var tmp = new CryptoACFormField(tmp1_name, tmp2_label, tmp3_type, VOID, tmp4_defaultValue, 'darkTextField');
    SERVER_getInstance();
    var tmp6_name = 'DM_Password';
    SERVER_getInstance();
    var tmp7_label = replace('DM_Password', '_', ' ');
    var tmp8_type = InputType_password_getInstance();
    var tmp5_safe_receiver = parameters;
    var tmp9_defaultValue = tmp5_safe_receiver == null ? null : tmp5_safe_receiver.x4x_1;
    var tmp_0 = new CryptoACFormField(tmp6_name, tmp7_label, tmp8_type, VOID, tmp9_defaultValue, 'darkTextField');
    SERVER_getInstance();
    var tmp11_name = 'DM_Port';
    SERVER_getInstance();
    var tmp12_label = replace('DM_Port', '_', ' ');
    var tmp13_type = InputType_number_getInstance();
    var tmp10_safe_receiver = parameters;
    var tmp14_defaultValue = toString(tmp10_safe_receiver == null ? null : tmp10_safe_receiver.y4x_1);
    var tmp_1 = new CryptoACFormField(tmp11_name, tmp12_label, tmp13_type, VOID, tmp14_defaultValue, 'darkTextField');
    SERVER_getInstance();
    var tmp16_name = 'DM_TLS';
    SERVER_getInstance();
    var tmp17_label = 'DM_TLS';
    var tmp18_type = InputType_checkBox_getInstance();
    var tmp15_safe_receiver = parameters;
    var tmp19_defaultValue = toString(tmp15_safe_receiver == null ? null : tmp15_safe_receiver.a4y_1);
    return listOf_0(listOf([tmp, tmp_0, tmp_1, new CryptoACFormField(tmp16_name, tmp17_label, tmp18_type, VOID, tmp19_defaultValue, 'darkTextField')]));
  };
  var Companion_instance_10;
  function Companion_getInstance_15() {
    if (Companion_instance_10 == null)
      new Companion_10();
    return Companion_instance_10;
  }
  function $serializer_7() {
    $serializer_instance_7 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('eu.fbk.st.cryptoac.dm.mqtt.DMServiceMQTTParameters', this, 6);
    tmp0_serialDesc.h2t('username', false);
    tmp0_serialDesc.h2t('password', false);
    tmp0_serialDesc.h2t('port', false);
    tmp0_serialDesc.h2t('url', false);
    tmp0_serialDesc.h2t('tls', false);
    tmp0_serialDesc.h2t('dmType', true);
    this.c4y_1 = tmp0_serialDesc;
  }
  protoOf($serializer_7).s2i = function () {
    return this.c4y_1;
  };
  protoOf($serializer_7).w2t = function () {
    var tmp0_cached = Companion_getInstance_15().u4x_1;
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [StringSerializer_getInstance(), StringSerializer_getInstance(), IntSerializer_getInstance(), StringSerializer_getInstance(), BooleanSerializer_getInstance(), tmp0_cached[5]];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  protoOf($serializer_7).u2i = function (decoder) {
    var tmp0_desc = this.c4y_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = null;
    var tmp6_local2 = 0;
    var tmp7_local3 = null;
    var tmp8_local4 = false;
    var tmp9_local5 = null;
    var tmp10_input = decoder.e2m(tmp0_desc);
    var tmp11_cached = Companion_getInstance_15().u4x_1;
    if (tmp10_input.t2m()) {
      tmp4_local0 = tmp10_input.o2m(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp10_input.o2m(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp10_input.j2m(tmp0_desc, 2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp10_input.o2m(tmp0_desc, 3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
      tmp8_local4 = tmp10_input.g2m(tmp0_desc, 4);
      tmp3_bitMask0 = tmp3_bitMask0 | 16;
      tmp9_local5 = tmp10_input.q2m(tmp0_desc, 5, tmp11_cached[5], tmp9_local5);
      tmp3_bitMask0 = tmp3_bitMask0 | 32;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp10_input.u2m(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp10_input.o2m(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp10_input.o2m(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp10_input.j2m(tmp0_desc, 2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp10_input.o2m(tmp0_desc, 3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          case 4:
            tmp8_local4 = tmp10_input.g2m(tmp0_desc, 4);
            tmp3_bitMask0 = tmp3_bitMask0 | 16;
            break;
          case 5:
            tmp9_local5 = tmp10_input.q2m(tmp0_desc, 5, tmp11_cached[5], tmp9_local5);
            tmp3_bitMask0 = tmp3_bitMask0 | 32;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp10_input.f2m(tmp0_desc);
    return DMServiceMQTTParameters_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, null);
  };
  protoOf($serializer_7).d4y = function (encoder, value) {
    var tmp0_desc = this.c4y_1;
    var tmp1_output = encoder.e2m(tmp0_desc);
    var tmp2_cached = Companion_getInstance_15().u4x_1;
    tmp1_output.s2n(tmp0_desc, 0, value.w4x_1);
    tmp1_output.s2n(tmp0_desc, 1, value.x4x_1);
    tmp1_output.n2n(tmp0_desc, 2, value.y4x_1);
    tmp1_output.s2n(tmp0_desc, 3, value.z4x_1);
    tmp1_output.k2n(tmp0_desc, 4, value.a4y_1);
    if (tmp1_output.a2o(tmp0_desc, 5) ? true : !value.b4y_1.equals(DMType_MQTT_getInstance())) {
      tmp1_output.u2n(tmp0_desc, 5, tmp2_cached[5], value.b4y_1);
    }
    tmp1_output.f2m(tmp0_desc);
  };
  protoOf($serializer_7).t2i = function (encoder, value) {
    return this.d4y(encoder, value instanceof DMServiceMQTTParameters ? value : THROW_CCE());
  };
  var $serializer_instance_7;
  function $serializer_getInstance_7() {
    if ($serializer_instance_7 == null)
      new $serializer_7();
    return $serializer_instance_7;
  }
  function DMServiceMQTTParameters_init_$Init$(seen1, username, password, port, url, tls, dmType, serializationConstructorMarker, $this) {
    if (!(31 === (31 & seen1))) {
      throwMissingFieldException(seen1, 31, $serializer_getInstance_7().c4y_1);
    }
    $this.w4x_1 = username;
    $this.x4x_1 = password;
    $this.y4x_1 = port;
    $this.z4x_1 = url;
    $this.a4y_1 = tls;
    if (0 === (seen1 & 32))
      $this.b4y_1 = DMType_MQTT_getInstance();
    else
      $this.b4y_1 = dmType;
    return $this;
  }
  function DMServiceMQTTParameters_init_$Create$(seen1, username, password, port, url, tls, dmType, serializationConstructorMarker) {
    return DMServiceMQTTParameters_init_$Init$(seen1, username, password, port, url, tls, dmType, serializationConstructorMarker, objectCreate(protoOf(DMServiceMQTTParameters)));
  }
  function DMServiceMQTTParameters(username, password, port, url, tls) {
    Companion_getInstance_15();
    this.w4x_1 = username;
    this.x4x_1 = password;
    this.y4x_1 = port;
    this.z4x_1 = url;
    this.a4y_1 = tls;
    this.b4y_1 = DMType_MQTT_getInstance();
  }
  protoOf(DMServiceMQTTParameters).k4x = function () {
    return this.b4y_1;
  };
  protoOf(DMServiceMQTTParameters).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof DMServiceMQTTParameters))
      return false;
    if (!(this.w4x_1 === other.w4x_1))
      return false;
    if (!(this.x4x_1 === other.x4x_1))
      return false;
    if (!(this.y4x_1 === other.y4x_1))
      return false;
    if (!(this.z4x_1 === other.z4x_1))
      return false;
    if (!(this.a4y_1 === other.a4y_1))
      return false;
    if (!this.b4y_1.equals(other.b4y_1))
      return false;
    return true;
  };
  protoOf(DMServiceMQTTParameters).hashCode = function () {
    var result = getStringHashCode(this.w4x_1);
    result = imul(31, result) + getStringHashCode(this.x4x_1) | 0;
    result = imul(31, result) + this.y4x_1 | 0;
    result = imul(31, result) + getStringHashCode(this.z4x_1) | 0;
    result = imul(31, result) + (this.a4y_1 | 0) | 0;
    result = imul(31, result) + this.b4y_1.hashCode() | 0;
    return result;
  };
  function MMServiceParameters() {
  }
  function MMServiceRemoteUPParameters() {
  }
  var MMType_RBAC_MYSQL_instance;
  var MMType_ABAC_MYSQL_instance;
  var MMType_RBAC_REDIS_instance;
  function values_5() {
    return [MMType_RBAC_MYSQL_getInstance(), MMType_ABAC_MYSQL_getInstance(), MMType_RBAC_REDIS_getInstance()];
  }
  function valueOf_3(value) {
    switch (value) {
      case 'RBAC_MYSQL':
        return MMType_RBAC_MYSQL_getInstance();
      case 'ABAC_MYSQL':
        return MMType_ABAC_MYSQL_getInstance();
      case 'RBAC_REDIS':
        return MMType_RBAC_REDIS_getInstance();
      default:
        MMType_initEntries();
        THROW_ISE();
        break;
    }
  }
  var MMType_entriesInitialized;
  function MMType_initEntries() {
    if (MMType_entriesInitialized)
      return Unit_getInstance();
    MMType_entriesInitialized = true;
    MMType_RBAC_MYSQL_instance = new MMType('RBAC_MYSQL', 0);
    MMType_ABAC_MYSQL_instance = new MMType('ABAC_MYSQL', 1);
    MMType_RBAC_REDIS_instance = new MMType('RBAC_REDIS', 2);
  }
  function MMType(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function MMType_RBAC_MYSQL_getInstance() {
    MMType_initEntries();
    return MMType_RBAC_MYSQL_instance;
  }
  function MMType_ABAC_MYSQL_getInstance() {
    MMType_initEntries();
    return MMType_ABAC_MYSQL_instance;
  }
  function MMType_RBAC_REDIS_getInstance() {
    MMType_initEntries();
    return MMType_RBAC_REDIS_instance;
  }
  function Companion_11() {
    Companion_instance_11 = this;
    var tmp = this;
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [null, null, null, null, createSimpleEnumSerializer('eu.fbk.st.cryptoac.mm.MMType', values_5())];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp.f4y_1 = tmp$ret$2;
  }
  var Companion_instance_11;
  function Companion_getInstance_16() {
    if (Companion_instance_11 == null)
      new Companion_11();
    return Companion_instance_11;
  }
  function $serializer_8() {
    $serializer_instance_8 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('eu.fbk.st.cryptoac.mm.mysql.MMServiceABACMySQLParameters', this, 5);
    tmp0_serialDesc.h2t('username', false);
    tmp0_serialDesc.h2t('password', false);
    tmp0_serialDesc.h2t('port', false);
    tmp0_serialDesc.h2t('url', false);
    tmp0_serialDesc.h2t('mmType', true);
    this.g4y_1 = tmp0_serialDesc;
  }
  protoOf($serializer_8).s2i = function () {
    return this.g4y_1;
  };
  protoOf($serializer_8).w2t = function () {
    var tmp0_cached = Companion_getInstance_16().f4y_1;
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [StringSerializer_getInstance(), StringSerializer_getInstance(), IntSerializer_getInstance(), StringSerializer_getInstance(), tmp0_cached[4]];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  protoOf($serializer_8).u2i = function (decoder) {
    var tmp0_desc = this.g4y_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = null;
    var tmp6_local2 = 0;
    var tmp7_local3 = null;
    var tmp8_local4 = null;
    var tmp9_input = decoder.e2m(tmp0_desc);
    var tmp10_cached = Companion_getInstance_16().f4y_1;
    if (tmp9_input.t2m()) {
      tmp4_local0 = tmp9_input.o2m(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp9_input.o2m(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp9_input.j2m(tmp0_desc, 2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp9_input.o2m(tmp0_desc, 3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
      tmp8_local4 = tmp9_input.q2m(tmp0_desc, 4, tmp10_cached[4], tmp8_local4);
      tmp3_bitMask0 = tmp3_bitMask0 | 16;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp9_input.u2m(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp9_input.o2m(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp9_input.o2m(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp9_input.j2m(tmp0_desc, 2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp9_input.o2m(tmp0_desc, 3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          case 4:
            tmp8_local4 = tmp9_input.q2m(tmp0_desc, 4, tmp10_cached[4], tmp8_local4);
            tmp3_bitMask0 = tmp3_bitMask0 | 16;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp9_input.f2m(tmp0_desc);
    return MMServiceABACMySQLParameters_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
  };
  protoOf($serializer_8).h4y = function (encoder, value) {
    var tmp0_desc = this.g4y_1;
    var tmp1_output = encoder.e2m(tmp0_desc);
    var tmp2_cached = Companion_getInstance_16().f4y_1;
    tmp1_output.s2n(tmp0_desc, 0, value.i4y_1);
    tmp1_output.s2n(tmp0_desc, 1, value.j4y_1);
    tmp1_output.n2n(tmp0_desc, 2, value.k4y_1);
    tmp1_output.s2n(tmp0_desc, 3, value.l4y_1);
    if (tmp1_output.a2o(tmp0_desc, 4) ? true : !value.m4y_1.equals(MMType_ABAC_MYSQL_getInstance())) {
      tmp1_output.u2n(tmp0_desc, 4, tmp2_cached[4], value.m4y_1);
    }
    tmp1_output.f2m(tmp0_desc);
  };
  protoOf($serializer_8).t2i = function (encoder, value) {
    return this.h4y(encoder, value instanceof MMServiceABACMySQLParameters ? value : THROW_CCE());
  };
  var $serializer_instance_8;
  function $serializer_getInstance_8() {
    if ($serializer_instance_8 == null)
      new $serializer_8();
    return $serializer_instance_8;
  }
  function MMServiceABACMySQLParameters_init_$Init$(seen1, username, password, port, url, mmType, serializationConstructorMarker, $this) {
    if (!(15 === (15 & seen1))) {
      throwMissingFieldException(seen1, 15, $serializer_getInstance_8().g4y_1);
    }
    $this.i4y_1 = username;
    $this.j4y_1 = password;
    $this.k4y_1 = port;
    $this.l4y_1 = url;
    if (0 === (seen1 & 16))
      $this.m4y_1 = MMType_ABAC_MYSQL_getInstance();
    else
      $this.m4y_1 = mmType;
    return $this;
  }
  function MMServiceABACMySQLParameters_init_$Create$(seen1, username, password, port, url, mmType, serializationConstructorMarker) {
    return MMServiceABACMySQLParameters_init_$Init$(seen1, username, password, port, url, mmType, serializationConstructorMarker, objectCreate(protoOf(MMServiceABACMySQLParameters)));
  }
  function MMServiceABACMySQLParameters(username, password, port, url) {
    Companion_getInstance_16();
    this.i4y_1 = username;
    this.j4y_1 = password;
    this.k4y_1 = port;
    this.l4y_1 = url;
    this.m4y_1 = MMType_ABAC_MYSQL_getInstance();
  }
  protoOf(MMServiceABACMySQLParameters).e4y = function () {
    return this.m4y_1;
  };
  protoOf(MMServiceABACMySQLParameters).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MMServiceABACMySQLParameters))
      return false;
    if (!(this.i4y_1 === other.i4y_1))
      return false;
    if (!(this.j4y_1 === other.j4y_1))
      return false;
    if (!(this.k4y_1 === other.k4y_1))
      return false;
    if (!(this.l4y_1 === other.l4y_1))
      return false;
    if (!this.m4y_1.equals(other.m4y_1))
      return false;
    return true;
  };
  protoOf(MMServiceABACMySQLParameters).hashCode = function () {
    var result = getStringHashCode(this.i4y_1);
    result = imul(31, result) + getStringHashCode(this.j4y_1) | 0;
    result = imul(31, result) + this.k4y_1 | 0;
    result = imul(31, result) + getStringHashCode(this.l4y_1) | 0;
    result = imul(31, result) + this.m4y_1.hashCode() | 0;
    return result;
  };
  function Companion_12() {
    Companion_instance_12 = this;
    var tmp = this;
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [null, null, null, null, createSimpleEnumSerializer('eu.fbk.st.cryptoac.mm.MMType', values_5())];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp.n4y_1 = tmp$ret$2;
  }
  protoOf(Companion_12).a4v = function (parameters) {
    SERVER_getInstance();
    var tmp0_username = ensureNotNull(parameters.y1('Username'));
    SERVER_getInstance();
    var tmp1_port = toInt(ensureNotNull(parameters.y1('MM_Port')));
    SERVER_getInstance();
    var tmp2_url = ensureNotNull(parameters.y1('MM_URL'));
    SERVER_getInstance();
    var tmp3_password = ensureNotNull(parameters.y1('MM_Password'));
    return new MMServiceRBACMySQLParameters(tmp0_username, tmp3_password, tmp1_port, tmp2_url);
  };
  protoOf(Companion_12).o4y = function (parameters) {
    SERVER_getInstance();
    var tmp1_name = 'MM_URL';
    SERVER_getInstance();
    var tmp2_label = replace('MM_URL', '_', ' ');
    var tmp3_type = InputType_text_getInstance();
    var tmp0_safe_receiver = parameters;
    var tmp4_defaultValue = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.s4y_1;
    var tmp = new CryptoACFormField(tmp1_name, tmp2_label, tmp3_type, VOID, tmp4_defaultValue, 'darkTextField');
    SERVER_getInstance();
    var tmp6_name = 'MM_Password';
    SERVER_getInstance();
    var tmp7_label = replace('MM_Password', '_', ' ');
    var tmp8_type = InputType_password_getInstance();
    var tmp5_safe_receiver = parameters;
    var tmp9_defaultValue = tmp5_safe_receiver == null ? null : tmp5_safe_receiver.q4y_1;
    var tmp_0 = new CryptoACFormField(tmp6_name, tmp7_label, tmp8_type, VOID, tmp9_defaultValue, 'darkTextField');
    SERVER_getInstance();
    var tmp11_name = 'MM_Port';
    SERVER_getInstance();
    var tmp12_label = replace('MM_Port', '_', ' ');
    var tmp13_type = InputType_number_getInstance();
    var tmp10_safe_receiver = parameters;
    var tmp14_defaultValue = toString(tmp10_safe_receiver == null ? null : tmp10_safe_receiver.r4y_1);
    return listOf_0(listOf([tmp, tmp_0, new CryptoACFormField(tmp11_name, tmp12_label, tmp13_type, VOID, tmp14_defaultValue, 'darkTextField')]));
  };
  var Companion_instance_12;
  function Companion_getInstance_17() {
    if (Companion_instance_12 == null)
      new Companion_12();
    return Companion_instance_12;
  }
  function $serializer_9() {
    $serializer_instance_9 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('eu.fbk.st.cryptoac.mm.mysql.MMServiceRBACMySQLParameters', this, 5);
    tmp0_serialDesc.h2t('username', false);
    tmp0_serialDesc.h2t('password', false);
    tmp0_serialDesc.h2t('port', false);
    tmp0_serialDesc.h2t('url', false);
    tmp0_serialDesc.h2t('mmType', true);
    this.u4y_1 = tmp0_serialDesc;
  }
  protoOf($serializer_9).s2i = function () {
    return this.u4y_1;
  };
  protoOf($serializer_9).w2t = function () {
    var tmp0_cached = Companion_getInstance_17().n4y_1;
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [StringSerializer_getInstance(), StringSerializer_getInstance(), IntSerializer_getInstance(), StringSerializer_getInstance(), tmp0_cached[4]];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  protoOf($serializer_9).u2i = function (decoder) {
    var tmp0_desc = this.u4y_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = null;
    var tmp6_local2 = 0;
    var tmp7_local3 = null;
    var tmp8_local4 = null;
    var tmp9_input = decoder.e2m(tmp0_desc);
    var tmp10_cached = Companion_getInstance_17().n4y_1;
    if (tmp9_input.t2m()) {
      tmp4_local0 = tmp9_input.o2m(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp9_input.o2m(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp9_input.j2m(tmp0_desc, 2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp9_input.o2m(tmp0_desc, 3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
      tmp8_local4 = tmp9_input.q2m(tmp0_desc, 4, tmp10_cached[4], tmp8_local4);
      tmp3_bitMask0 = tmp3_bitMask0 | 16;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp9_input.u2m(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp9_input.o2m(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp9_input.o2m(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp9_input.j2m(tmp0_desc, 2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp9_input.o2m(tmp0_desc, 3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          case 4:
            tmp8_local4 = tmp9_input.q2m(tmp0_desc, 4, tmp10_cached[4], tmp8_local4);
            tmp3_bitMask0 = tmp3_bitMask0 | 16;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp9_input.f2m(tmp0_desc);
    return MMServiceRBACMySQLParameters_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
  };
  protoOf($serializer_9).v4y = function (encoder, value) {
    var tmp0_desc = this.u4y_1;
    var tmp1_output = encoder.e2m(tmp0_desc);
    var tmp2_cached = Companion_getInstance_17().n4y_1;
    tmp1_output.s2n(tmp0_desc, 0, value.p4y_1);
    tmp1_output.s2n(tmp0_desc, 1, value.q4y_1);
    tmp1_output.n2n(tmp0_desc, 2, value.r4y_1);
    tmp1_output.s2n(tmp0_desc, 3, value.s4y_1);
    if (tmp1_output.a2o(tmp0_desc, 4) ? true : !value.t4y_1.equals(MMType_RBAC_MYSQL_getInstance())) {
      tmp1_output.u2n(tmp0_desc, 4, tmp2_cached[4], value.t4y_1);
    }
    tmp1_output.f2m(tmp0_desc);
  };
  protoOf($serializer_9).t2i = function (encoder, value) {
    return this.v4y(encoder, value instanceof MMServiceRBACMySQLParameters ? value : THROW_CCE());
  };
  var $serializer_instance_9;
  function $serializer_getInstance_9() {
    if ($serializer_instance_9 == null)
      new $serializer_9();
    return $serializer_instance_9;
  }
  function MMServiceRBACMySQLParameters_init_$Init$(seen1, username, password, port, url, mmType, serializationConstructorMarker, $this) {
    if (!(15 === (15 & seen1))) {
      throwMissingFieldException(seen1, 15, $serializer_getInstance_9().u4y_1);
    }
    $this.p4y_1 = username;
    $this.q4y_1 = password;
    $this.r4y_1 = port;
    $this.s4y_1 = url;
    if (0 === (seen1 & 16))
      $this.t4y_1 = MMType_RBAC_MYSQL_getInstance();
    else
      $this.t4y_1 = mmType;
    return $this;
  }
  function MMServiceRBACMySQLParameters_init_$Create$(seen1, username, password, port, url, mmType, serializationConstructorMarker) {
    return MMServiceRBACMySQLParameters_init_$Init$(seen1, username, password, port, url, mmType, serializationConstructorMarker, objectCreate(protoOf(MMServiceRBACMySQLParameters)));
  }
  function MMServiceRBACMySQLParameters(username, password, port, url) {
    Companion_getInstance_17();
    this.p4y_1 = username;
    this.q4y_1 = password;
    this.r4y_1 = port;
    this.s4y_1 = url;
    this.t4y_1 = MMType_RBAC_MYSQL_getInstance();
  }
  protoOf(MMServiceRBACMySQLParameters).e4y = function () {
    return this.t4y_1;
  };
  protoOf(MMServiceRBACMySQLParameters).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MMServiceRBACMySQLParameters))
      return false;
    if (!(this.p4y_1 === other.p4y_1))
      return false;
    if (!(this.q4y_1 === other.q4y_1))
      return false;
    if (!(this.r4y_1 === other.r4y_1))
      return false;
    if (!(this.s4y_1 === other.s4y_1))
      return false;
    if (!this.t4y_1.equals(other.t4y_1))
      return false;
    return true;
  };
  protoOf(MMServiceRBACMySQLParameters).hashCode = function () {
    var result = getStringHashCode(this.p4y_1);
    result = imul(31, result) + getStringHashCode(this.q4y_1) | 0;
    result = imul(31, result) + this.r4y_1 | 0;
    result = imul(31, result) + getStringHashCode(this.s4y_1) | 0;
    result = imul(31, result) + this.t4y_1.hashCode() | 0;
    return result;
  };
  function Companion_13() {
    Companion_instance_13 = this;
    var tmp = this;
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [null, null, null, null, createSimpleEnumSerializer('eu.fbk.st.cryptoac.mm.MMType', values_5()), null];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp.w4y_1 = tmp$ret$2;
  }
  protoOf(Companion_13).x4y = function (parameters, mmType) {
    SERVER_getInstance();
    var tmp0_username = ensureNotNull(parameters.y1('Username'));
    SERVER_getInstance();
    var tmp1_port = toInt(ensureNotNull(parameters.y1('MM_Port')));
    SERVER_getInstance();
    var tmp2_url = ensureNotNull(parameters.y1('MM_URL'));
    SERVER_getInstance();
    var tmp3_password = ensureNotNull(parameters.y1('MM_Password'));
    SERVER_getInstance();
    var tmp4_token = ensureNotNull(parameters.y1('MM_Token'));
    return new MMServiceRedisParameters(tmp0_username, tmp3_password, tmp1_port, tmp2_url, mmType, tmp4_token);
  };
  protoOf(Companion_13).y4y = function (parameters) {
    SERVER_getInstance();
    var tmp1_name = 'MM_URL';
    SERVER_getInstance();
    var tmp2_label = replace('MM_URL', '_', ' ');
    var tmp3_type = InputType_text_getInstance();
    var tmp0_safe_receiver = parameters;
    var tmp4_defaultValue = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.c4z_1;
    var tmp = new CryptoACFormField(tmp1_name, tmp2_label, tmp3_type, VOID, tmp4_defaultValue, 'darkTextField');
    SERVER_getInstance();
    var tmp6_name = 'MM_Token';
    SERVER_getInstance();
    var tmp7_label = replace('MM_Token', '_', ' ');
    var tmp8_type = InputType_text_getInstance();
    var tmp5_safe_receiver = parameters;
    var tmp9_defaultValue = tmp5_safe_receiver == null ? null : tmp5_safe_receiver.e4z_1;
    var tmp_0 = new CryptoACFormField(tmp6_name, tmp7_label, tmp8_type, VOID, tmp9_defaultValue, 'darkTextField', true);
    SERVER_getInstance();
    var tmp11_name = 'MM_Password';
    SERVER_getInstance();
    var tmp12_label = replace('MM_Password', '_', ' ');
    var tmp13_type = InputType_password_getInstance();
    var tmp10_safe_receiver = parameters;
    var tmp14_defaultValue = tmp10_safe_receiver == null ? null : tmp10_safe_receiver.a4z_1;
    var tmp_1 = new CryptoACFormField(tmp11_name, tmp12_label, tmp13_type, VOID, tmp14_defaultValue, 'darkTextField');
    SERVER_getInstance();
    var tmp16_name = 'MM_Port';
    SERVER_getInstance();
    var tmp17_label = replace('MM_Port', '_', ' ');
    var tmp18_type = InputType_number_getInstance();
    var tmp15_safe_receiver = parameters;
    var tmp19_defaultValue = toString(tmp15_safe_receiver == null ? null : tmp15_safe_receiver.b4z_1);
    return listOf_0(listOf([tmp, tmp_0, tmp_1, new CryptoACFormField(tmp16_name, tmp17_label, tmp18_type, VOID, tmp19_defaultValue, 'darkTextField')]));
  };
  var Companion_instance_13;
  function Companion_getInstance_18() {
    if (Companion_instance_13 == null)
      new Companion_13();
    return Companion_instance_13;
  }
  function $serializer_10() {
    $serializer_instance_10 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('eu.fbk.st.cryptoac.mm.redis.MMServiceRedisParameters', this, 6);
    tmp0_serialDesc.h2t('username', false);
    tmp0_serialDesc.h2t('password', false);
    tmp0_serialDesc.h2t('port', false);
    tmp0_serialDesc.h2t('url', false);
    tmp0_serialDesc.h2t('mmType', false);
    tmp0_serialDesc.h2t('token', false);
    this.f4z_1 = tmp0_serialDesc;
  }
  protoOf($serializer_10).s2i = function () {
    return this.f4z_1;
  };
  protoOf($serializer_10).w2t = function () {
    var tmp0_cached = Companion_getInstance_18().w4y_1;
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [StringSerializer_getInstance(), StringSerializer_getInstance(), IntSerializer_getInstance(), StringSerializer_getInstance(), tmp0_cached[4], StringSerializer_getInstance()];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  protoOf($serializer_10).u2i = function (decoder) {
    var tmp0_desc = this.f4z_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = null;
    var tmp6_local2 = 0;
    var tmp7_local3 = null;
    var tmp8_local4 = null;
    var tmp9_local5 = null;
    var tmp10_input = decoder.e2m(tmp0_desc);
    var tmp11_cached = Companion_getInstance_18().w4y_1;
    if (tmp10_input.t2m()) {
      tmp4_local0 = tmp10_input.o2m(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp10_input.o2m(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp10_input.j2m(tmp0_desc, 2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp10_input.o2m(tmp0_desc, 3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
      tmp8_local4 = tmp10_input.q2m(tmp0_desc, 4, tmp11_cached[4], tmp8_local4);
      tmp3_bitMask0 = tmp3_bitMask0 | 16;
      tmp9_local5 = tmp10_input.o2m(tmp0_desc, 5);
      tmp3_bitMask0 = tmp3_bitMask0 | 32;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp10_input.u2m(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp10_input.o2m(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp10_input.o2m(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp10_input.j2m(tmp0_desc, 2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp10_input.o2m(tmp0_desc, 3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          case 4:
            tmp8_local4 = tmp10_input.q2m(tmp0_desc, 4, tmp11_cached[4], tmp8_local4);
            tmp3_bitMask0 = tmp3_bitMask0 | 16;
            break;
          case 5:
            tmp9_local5 = tmp10_input.o2m(tmp0_desc, 5);
            tmp3_bitMask0 = tmp3_bitMask0 | 32;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp10_input.f2m(tmp0_desc);
    return MMServiceRedisParameters_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, null);
  };
  protoOf($serializer_10).g4z = function (encoder, value) {
    var tmp0_desc = this.f4z_1;
    var tmp1_output = encoder.e2m(tmp0_desc);
    var tmp2_cached = Companion_getInstance_18().w4y_1;
    tmp1_output.s2n(tmp0_desc, 0, value.z4y_1);
    tmp1_output.s2n(tmp0_desc, 1, value.a4z_1);
    tmp1_output.n2n(tmp0_desc, 2, value.b4z_1);
    tmp1_output.s2n(tmp0_desc, 3, value.c4z_1);
    tmp1_output.u2n(tmp0_desc, 4, tmp2_cached[4], value.d4z_1);
    tmp1_output.s2n(tmp0_desc, 5, value.e4z_1);
    tmp1_output.f2m(tmp0_desc);
  };
  protoOf($serializer_10).t2i = function (encoder, value) {
    return this.g4z(encoder, value instanceof MMServiceRedisParameters ? value : THROW_CCE());
  };
  var $serializer_instance_10;
  function $serializer_getInstance_10() {
    if ($serializer_instance_10 == null)
      new $serializer_10();
    return $serializer_instance_10;
  }
  function MMServiceRedisParameters_init_$Init$(seen1, username, password, port, url, mmType, token, serializationConstructorMarker, $this) {
    if (!(63 === (63 & seen1))) {
      throwMissingFieldException(seen1, 63, $serializer_getInstance_10().f4z_1);
    }
    $this.z4y_1 = username;
    $this.a4z_1 = password;
    $this.b4z_1 = port;
    $this.c4z_1 = url;
    $this.d4z_1 = mmType;
    $this.e4z_1 = token;
    return $this;
  }
  function MMServiceRedisParameters_init_$Create$(seen1, username, password, port, url, mmType, token, serializationConstructorMarker) {
    return MMServiceRedisParameters_init_$Init$(seen1, username, password, port, url, mmType, token, serializationConstructorMarker, objectCreate(protoOf(MMServiceRedisParameters)));
  }
  function MMServiceRedisParameters(username, password, port, url, mmType, token) {
    Companion_getInstance_18();
    this.z4y_1 = username;
    this.a4z_1 = password;
    this.b4z_1 = port;
    this.c4z_1 = url;
    this.d4z_1 = mmType;
    this.e4z_1 = token;
  }
  protoOf(MMServiceRedisParameters).e4y = function () {
    return this.d4z_1;
  };
  protoOf(MMServiceRedisParameters).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MMServiceRedisParameters))
      return false;
    if (!(this.z4y_1 === other.z4y_1))
      return false;
    if (!(this.a4z_1 === other.a4z_1))
      return false;
    if (!(this.b4z_1 === other.b4z_1))
      return false;
    if (!(this.c4z_1 === other.c4z_1))
      return false;
    if (!(this.e4z_1 === other.e4z_1))
      return false;
    if (!this.d4z_1.equals(other.d4z_1))
      return false;
    return true;
  };
  protoOf(MMServiceRedisParameters).hashCode = function () {
    var result = getStringHashCode(this.z4y_1);
    result = imul(31, result) + getStringHashCode(this.a4z_1) | 0;
    result = imul(31, result) + this.b4z_1 | 0;
    result = imul(31, result) + getStringHashCode(this.c4z_1) | 0;
    result = imul(31, result) + getStringHashCode(this.e4z_1) | 0;
    result = imul(31, result) + this.d4z_1.hashCode() | 0;
    return result;
  };
  function _get_$cachedSerializer__te6jhj_3($this) {
    return $this.h4z_1.q();
  }
  function Element$Companion$_anonymous__17oe99() {
    var tmp = getKClass(Element);
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = [];
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return PolymorphicSerializer_init_$Create$(tmp, tmp$ret$2);
  }
  function Companion_14() {
    Companion_instance_14 = this;
    var tmp = this;
    var tmp_0 = LazyThreadSafetyMode_PUBLICATION_getInstance();
    tmp.h4z_1 = lazy(tmp_0, Element$Companion$_anonymous__17oe99);
  }
  protoOf(Companion_14).i4z = function (number) {
    if (number <= 0) {
      throw IllegalArgumentException_init_$Create$('Given zero or negative version number ' + number);
    }
  };
  protoOf(Companion_14).p37 = function () {
    return _get_$cachedSerializer__te6jhj_3(this);
  };
  protoOf(Companion_14).h2u = function (typeParamsSerializers) {
    return this.p37();
  };
  var Companion_instance_14;
  function Companion_getInstance_19() {
    if (Companion_instance_14 == null)
      new Companion_14();
    return Companion_instance_14;
  }
  function Element_init_$Init$(seen1, serializationConstructorMarker, $this) {
    return $this;
  }
  function Element() {
    Companion_getInstance_19();
  }
  protoOf(Element).equals = function (other) {
    if (this === other)
      return true;
    return !(other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)));
  };
  protoOf(Element).hashCode = function () {
    return getKClassFromExpression(this).hashCode();
  };
  var RBACElementType_USER_instance;
  var RBACElementType_ROLE_instance;
  var RBACElementType_RESOURCE_instance;
  var RBACElementType_ROLETUPLE_instance;
  var RBACElementType_PERMISSIONTUPLE_instance;
  var RBACElementType_entriesInitialized;
  function RBACElementType_initEntries() {
    if (RBACElementType_entriesInitialized)
      return Unit_getInstance();
    RBACElementType_entriesInitialized = true;
    RBACElementType_USER_instance = new RBACElementType('USER', 0);
    RBACElementType_ROLE_instance = new RBACElementType('ROLE', 1);
    RBACElementType_RESOURCE_instance = new RBACElementType('RESOURCE', 2);
    RBACElementType_ROLETUPLE_instance = new RBACElementType('ROLETUPLE', 3);
    RBACElementType_PERMISSIONTUPLE_instance = new RBACElementType('PERMISSIONTUPLE', 4);
  }
  function RBACElementType(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function RBACElementType_USER_getInstance() {
    RBACElementType_initEntries();
    return RBACElementType_USER_instance;
  }
  function RBACElementType_ROLE_getInstance() {
    RBACElementType_initEntries();
    return RBACElementType_ROLE_instance;
  }
  function RBACElementType_RESOURCE_getInstance() {
    RBACElementType_initEntries();
    return RBACElementType_RESOURCE_instance;
  }
  function RBACElementType_ROLETUPLE_getInstance() {
    RBACElementType_initEntries();
    return RBACElementType_ROLETUPLE_instance;
  }
  function RBACElementType_PERMISSIONTUPLE_getInstance() {
    RBACElementType_initEntries();
    return RBACElementType_PERMISSIONTUPLE_instance;
  }
  function Companion_15() {
    Companion_instance_15 = this;
    var tmp = this;
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [null, null, null, null, null, null, Companion_getInstance_21().p37(), null, null, null, null];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp.k4z_1 = tmp$ret$2;
  }
  var Companion_instance_15;
  function Companion_getInstance_20() {
    if (Companion_instance_15 == null)
      new Companion_15();
    return Companion_instance_15;
  }
  function $serializer_11() {
    $serializer_instance_11 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('eu.fbk.st.cryptoac.model.tuple.PermissionTuple', this, 11);
    tmp0_serialDesc.h2t('signature', true);
    tmp0_serialDesc.h2t('signer', true);
    tmp0_serialDesc.h2t('roleName', false);
    tmp0_serialDesc.h2t('resourceName', false);
    tmp0_serialDesc.h2t('roleToken', false);
    tmp0_serialDesc.h2t('resourceToken', false);
    tmp0_serialDesc.h2t('permission', false);
    tmp0_serialDesc.h2t('encryptingSymKey', true);
    tmp0_serialDesc.h2t('decryptingSymKey', true);
    tmp0_serialDesc.h2t('roleVersionNumber', true);
    tmp0_serialDesc.h2t('symKeyVersionNumber', true);
    this.l4z_1 = tmp0_serialDesc;
  }
  protoOf($serializer_11).s2i = function () {
    return this.l4z_1;
  };
  protoOf($serializer_11).w2t = function () {
    var tmp0_cached = Companion_getInstance_20().k4z_1;
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [get_nullable(ByteArraySerializer_getInstance()), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), StringSerializer_getInstance(), tmp0_cached[6], get_nullable($serializer_getInstance_5()), get_nullable($serializer_getInstance_5()), IntSerializer_getInstance(), IntSerializer_getInstance()];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  protoOf($serializer_11).u2i = function (decoder) {
    var tmp0_desc = this.l4z_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = null;
    var tmp6_local2 = null;
    var tmp7_local3 = null;
    var tmp8_local4 = null;
    var tmp9_local5 = null;
    var tmp10_local6 = null;
    var tmp11_local7 = null;
    var tmp12_local8 = null;
    var tmp13_local9 = 0;
    var tmp14_local10 = 0;
    var tmp15_input = decoder.e2m(tmp0_desc);
    var tmp16_cached = Companion_getInstance_20().k4z_1;
    if (tmp15_input.t2m()) {
      tmp4_local0 = tmp15_input.s2m(tmp0_desc, 0, ByteArraySerializer_getInstance(), tmp4_local0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp15_input.s2m(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp15_input.o2m(tmp0_desc, 2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp15_input.o2m(tmp0_desc, 3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
      tmp8_local4 = tmp15_input.o2m(tmp0_desc, 4);
      tmp3_bitMask0 = tmp3_bitMask0 | 16;
      tmp9_local5 = tmp15_input.o2m(tmp0_desc, 5);
      tmp3_bitMask0 = tmp3_bitMask0 | 32;
      tmp10_local6 = tmp15_input.q2m(tmp0_desc, 6, tmp16_cached[6], tmp10_local6);
      tmp3_bitMask0 = tmp3_bitMask0 | 64;
      tmp11_local7 = tmp15_input.s2m(tmp0_desc, 7, $serializer_getInstance_5(), tmp11_local7);
      tmp3_bitMask0 = tmp3_bitMask0 | 128;
      tmp12_local8 = tmp15_input.s2m(tmp0_desc, 8, $serializer_getInstance_5(), tmp12_local8);
      tmp3_bitMask0 = tmp3_bitMask0 | 256;
      tmp13_local9 = tmp15_input.j2m(tmp0_desc, 9);
      tmp3_bitMask0 = tmp3_bitMask0 | 512;
      tmp14_local10 = tmp15_input.j2m(tmp0_desc, 10);
      tmp3_bitMask0 = tmp3_bitMask0 | 1024;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp15_input.u2m(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp15_input.s2m(tmp0_desc, 0, ByteArraySerializer_getInstance(), tmp4_local0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp15_input.s2m(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp15_input.o2m(tmp0_desc, 2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp15_input.o2m(tmp0_desc, 3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          case 4:
            tmp8_local4 = tmp15_input.o2m(tmp0_desc, 4);
            tmp3_bitMask0 = tmp3_bitMask0 | 16;
            break;
          case 5:
            tmp9_local5 = tmp15_input.o2m(tmp0_desc, 5);
            tmp3_bitMask0 = tmp3_bitMask0 | 32;
            break;
          case 6:
            tmp10_local6 = tmp15_input.q2m(tmp0_desc, 6, tmp16_cached[6], tmp10_local6);
            tmp3_bitMask0 = tmp3_bitMask0 | 64;
            break;
          case 7:
            tmp11_local7 = tmp15_input.s2m(tmp0_desc, 7, $serializer_getInstance_5(), tmp11_local7);
            tmp3_bitMask0 = tmp3_bitMask0 | 128;
            break;
          case 8:
            tmp12_local8 = tmp15_input.s2m(tmp0_desc, 8, $serializer_getInstance_5(), tmp12_local8);
            tmp3_bitMask0 = tmp3_bitMask0 | 256;
            break;
          case 9:
            tmp13_local9 = tmp15_input.j2m(tmp0_desc, 9);
            tmp3_bitMask0 = tmp3_bitMask0 | 512;
            break;
          case 10:
            tmp14_local10 = tmp15_input.j2m(tmp0_desc, 10);
            tmp3_bitMask0 = tmp3_bitMask0 | 1024;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp15_input.f2m(tmp0_desc);
    return PermissionTuple_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, tmp10_local6, tmp11_local7, tmp12_local8, tmp13_local9, tmp14_local10, null);
  };
  protoOf($serializer_11).m4z = function (encoder, value) {
    var tmp0_desc = this.l4z_1;
    var tmp1_output = encoder.e2m(tmp0_desc);
    var tmp2_cached = Companion_getInstance_20().k4z_1;
    if (tmp1_output.a2o(tmp0_desc, 0) ? true : !(value.n4z_1 == null)) {
      tmp1_output.w2n(tmp0_desc, 0, ByteArraySerializer_getInstance(), value.n4z_1);
    }
    if (tmp1_output.a2o(tmp0_desc, 1) ? true : !(value.o4z_1 == null)) {
      tmp1_output.w2n(tmp0_desc, 1, StringSerializer_getInstance(), value.o4z_1);
    }
    tmp1_output.s2n(tmp0_desc, 2, value.r4z_1);
    tmp1_output.s2n(tmp0_desc, 3, value.s4z_1);
    tmp1_output.s2n(tmp0_desc, 4, value.t4z_1);
    tmp1_output.s2n(tmp0_desc, 5, value.u4z_1);
    tmp1_output.u2n(tmp0_desc, 6, tmp2_cached[6], value.v4z_1);
    if (tmp1_output.a2o(tmp0_desc, 7) ? true : !(value.w4z_1 == null)) {
      tmp1_output.w2n(tmp0_desc, 7, $serializer_getInstance_5(), value.w4z_1);
    }
    if (tmp1_output.a2o(tmp0_desc, 8) ? true : !(value.x4z_1 == null)) {
      tmp1_output.w2n(tmp0_desc, 8, $serializer_getInstance_5(), value.x4z_1);
    }
    if (tmp1_output.a2o(tmp0_desc, 9) ? true : !(value.y4z_1 === 1)) {
      tmp1_output.n2n(tmp0_desc, 9, value.y4z_1);
    }
    if (tmp1_output.a2o(tmp0_desc, 10) ? true : !(value.z4z_1 === 1)) {
      tmp1_output.n2n(tmp0_desc, 10, value.z4z_1);
    }
    tmp1_output.f2m(tmp0_desc);
  };
  protoOf($serializer_11).t2i = function (encoder, value) {
    return this.m4z(encoder, value instanceof PermissionTuple ? value : THROW_CCE());
  };
  var $serializer_instance_11;
  function $serializer_getInstance_11() {
    if ($serializer_instance_11 == null)
      new $serializer_11();
    return $serializer_instance_11;
  }
  function PermissionTuple_init_$Init$(seen1, signature, signer, roleName, resourceName, roleToken, resourceToken, permission, encryptingSymKey, decryptingSymKey, roleVersionNumber, symKeyVersionNumber, serializationConstructorMarker, $this) {
    if (!(124 === (124 & seen1))) {
      throwMissingFieldException(seen1, 124, $serializer_getInstance_11().l4z_1);
    }
    Tuple_init_$Init$(seen1, signature, signer, serializationConstructorMarker, $this);
    $this.r4z_1 = roleName;
    $this.s4z_1 = resourceName;
    $this.t4z_1 = roleToken;
    $this.u4z_1 = resourceToken;
    $this.v4z_1 = permission;
    if (0 === (seen1 & 128))
      $this.w4z_1 = null;
    else
      $this.w4z_1 = encryptingSymKey;
    if (0 === (seen1 & 256))
      $this.x4z_1 = null;
    else
      $this.x4z_1 = decryptingSymKey;
    if (0 === (seen1 & 512))
      $this.y4z_1 = 1;
    else
      $this.y4z_1 = roleVersionNumber;
    if (0 === (seen1 & 1024))
      $this.z4z_1 = 1;
    else
      $this.z4z_1 = symKeyVersionNumber;
    Companion_getInstance_19().i4z($this.y4z_1);
    Companion_getInstance_19().i4z($this.z4z_1);
    return $this;
  }
  function PermissionTuple_init_$Create$(seen1, signature, signer, roleName, resourceName, roleToken, resourceToken, permission, encryptingSymKey, decryptingSymKey, roleVersionNumber, symKeyVersionNumber, serializationConstructorMarker) {
    return PermissionTuple_init_$Init$(seen1, signature, signer, roleName, resourceName, roleToken, resourceToken, permission, encryptingSymKey, decryptingSymKey, roleVersionNumber, symKeyVersionNumber, serializationConstructorMarker, objectCreate(protoOf(PermissionTuple)));
  }
  function PermissionTuple(roleName, resourceName, roleToken, resourceToken, permission, encryptingSymKey, decryptingSymKey, roleVersionNumber, symKeyVersionNumber) {
    Companion_getInstance_20();
    encryptingSymKey = encryptingSymKey === VOID ? null : encryptingSymKey;
    decryptingSymKey = decryptingSymKey === VOID ? null : decryptingSymKey;
    roleVersionNumber = roleVersionNumber === VOID ? 1 : roleVersionNumber;
    symKeyVersionNumber = symKeyVersionNumber === VOID ? 1 : symKeyVersionNumber;
    Tuple.call(this);
    this.r4z_1 = roleName;
    this.s4z_1 = resourceName;
    this.t4z_1 = roleToken;
    this.u4z_1 = resourceToken;
    this.v4z_1 = permission;
    this.w4z_1 = encryptingSymKey;
    this.x4z_1 = decryptingSymKey;
    this.y4z_1 = roleVersionNumber;
    this.z4z_1 = symKeyVersionNumber;
    Companion_getInstance_19().i4z(this.y4z_1);
    Companion_getInstance_19().i4z(this.z4z_1);
  }
  protoOf(PermissionTuple).vb = function () {
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [this.r4z_1, this.s4z_1, this.z4z_1.toString(), this.v4z_1.toString()];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  protoOf(PermissionTuple).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof PermissionTuple))
      return false;
    if (!protoOf(Tuple).equals.call(this, other))
      return false;
    if (!(this.r4z_1 === other.r4z_1))
      return false;
    if (!(this.s4z_1 === other.s4z_1))
      return false;
    if (!(this.t4z_1 === other.t4z_1))
      return false;
    if (!(this.u4z_1 === other.u4z_1))
      return false;
    if (!this.v4z_1.equals(other.v4z_1))
      return false;
    if (!equals(this.w4z_1, other.w4z_1))
      return false;
    if (!equals(this.x4z_1, other.x4z_1))
      return false;
    if (!(this.y4z_1 === other.y4z_1))
      return false;
    if (!(this.z4z_1 === other.z4z_1))
      return false;
    return true;
  };
  protoOf(PermissionTuple).hashCode = function () {
    var result = protoOf(Tuple).hashCode.call(this);
    result = imul(31, result) + getStringHashCode(this.r4z_1) | 0;
    result = imul(31, result) + getStringHashCode(this.s4z_1) | 0;
    result = imul(31, result) + getStringHashCode(this.t4z_1) | 0;
    result = imul(31, result) + getStringHashCode(this.u4z_1) | 0;
    result = imul(31, result) + this.v4z_1.hashCode() | 0;
    var tmp = imul(31, result);
    var tmp0_safe_receiver = this.w4z_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.hashCode();
    result = tmp + (tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs) | 0;
    var tmp_0 = imul(31, result);
    var tmp2_safe_receiver = this.x4z_1;
    var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.hashCode();
    result = tmp_0 + (tmp3_elvis_lhs == null ? 0 : tmp3_elvis_lhs) | 0;
    result = imul(31, result) + this.y4z_1 | 0;
    result = imul(31, result) + this.z4z_1 | 0;
    return result;
  };
  function _get_$cachedSerializer__te6jhj_4($this) {
    return $this.j4z_1.q();
  }
  function PermissionType$Companion$_anonymous__lzhdwm() {
    return createSimpleEnumSerializer('eu.fbk.st.cryptoac.model.tuple.PermissionType', values_6());
  }
  var PermissionType_READ_instance;
  var PermissionType_WRITE_instance;
  var PermissionType_READWRITE_instance;
  function Companion_16() {
    Companion_instance_16 = this;
    var tmp = this;
    var tmp_0 = LazyThreadSafetyMode_PUBLICATION_getInstance();
    tmp.j4z_1 = lazy(tmp_0, PermissionType$Companion$_anonymous__lzhdwm);
  }
  protoOf(Companion_16).p37 = function () {
    return _get_$cachedSerializer__te6jhj_4(this);
  };
  protoOf(Companion_16).h2u = function (typeParamsSerializers) {
    return this.p37();
  };
  var Companion_instance_16;
  function Companion_getInstance_21() {
    PermissionType_initEntries();
    if (Companion_instance_16 == null)
      new Companion_16();
    return Companion_instance_16;
  }
  function values_6() {
    return [PermissionType_READ_getInstance(), PermissionType_WRITE_getInstance(), PermissionType_READWRITE_getInstance()];
  }
  var PermissionType_entriesInitialized;
  function PermissionType_initEntries() {
    if (PermissionType_entriesInitialized)
      return Unit_getInstance();
    PermissionType_entriesInitialized = true;
    PermissionType_READ_instance = new PermissionType('READ', 0);
    PermissionType_WRITE_instance = new PermissionType('WRITE', 1);
    PermissionType_READWRITE_instance = new PermissionType('READWRITE', 2);
    Companion_getInstance_21();
  }
  function PermissionType(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function PermissionType_READ_getInstance() {
    PermissionType_initEntries();
    return PermissionType_READ_instance;
  }
  function PermissionType_WRITE_getInstance() {
    PermissionType_initEntries();
    return PermissionType_WRITE_instance;
  }
  function PermissionType_READWRITE_getInstance() {
    PermissionType_initEntries();
    return PermissionType_READWRITE_instance;
  }
  function Companion_17() {
    Companion_instance_17 = this;
  }
  var Companion_instance_17;
  function Companion_getInstance_22() {
    if (Companion_instance_17 == null)
      new Companion_17();
    return Companion_instance_17;
  }
  function $serializer_12() {
    $serializer_instance_12 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('eu.fbk.st.cryptoac.model.tuple.RoleTuple', this, 5);
    tmp0_serialDesc.h2t('signature', true);
    tmp0_serialDesc.h2t('signer', true);
    tmp0_serialDesc.h2t('username', false);
    tmp0_serialDesc.h2t('roleName', false);
    tmp0_serialDesc.h2t('roleVersionNumber', true);
    this.a50_1 = tmp0_serialDesc;
  }
  protoOf($serializer_12).s2i = function () {
    return this.a50_1;
  };
  protoOf($serializer_12).w2t = function () {
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [get_nullable(ByteArraySerializer_getInstance()), get_nullable(StringSerializer_getInstance()), StringSerializer_getInstance(), StringSerializer_getInstance(), IntSerializer_getInstance()];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  protoOf($serializer_12).u2i = function (decoder) {
    var tmp0_desc = this.a50_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = null;
    var tmp6_local2 = null;
    var tmp7_local3 = null;
    var tmp8_local4 = 0;
    var tmp9_transient0 = null;
    var tmp10_transient1 = null;
    var tmp11_input = decoder.e2m(tmp0_desc);
    if (tmp11_input.t2m()) {
      tmp4_local0 = tmp11_input.s2m(tmp0_desc, 0, ByteArraySerializer_getInstance(), tmp4_local0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp11_input.s2m(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp11_input.o2m(tmp0_desc, 2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp11_input.o2m(tmp0_desc, 3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
      tmp8_local4 = tmp11_input.j2m(tmp0_desc, 4);
      tmp3_bitMask0 = tmp3_bitMask0 | 16;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp11_input.u2m(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp11_input.s2m(tmp0_desc, 0, ByteArraySerializer_getInstance(), tmp4_local0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp11_input.s2m(tmp0_desc, 1, StringSerializer_getInstance(), tmp5_local1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp11_input.o2m(tmp0_desc, 2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp11_input.o2m(tmp0_desc, 3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          case 4:
            tmp8_local4 = tmp11_input.j2m(tmp0_desc, 4);
            tmp3_bitMask0 = tmp3_bitMask0 | 16;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp11_input.f2m(tmp0_desc);
    return RoleTuple_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
  };
  protoOf($serializer_12).b50 = function (encoder, value) {
    var tmp0_desc = this.a50_1;
    var tmp1_output = encoder.e2m(tmp0_desc);
    if (tmp1_output.a2o(tmp0_desc, 0) ? true : !(value.n4z_1 == null)) {
      tmp1_output.w2n(tmp0_desc, 0, ByteArraySerializer_getInstance(), value.n4z_1);
    }
    if (tmp1_output.a2o(tmp0_desc, 1) ? true : !(value.o4z_1 == null)) {
      tmp1_output.w2n(tmp0_desc, 1, StringSerializer_getInstance(), value.o4z_1);
    }
    tmp1_output.s2n(tmp0_desc, 2, value.e50_1);
    tmp1_output.s2n(tmp0_desc, 3, value.f50_1);
    if (tmp1_output.a2o(tmp0_desc, 4) ? true : !(value.g50_1 === 1)) {
      tmp1_output.n2n(tmp0_desc, 4, value.g50_1);
    }
    tmp1_output.f2m(tmp0_desc);
  };
  protoOf($serializer_12).t2i = function (encoder, value) {
    return this.b50(encoder, value instanceof RoleTuple ? value : THROW_CCE());
  };
  var $serializer_instance_12;
  function $serializer_getInstance_12() {
    if ($serializer_instance_12 == null)
      new $serializer_12();
    return $serializer_instance_12;
  }
  function RoleTuple_init_$Init$(seen1, signature, signer, username, roleName, roleVersionNumber, serializationConstructorMarker, $this) {
    if (!(12 === (12 & seen1))) {
      throwMissingFieldException(seen1, 12, $serializer_getInstance_12().a50_1);
    }
    Tuple_init_$Init$(seen1, signature, signer, serializationConstructorMarker, $this);
    $this.e50_1 = username;
    $this.f50_1 = roleName;
    if (0 === (seen1 & 16))
      $this.g50_1 = 1;
    else
      $this.g50_1 = roleVersionNumber;
    $this.h50_1 = null;
    $this.i50_1 = null;
    Companion_getInstance_19().i4z($this.g50_1);
    return $this;
  }
  function RoleTuple_init_$Create$(seen1, signature, signer, username, roleName, roleVersionNumber, serializationConstructorMarker) {
    return RoleTuple_init_$Init$(seen1, signature, signer, username, roleName, roleVersionNumber, serializationConstructorMarker, objectCreate(protoOf(RoleTuple)));
  }
  function RoleTuple(username, roleName, roleVersionNumber, encryptedAsymEncKeys, encryptedAsymSigKeys) {
    Companion_getInstance_22();
    roleVersionNumber = roleVersionNumber === VOID ? 1 : roleVersionNumber;
    encryptedAsymEncKeys = encryptedAsymEncKeys === VOID ? null : encryptedAsymEncKeys;
    encryptedAsymSigKeys = encryptedAsymSigKeys === VOID ? null : encryptedAsymSigKeys;
    Tuple.call(this);
    this.e50_1 = username;
    this.f50_1 = roleName;
    this.g50_1 = roleVersionNumber;
    this.h50_1 = encryptedAsymEncKeys;
    this.i50_1 = encryptedAsymSigKeys;
    Companion_getInstance_19().i4z(this.g50_1);
  }
  protoOf(RoleTuple).vb = function () {
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [this.e50_1, this.f50_1, this.g50_1.toString()];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  protoOf(RoleTuple).equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (!protoOf(Tuple).equals.call(this, other))
      return false;
    if (other instanceof RoleTuple)
      other;
    else
      THROW_CCE();
    if (!(this.e50_1 === other.e50_1))
      return false;
    if (!(this.f50_1 === other.f50_1))
      return false;
    if (!(this.g50_1 === other.g50_1))
      return false;
    if (!equals(this.h50_1, other.h50_1))
      return false;
    if (!equals(this.i50_1, other.i50_1))
      return false;
    return true;
  };
  protoOf(RoleTuple).hashCode = function () {
    var result = protoOf(Tuple).hashCode.call(this);
    result = imul(31, result) + getStringHashCode(this.e50_1) | 0;
    result = imul(31, result) + getStringHashCode(this.f50_1) | 0;
    result = imul(31, result) + this.g50_1 | 0;
    var tmp = imul(31, result);
    var tmp0_safe_receiver = this.h50_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.hashCode();
    result = tmp + (tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs) | 0;
    var tmp_0 = imul(31, result);
    var tmp2_safe_receiver = this.i50_1;
    var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.hashCode();
    result = tmp_0 + (tmp3_elvis_lhs == null ? 0 : tmp3_elvis_lhs) | 0;
    return result;
  };
  function _get_$cachedSerializer__te6jhj_5($this) {
    return $this.j50_1.q();
  }
  function Tuple$Companion$_anonymous__6vim13() {
    var tmp = getKClass(Tuple);
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [getKClass(PermissionTuple), getKClass(RoleTuple)];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    var tmp_0 = tmp$ret$2;
    var tmp$ret$5;
    // Inline function 'kotlin.arrayOf' call
    var tmp1_arrayOf = [$serializer_getInstance_11(), $serializer_getInstance_12()];
    var tmp$ret$4;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$3;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$3 = tmp1_arrayOf;
    tmp$ret$4 = tmp$ret$3;
    tmp$ret$5 = tmp$ret$4;
    var tmp_1 = tmp$ret$5;
    var tmp$ret$8;
    // Inline function 'kotlin.arrayOf' call
    var tmp$ret$7;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$6;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$6 = [];
    tmp$ret$7 = tmp$ret$6;
    tmp$ret$8 = tmp$ret$7;
    return SealedClassSerializer_init_$Create$('eu.fbk.st.cryptoac.model.tuple.Tuple', tmp, tmp_0, tmp_1, tmp$ret$8);
  }
  function Companion_18() {
    Companion_instance_18 = this;
    var tmp = this;
    var tmp_0 = LazyThreadSafetyMode_PUBLICATION_getInstance();
    tmp.j50_1 = lazy(tmp_0, Tuple$Companion$_anonymous__6vim13);
  }
  protoOf(Companion_18).p37 = function () {
    return _get_$cachedSerializer__te6jhj_5(this);
  };
  protoOf(Companion_18).h2u = function (typeParamsSerializers) {
    return this.p37();
  };
  var Companion_instance_18;
  function Companion_getInstance_23() {
    if (Companion_instance_18 == null)
      new Companion_18();
    return Companion_instance_18;
  }
  function Tuple_init_$Init$(seen1, signature, signer, serializationConstructorMarker, $this) {
    Element_init_$Init$(seen1, serializationConstructorMarker, $this);
    if (0 === (seen1 & 1))
      $this.n4z_1 = null;
    else
      $this.n4z_1 = signature;
    if (0 === (seen1 & 2))
      $this.o4z_1 = null;
    else
      $this.o4z_1 = signer;
    return $this;
  }
  function Tuple() {
    Companion_getInstance_23();
    Element.call(this);
    this.n4z_1 = null;
    this.o4z_1 = null;
  }
  protoOf(Tuple).equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (!protoOf(Element).equals.call(this, other))
      return false;
    if (other instanceof Tuple)
      other;
    else
      THROW_CCE();
    if (!(this.n4z_1 == null)) {
      if (other.n4z_1 == null)
        return false;
      if (!contentEquals(this.n4z_1, other.n4z_1))
        return false;
    } else if (!(other.n4z_1 == null))
      return false;
    if (!(this.o4z_1 == other.o4z_1))
      return false;
    return true;
  };
  protoOf(Tuple).hashCode = function () {
    var result = protoOf(Element).hashCode.call(this);
    var tmp = imul(31, result);
    var tmp0_safe_receiver = this.n4z_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : contentHashCode(tmp0_safe_receiver);
    result = tmp + (tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs) | 0;
    var tmp_0 = imul(31, result);
    var tmp2_safe_receiver = this.o4z_1;
    var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : getStringHashCode(tmp2_safe_receiver);
    result = tmp_0 + (tmp3_elvis_lhs == null ? 0 : tmp3_elvis_lhs) | 0;
    return result;
  };
  function _get_$cachedSerializer__te6jhj_6($this) {
    return $this.k50_1.q();
  }
  function EnforcementType$Companion$_anonymous__bdqogb() {
    return createSimpleEnumSerializer('eu.fbk.st.cryptoac.model.unit.EnforcementType', values_7());
  }
  var EnforcementType_TRADITIONAL_instance;
  var EnforcementType_COMBINED_instance;
  function Companion_19() {
    Companion_instance_19 = this;
    var tmp = this;
    var tmp_0 = LazyThreadSafetyMode_PUBLICATION_getInstance();
    tmp.k50_1 = lazy(tmp_0, EnforcementType$Companion$_anonymous__bdqogb);
  }
  protoOf(Companion_19).p37 = function () {
    return _get_$cachedSerializer__te6jhj_6(this);
  };
  protoOf(Companion_19).h2u = function (typeParamsSerializers) {
    return this.p37();
  };
  var Companion_instance_19;
  function Companion_getInstance_24() {
    EnforcementType_initEntries();
    if (Companion_instance_19 == null)
      new Companion_19();
    return Companion_instance_19;
  }
  function values_7() {
    return [EnforcementType_TRADITIONAL_getInstance(), EnforcementType_COMBINED_getInstance()];
  }
  var EnforcementType_entriesInitialized;
  function EnforcementType_initEntries() {
    if (EnforcementType_entriesInitialized)
      return Unit_getInstance();
    EnforcementType_entriesInitialized = true;
    EnforcementType_TRADITIONAL_instance = new EnforcementType('TRADITIONAL', 0);
    EnforcementType_COMBINED_instance = new EnforcementType('COMBINED', 1);
    Companion_getInstance_24();
  }
  function EnforcementType(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function EnforcementType_TRADITIONAL_getInstance() {
    EnforcementType_initEntries();
    return EnforcementType_TRADITIONAL_instance;
  }
  function EnforcementType_COMBINED_getInstance() {
    EnforcementType_initEntries();
    return EnforcementType_COMBINED_instance;
  }
  function Companion_20() {
    Companion_instance_20 = this;
    var tmp = this;
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [null, createSimpleEnumSerializer('eu.fbk.st.cryptoac.model.unit.UnitElementStatus', values_8()), null, null, Companion_getInstance_24().p37(), null];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp.l50_1 = tmp$ret$2;
  }
  var Companion_instance_20;
  function Companion_getInstance_25() {
    if (Companion_instance_20 == null)
      new Companion_20();
    return Companion_instance_20;
  }
  function $serializer_13() {
    $serializer_instance_13 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('eu.fbk.st.cryptoac.model.unit.Resource', this, 6);
    tmp0_serialDesc.h2t('name', false);
    tmp0_serialDesc.h2t('status', true);
    tmp0_serialDesc.h2t('symEncKeyVersionNumber', true);
    tmp0_serialDesc.h2t('symDecKeyVersionNumber', true);
    tmp0_serialDesc.h2t('enforcement', false);
    tmp0_serialDesc.h2t('token', true);
    this.m50_1 = tmp0_serialDesc;
  }
  protoOf($serializer_13).s2i = function () {
    return this.m50_1;
  };
  protoOf($serializer_13).w2t = function () {
    var tmp0_cached = Companion_getInstance_25().l50_1;
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [StringSerializer_getInstance(), tmp0_cached[1], IntSerializer_getInstance(), IntSerializer_getInstance(), tmp0_cached[4], StringSerializer_getInstance()];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  protoOf($serializer_13).u2i = function (decoder) {
    var tmp0_desc = this.m50_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = null;
    var tmp6_local2 = 0;
    var tmp7_local3 = 0;
    var tmp8_local4 = null;
    var tmp9_local5 = null;
    var tmp10_input = decoder.e2m(tmp0_desc);
    var tmp11_cached = Companion_getInstance_25().l50_1;
    if (tmp10_input.t2m()) {
      tmp4_local0 = tmp10_input.o2m(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp10_input.q2m(tmp0_desc, 1, tmp11_cached[1], tmp5_local1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp10_input.j2m(tmp0_desc, 2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp10_input.j2m(tmp0_desc, 3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
      tmp8_local4 = tmp10_input.q2m(tmp0_desc, 4, tmp11_cached[4], tmp8_local4);
      tmp3_bitMask0 = tmp3_bitMask0 | 16;
      tmp9_local5 = tmp10_input.o2m(tmp0_desc, 5);
      tmp3_bitMask0 = tmp3_bitMask0 | 32;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp10_input.u2m(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp10_input.o2m(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp10_input.q2m(tmp0_desc, 1, tmp11_cached[1], tmp5_local1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp10_input.j2m(tmp0_desc, 2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp10_input.j2m(tmp0_desc, 3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          case 4:
            tmp8_local4 = tmp10_input.q2m(tmp0_desc, 4, tmp11_cached[4], tmp8_local4);
            tmp3_bitMask0 = tmp3_bitMask0 | 16;
            break;
          case 5:
            tmp9_local5 = tmp10_input.o2m(tmp0_desc, 5);
            tmp3_bitMask0 = tmp3_bitMask0 | 32;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp10_input.f2m(tmp0_desc);
    return Resource_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, null);
  };
  protoOf($serializer_13).n50 = function (encoder, value) {
    var tmp0_desc = this.m50_1;
    var tmp1_output = encoder.e2m(tmp0_desc);
    var tmp2_cached = Companion_getInstance_25().l50_1;
    tmp1_output.s2n(tmp0_desc, 0, value.o50_1);
    if (tmp1_output.a2o(tmp0_desc, 1) ? true : !value.p50_1.equals(UnitElementStatus_OPERATIONAL_getInstance())) {
      tmp1_output.u2n(tmp0_desc, 1, tmp2_cached[1], value.p50_1);
    }
    if (tmp1_output.a2o(tmp0_desc, 2) ? true : !(value.q50_1 === 1)) {
      tmp1_output.n2n(tmp0_desc, 2, value.q50_1);
    }
    if (tmp1_output.a2o(tmp0_desc, 3) ? true : !(value.r50_1 === 1)) {
      tmp1_output.n2n(tmp0_desc, 3, value.r50_1);
    }
    tmp1_output.u2n(tmp0_desc, 4, tmp2_cached[4], value.s50_1);
    if (tmp1_output.a2o(tmp0_desc, 5) ? true : !(value.t50_1 === Companion_getInstance_27().v50())) {
      tmp1_output.s2n(tmp0_desc, 5, value.t50_1);
    }
    tmp1_output.f2m(tmp0_desc);
  };
  protoOf($serializer_13).t2i = function (encoder, value) {
    return this.n50(encoder, value instanceof Resource ? value : THROW_CCE());
  };
  var $serializer_instance_13;
  function $serializer_getInstance_13() {
    if ($serializer_instance_13 == null)
      new $serializer_13();
    return $serializer_instance_13;
  }
  function Resource_init_$Init$(seen1, name, status, symEncKeyVersionNumber, symDecKeyVersionNumber, enforcement, token, serializationConstructorMarker, $this) {
    if (!(17 === (17 & seen1))) {
      throwMissingFieldException(seen1, 17, $serializer_getInstance_13().m50_1);
    }
    UnitElement_init_$Init$(seen1, serializationConstructorMarker, $this);
    $this.o50_1 = name;
    if (0 === (seen1 & 2))
      $this.p50_1 = UnitElementStatus_OPERATIONAL_getInstance();
    else
      $this.p50_1 = status;
    if (0 === (seen1 & 4))
      $this.q50_1 = 1;
    else
      $this.q50_1 = symEncKeyVersionNumber;
    if (0 === (seen1 & 8))
      $this.r50_1 = 1;
    else
      $this.r50_1 = symDecKeyVersionNumber;
    $this.s50_1 = enforcement;
    if (0 === (seen1 & 32))
      $this.t50_1 = Companion_getInstance_27().v50();
    else
      $this.t50_1 = token;
    Companion_getInstance_19().i4z($this.q50_1);
    Companion_getInstance_19().i4z($this.r50_1);
    if ($this.r50_1 > $this.q50_1) {
      throw IllegalArgumentException_init_$Create$('The decrypting version number cannot be greater than the encrypting version number');
    }
    return $this;
  }
  function Resource_init_$Create$(seen1, name, status, symEncKeyVersionNumber, symDecKeyVersionNumber, enforcement, token, serializationConstructorMarker) {
    return Resource_init_$Init$(seen1, name, status, symEncKeyVersionNumber, symDecKeyVersionNumber, enforcement, token, serializationConstructorMarker, objectCreate(protoOf(Resource)));
  }
  function Resource(name, status, symEncKeyVersionNumber, symDecKeyVersionNumber, enforcement) {
    Companion_getInstance_25();
    status = status === VOID ? UnitElementStatus_OPERATIONAL_getInstance() : status;
    symEncKeyVersionNumber = symEncKeyVersionNumber === VOID ? 1 : symEncKeyVersionNumber;
    symDecKeyVersionNumber = symDecKeyVersionNumber === VOID ? 1 : symDecKeyVersionNumber;
    UnitElement.call(this);
    this.o50_1 = name;
    this.p50_1 = status;
    this.q50_1 = symEncKeyVersionNumber;
    this.r50_1 = symDecKeyVersionNumber;
    this.s50_1 = enforcement;
    this.t50_1 = Companion_getInstance_27().v50();
    Companion_getInstance_19().i4z(this.q50_1);
    Companion_getInstance_19().i4z(this.r50_1);
    if (this.r50_1 > this.q50_1) {
      throw IllegalArgumentException_init_$Create$('The decrypting version number cannot be greater than the encrypting version number');
    }
  }
  protoOf(Resource).w50 = function () {
    return this.o50_1;
  };
  protoOf(Resource).j3k = function () {
    return this.p50_1;
  };
  protoOf(Resource).x50 = function () {
    return this.t50_1;
  };
  protoOf(Resource).vb = function () {
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [this.o50_1, this.p50_1.toString(), this.q50_1.toString(), this.r50_1.toString(), this.t50_1, this.s50_1.toString()];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  protoOf(Resource).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Resource))
      return false;
    if (!protoOf(UnitElement).equals.call(this, other))
      return false;
    if (!(this.o50_1 === other.o50_1))
      return false;
    if (!this.p50_1.equals(other.p50_1))
      return false;
    if (!(this.q50_1 === other.q50_1))
      return false;
    if (!(this.r50_1 === other.r50_1))
      return false;
    if (!this.s50_1.equals(other.s50_1))
      return false;
    if (!(this.t50_1 === other.t50_1))
      return false;
    return true;
  };
  protoOf(Resource).hashCode = function () {
    var result = protoOf(UnitElement).hashCode.call(this);
    result = imul(31, result) + getStringHashCode(this.o50_1) | 0;
    result = imul(31, result) + this.p50_1.hashCode() | 0;
    result = imul(31, result) + this.q50_1 | 0;
    result = imul(31, result) + this.r50_1 | 0;
    result = imul(31, result) + this.s50_1.hashCode() | 0;
    result = imul(31, result) + getStringHashCode(this.t50_1) | 0;
    return result;
  };
  function Companion_21() {
    Companion_instance_21 = this;
    var tmp = this;
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [null, createSimpleEnumSerializer('eu.fbk.st.cryptoac.model.unit.UnitElementStatus', values_8()), null, null];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp.y50_1 = tmp$ret$2;
  }
  var Companion_instance_21;
  function Companion_getInstance_26() {
    if (Companion_instance_21 == null)
      new Companion_21();
    return Companion_instance_21;
  }
  function $serializer_14() {
    $serializer_instance_14 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('eu.fbk.st.cryptoac.model.unit.Role', this, 4);
    tmp0_serialDesc.h2t('name', false);
    tmp0_serialDesc.h2t('status', true);
    tmp0_serialDesc.h2t('versionNumber', true);
    tmp0_serialDesc.h2t('token', true);
    this.z50_1 = tmp0_serialDesc;
  }
  protoOf($serializer_14).s2i = function () {
    return this.z50_1;
  };
  protoOf($serializer_14).w2t = function () {
    var tmp0_cached = Companion_getInstance_26().y50_1;
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [StringSerializer_getInstance(), tmp0_cached[1], IntSerializer_getInstance(), StringSerializer_getInstance()];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  protoOf($serializer_14).u2i = function (decoder) {
    var tmp0_desc = this.z50_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = null;
    var tmp6_local2 = 0;
    var tmp7_local3 = null;
    var tmp8_transient0 = null;
    var tmp9_transient1 = null;
    var tmp10_input = decoder.e2m(tmp0_desc);
    var tmp11_cached = Companion_getInstance_26().y50_1;
    if (tmp10_input.t2m()) {
      tmp4_local0 = tmp10_input.o2m(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp10_input.q2m(tmp0_desc, 1, tmp11_cached[1], tmp5_local1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp10_input.j2m(tmp0_desc, 2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp10_input.o2m(tmp0_desc, 3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp10_input.u2m(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp10_input.o2m(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp10_input.q2m(tmp0_desc, 1, tmp11_cached[1], tmp5_local1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp10_input.j2m(tmp0_desc, 2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp10_input.o2m(tmp0_desc, 3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp10_input.f2m(tmp0_desc);
    return Role_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, null);
  };
  protoOf($serializer_14).a51 = function (encoder, value) {
    var tmp0_desc = this.z50_1;
    var tmp1_output = encoder.e2m(tmp0_desc);
    var tmp2_cached = Companion_getInstance_26().y50_1;
    tmp1_output.s2n(tmp0_desc, 0, value.b51_1);
    if (tmp1_output.a2o(tmp0_desc, 1) ? true : !value.c51_1.equals(UnitElementStatus_OPERATIONAL_getInstance())) {
      tmp1_output.u2n(tmp0_desc, 1, tmp2_cached[1], value.c51_1);
    }
    if (tmp1_output.a2o(tmp0_desc, 2) ? true : !(value.f51_1 === 1)) {
      tmp1_output.n2n(tmp0_desc, 2, value.f51_1);
    }
    if (tmp1_output.a2o(tmp0_desc, 3) ? true : !(value.g51_1 === Companion_getInstance_27().h51(value.b51_1))) {
      tmp1_output.s2n(tmp0_desc, 3, value.g51_1);
    }
    tmp1_output.f2m(tmp0_desc);
  };
  protoOf($serializer_14).t2i = function (encoder, value) {
    return this.a51(encoder, value instanceof Role ? value : THROW_CCE());
  };
  var $serializer_instance_14;
  function $serializer_getInstance_14() {
    if ($serializer_instance_14 == null)
      new $serializer_14();
    return $serializer_instance_14;
  }
  function Role_init_$Init$(seen1, name, status, versionNumber, token, serializationConstructorMarker, $this) {
    if (!(1 === (1 & seen1))) {
      throwMissingFieldException(seen1, 1, $serializer_getInstance_14().z50_1);
    }
    UnitElementWithKeys_init_$Init$(seen1, serializationConstructorMarker, $this);
    $this.b51_1 = name;
    if (0 === (seen1 & 2))
      $this.c51_1 = UnitElementStatus_OPERATIONAL_getInstance();
    else
      $this.c51_1 = status;
    $this.d51_1 = null;
    $this.e51_1 = null;
    if (0 === (seen1 & 4))
      $this.f51_1 = 1;
    else
      $this.f51_1 = versionNumber;
    Companion_getInstance_19().i4z($this.f51_1);
    if (0 === (seen1 & 8))
      $this.g51_1 = Companion_getInstance_27().h51($this.b51_1);
    else
      $this.g51_1 = token;
    return $this;
  }
  function Role_init_$Create$(seen1, name, status, versionNumber, token, serializationConstructorMarker) {
    return Role_init_$Init$(seen1, name, status, versionNumber, token, serializationConstructorMarker, objectCreate(protoOf(Role)));
  }
  function Role(name, status, asymEncKeys, asymSigKeys, versionNumber) {
    Companion_getInstance_26();
    status = status === VOID ? UnitElementStatus_OPERATIONAL_getInstance() : status;
    asymEncKeys = asymEncKeys === VOID ? null : asymEncKeys;
    asymSigKeys = asymSigKeys === VOID ? null : asymSigKeys;
    versionNumber = versionNumber === VOID ? 1 : versionNumber;
    UnitElementWithKeys.call(this);
    this.b51_1 = name;
    this.c51_1 = status;
    this.d51_1 = asymEncKeys;
    this.e51_1 = asymSigKeys;
    this.f51_1 = versionNumber;
    Companion_getInstance_19().i4z(this.f51_1);
    this.g51_1 = Companion_getInstance_27().h51(this.b51_1);
  }
  protoOf(Role).w50 = function () {
    return this.b51_1;
  };
  protoOf(Role).j3k = function () {
    return this.c51_1;
  };
  protoOf(Role).i51 = function () {
    return this.d51_1;
  };
  protoOf(Role).j51 = function () {
    return this.e51_1;
  };
  protoOf(Role).x50 = function () {
    return this.g51_1;
  };
  protoOf(Role).vb = function () {
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [this.b51_1, this.c51_1.toString(), this.g51_1];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  protoOf(Role).equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (other instanceof Role)
      other;
    else
      THROW_CCE();
    if (!(this.b51_1 === other.b51_1))
      return false;
    if (!this.c51_1.equals(other.c51_1))
      return false;
    if (!equals(this.d51_1, other.d51_1))
      return false;
    if (!equals(this.e51_1, other.e51_1))
      return false;
    if (!(this.f51_1 === other.f51_1))
      return false;
    if (!(this.g51_1 === other.g51_1))
      return false;
    return true;
  };
  protoOf(Role).hashCode = function () {
    var result = getStringHashCode(this.b51_1);
    result = imul(31, result) + this.c51_1.hashCode() | 0;
    var tmp = imul(31, result);
    var tmp0_safe_receiver = this.d51_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.hashCode();
    result = tmp + (tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs) | 0;
    var tmp_0 = imul(31, result);
    var tmp2_safe_receiver = this.e51_1;
    var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.hashCode();
    result = tmp_0 + (tmp3_elvis_lhs == null ? 0 : tmp3_elvis_lhs) | 0;
    result = imul(31, result) + this.f51_1 | 0;
    result = imul(31, result) + getStringHashCode(this.g51_1) | 0;
    return result;
  };
  function _get_$cachedSerializer__te6jhj_7($this) {
    return $this.u50_1.q();
  }
  function UnitElement$Companion$_anonymous__e9yhhl() {
    var tmp = getKClass(UnitElement);
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = [];
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return PolymorphicSerializer_init_$Create$(tmp, tmp$ret$2);
  }
  function Companion_22() {
    Companion_instance_22 = this;
    var tmp = this;
    var tmp_0 = LazyThreadSafetyMode_PUBLICATION_getInstance();
    tmp.u50_1 = lazy(tmp_0, UnitElement$Companion$_anonymous__e9yhhl);
  }
  protoOf(Companion_22).k51 = function (length) {
    Companion_getInstance_19().i4z(length);
    var charPool = plus_0(plus(Char__rangeTo_impl_tkncvp(_Char___init__impl__6a9atx(97), _Char___init__impl__6a9atx(122)), Char__rangeTo_impl_tkncvp(_Char___init__impl__6a9atx(65), _Char___init__impl__6a9atx(90))), Char__rangeTo_impl_tkncvp(_Char___init__impl__6a9atx(48), _Char___init__impl__6a9atx(57)));
    var tmp$ret$4;
    // Inline function 'kotlin.collections.map' call
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp1_map = numberRangeToNumber(1, length);
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp1_map, 10));
    var inductionVariable = tmp1_map.v_1;
    var last = tmp1_map.w_1;
    if (inductionVariable <= last)
      do {
        var item = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        // Inline function 'eu.fbk.st.cryptoac.model.unit.Companion.generateRandomToken.<anonymous>' call
        tmp$ret$0 = Default_getInstance().r4(0, charPool.i());
        tmp0_mapTo.a(tmp$ret$0);
      }
       while (!(item === last));
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    var tmp3_map = tmp$ret$2;
    var tmp$ret$3;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp2_mapTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp3_map, 10));
    var tmp0_iterator = tmp3_map.f();
    while (tmp0_iterator.g()) {
      var item_0 = tmp0_iterator.h();
      tmp2_mapTo.a(charPool.j(item_0));
    }
    tmp$ret$3 = tmp2_mapTo;
    tmp$ret$4 = tmp$ret$3;
    return joinToString(tmp$ret$4, '');
  };
  protoOf(Companion_22).v50 = function (length, $super) {
    length = length === VOID ? 20 : length;
    return $super === VOID ? this.k51(length) : $super.k51.call(this, length);
  };
  protoOf(Companion_22).l51 = function (name, length) {
    var tmp;
    Constants_getInstance();
    if (name === 'admin') {
      Constants_getInstance();
      tmp = 'admin';
    } else {
      tmp = this.k51(length);
    }
    return tmp;
  };
  protoOf(Companion_22).h51 = function (name, length, $super) {
    length = length === VOID ? 20 : length;
    return $super === VOID ? this.l51(name, length) : $super.l51.call(this, name, length);
  };
  protoOf(Companion_22).p37 = function () {
    return _get_$cachedSerializer__te6jhj_7(this);
  };
  protoOf(Companion_22).h2u = function (typeParamsSerializers) {
    return this.p37();
  };
  var Companion_instance_22;
  function Companion_getInstance_27() {
    if (Companion_instance_22 == null)
      new Companion_22();
    return Companion_instance_22;
  }
  function UnitElement_init_$Init$(seen1, serializationConstructorMarker, $this) {
    Element_init_$Init$(seen1, serializationConstructorMarker, $this);
    return $this;
  }
  function UnitElement() {
    Companion_getInstance_27();
    Element.call(this);
  }
  protoOf(UnitElement).equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (!protoOf(Element).equals.call(this, other))
      return false;
    if (other instanceof UnitElement)
      other;
    else
      THROW_CCE();
    if (!(this.w50() === other.w50()))
      return false;
    if (!this.j3k().equals(other.j3k()))
      return false;
    return this.x50() === other.x50();
  };
  protoOf(UnitElement).hashCode = function () {
    var result = protoOf(Element).hashCode.call(this);
    result = imul(31, result) + getStringHashCode(this.w50()) | 0;
    result = imul(31, result) + this.j3k().hashCode() | 0;
    result = imul(31, result) + getStringHashCode(this.x50()) | 0;
    return result;
  };
  var UnitElementStatus_INCOMPLETE_instance;
  var UnitElementStatus_OPERATIONAL_instance;
  var UnitElementStatus_DELETED_instance;
  function values_8() {
    return [UnitElementStatus_INCOMPLETE_getInstance(), UnitElementStatus_OPERATIONAL_getInstance(), UnitElementStatus_DELETED_getInstance()];
  }
  var UnitElementStatus_entriesInitialized;
  function UnitElementStatus_initEntries() {
    if (UnitElementStatus_entriesInitialized)
      return Unit_getInstance();
    UnitElementStatus_entriesInitialized = true;
    UnitElementStatus_INCOMPLETE_instance = new UnitElementStatus('INCOMPLETE', 0);
    UnitElementStatus_OPERATIONAL_instance = new UnitElementStatus('OPERATIONAL', 1);
    UnitElementStatus_DELETED_instance = new UnitElementStatus('DELETED', 2);
  }
  function UnitElementStatus(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function UnitElementStatus_INCOMPLETE_getInstance() {
    UnitElementStatus_initEntries();
    return UnitElementStatus_INCOMPLETE_instance;
  }
  function UnitElementStatus_OPERATIONAL_getInstance() {
    UnitElementStatus_initEntries();
    return UnitElementStatus_OPERATIONAL_instance;
  }
  function UnitElementStatus_DELETED_getInstance() {
    UnitElementStatus_initEntries();
    return UnitElementStatus_DELETED_instance;
  }
  function _get_$cachedSerializer__te6jhj_8($this) {
    return $this.m51_1.q();
  }
  function UnitElementWithKeys$Companion$_anonymous__eg57jx() {
    var tmp = getKClass(UnitElementWithKeys);
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = [];
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return PolymorphicSerializer_init_$Create$(tmp, tmp$ret$2);
  }
  function Companion_23() {
    Companion_instance_23 = this;
    var tmp = this;
    var tmp_0 = LazyThreadSafetyMode_PUBLICATION_getInstance();
    tmp.m51_1 = lazy(tmp_0, UnitElementWithKeys$Companion$_anonymous__eg57jx);
  }
  protoOf(Companion_23).p37 = function () {
    return _get_$cachedSerializer__te6jhj_8(this);
  };
  protoOf(Companion_23).h2u = function (typeParamsSerializers) {
    return this.p37();
  };
  var Companion_instance_23;
  function Companion_getInstance_28() {
    if (Companion_instance_23 == null)
      new Companion_23();
    return Companion_instance_23;
  }
  function UnitElementWithKeys_init_$Init$(seen1, serializationConstructorMarker, $this) {
    UnitElement_init_$Init$(seen1, serializationConstructorMarker, $this);
    return $this;
  }
  function UnitElementWithKeys() {
    Companion_getInstance_28();
    UnitElement.call(this);
  }
  protoOf(UnitElementWithKeys).equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (!protoOf(UnitElement).equals.call(this, other))
      return false;
    if (other instanceof UnitElementWithKeys)
      other;
    else
      THROW_CCE();
    if (!equals(this.i51(), other.i51()))
      return false;
    return equals(this.j51(), other.j51());
  };
  protoOf(UnitElementWithKeys).hashCode = function () {
    var result = protoOf(UnitElement).hashCode.call(this);
    var tmp = imul(31, result);
    var tmp0_safe_receiver = this.i51();
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.hashCode();
    result = tmp + (tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs) | 0;
    var tmp_0 = imul(31, result);
    var tmp2_safe_receiver = this.j51();
    var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.hashCode();
    result = tmp_0 + (tmp3_elvis_lhs == null ? 0 : tmp3_elvis_lhs) | 0;
    return result;
  };
  function Companion_24() {
    Companion_instance_24 = this;
    var tmp = this;
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [null, createSimpleEnumSerializer('eu.fbk.st.cryptoac.model.unit.UnitElementStatus', values_8()), null, null, null, null];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp.n51_1 = tmp$ret$2;
  }
  var Companion_instance_24;
  function Companion_getInstance_29() {
    if (Companion_instance_24 == null)
      new Companion_24();
    return Companion_instance_24;
  }
  function $serializer_15() {
    $serializer_instance_15 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('eu.fbk.st.cryptoac.model.unit.User', this, 6);
    tmp0_serialDesc.h2t('name', false);
    tmp0_serialDesc.h2t('status', true);
    tmp0_serialDesc.h2t('asymEncKeys', true);
    tmp0_serialDesc.h2t('asymSigKeys', true);
    tmp0_serialDesc.h2t('isAdmin', true);
    tmp0_serialDesc.h2t('token', true);
    this.o51_1 = tmp0_serialDesc;
  }
  protoOf($serializer_15).s2i = function () {
    return this.o51_1;
  };
  protoOf($serializer_15).w2t = function () {
    var tmp0_cached = Companion_getInstance_29().n51_1;
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [StringSerializer_getInstance(), tmp0_cached[1], get_nullable($serializer_getInstance_4()), get_nullable($serializer_getInstance_4()), BooleanSerializer_getInstance(), StringSerializer_getInstance()];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  protoOf($serializer_15).u2i = function (decoder) {
    var tmp0_desc = this.o51_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = null;
    var tmp6_local2 = null;
    var tmp7_local3 = null;
    var tmp8_local4 = false;
    var tmp9_local5 = null;
    var tmp10_input = decoder.e2m(tmp0_desc);
    var tmp11_cached = Companion_getInstance_29().n51_1;
    if (tmp10_input.t2m()) {
      tmp4_local0 = tmp10_input.o2m(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp10_input.q2m(tmp0_desc, 1, tmp11_cached[1], tmp5_local1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp10_input.s2m(tmp0_desc, 2, $serializer_getInstance_4(), tmp6_local2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp10_input.s2m(tmp0_desc, 3, $serializer_getInstance_4(), tmp7_local3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
      tmp8_local4 = tmp10_input.g2m(tmp0_desc, 4);
      tmp3_bitMask0 = tmp3_bitMask0 | 16;
      tmp9_local5 = tmp10_input.o2m(tmp0_desc, 5);
      tmp3_bitMask0 = tmp3_bitMask0 | 32;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp10_input.u2m(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp10_input.o2m(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp10_input.q2m(tmp0_desc, 1, tmp11_cached[1], tmp5_local1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp10_input.s2m(tmp0_desc, 2, $serializer_getInstance_4(), tmp6_local2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp10_input.s2m(tmp0_desc, 3, $serializer_getInstance_4(), tmp7_local3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          case 4:
            tmp8_local4 = tmp10_input.g2m(tmp0_desc, 4);
            tmp3_bitMask0 = tmp3_bitMask0 | 16;
            break;
          case 5:
            tmp9_local5 = tmp10_input.o2m(tmp0_desc, 5);
            tmp3_bitMask0 = tmp3_bitMask0 | 32;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp10_input.f2m(tmp0_desc);
    return User_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, tmp9_local5, null);
  };
  protoOf($serializer_15).p51 = function (encoder, value) {
    var tmp0_desc = this.o51_1;
    var tmp1_output = encoder.e2m(tmp0_desc);
    var tmp2_cached = Companion_getInstance_29().n51_1;
    tmp1_output.s2n(tmp0_desc, 0, value.q51_1);
    if (tmp1_output.a2o(tmp0_desc, 1) ? true : !value.r51_1.equals(UnitElementStatus_INCOMPLETE_getInstance())) {
      tmp1_output.u2n(tmp0_desc, 1, tmp2_cached[1], value.r51_1);
    }
    if (tmp1_output.a2o(tmp0_desc, 2) ? true : !(value.s51_1 == null)) {
      tmp1_output.w2n(tmp0_desc, 2, $serializer_getInstance_4(), value.s51_1);
    }
    if (tmp1_output.a2o(tmp0_desc, 3) ? true : !(value.t51_1 == null)) {
      tmp1_output.w2n(tmp0_desc, 3, $serializer_getInstance_4(), value.t51_1);
    }
    if (tmp1_output.a2o(tmp0_desc, 4) ? true : !(value.u51_1 === false)) {
      tmp1_output.k2n(tmp0_desc, 4, value.u51_1);
    }
    if (tmp1_output.a2o(tmp0_desc, 5) ? true : !(value.v51_1 === Companion_getInstance_27().h51(value.q51_1))) {
      tmp1_output.s2n(tmp0_desc, 5, value.v51_1);
    }
    tmp1_output.f2m(tmp0_desc);
  };
  protoOf($serializer_15).t2i = function (encoder, value) {
    return this.p51(encoder, value instanceof User ? value : THROW_CCE());
  };
  var $serializer_instance_15;
  function $serializer_getInstance_15() {
    if ($serializer_instance_15 == null)
      new $serializer_15();
    return $serializer_instance_15;
  }
  function User_init_$Init$(seen1, name, status, asymEncKeys, asymSigKeys, isAdmin, token, serializationConstructorMarker, $this) {
    if (!(1 === (1 & seen1))) {
      throwMissingFieldException(seen1, 1, $serializer_getInstance_15().o51_1);
    }
    UnitElementWithKeys_init_$Init$(seen1, serializationConstructorMarker, $this);
    $this.q51_1 = name;
    if (0 === (seen1 & 2))
      $this.r51_1 = UnitElementStatus_INCOMPLETE_getInstance();
    else
      $this.r51_1 = status;
    if (0 === (seen1 & 4))
      $this.s51_1 = null;
    else
      $this.s51_1 = asymEncKeys;
    if (0 === (seen1 & 8))
      $this.t51_1 = null;
    else
      $this.t51_1 = asymSigKeys;
    if (0 === (seen1 & 16))
      $this.u51_1 = false;
    else
      $this.u51_1 = isAdmin;
    if (0 === (seen1 & 32))
      $this.v51_1 = Companion_getInstance_27().h51($this.q51_1);
    else
      $this.v51_1 = token;
    return $this;
  }
  function User_init_$Create$(seen1, name, status, asymEncKeys, asymSigKeys, isAdmin, token, serializationConstructorMarker) {
    return User_init_$Init$(seen1, name, status, asymEncKeys, asymSigKeys, isAdmin, token, serializationConstructorMarker, objectCreate(protoOf(User)));
  }
  function User(name, status, asymEncKeys, asymSigKeys, isAdmin) {
    Companion_getInstance_29();
    status = status === VOID ? UnitElementStatus_INCOMPLETE_getInstance() : status;
    asymEncKeys = asymEncKeys === VOID ? null : asymEncKeys;
    asymSigKeys = asymSigKeys === VOID ? null : asymSigKeys;
    isAdmin = isAdmin === VOID ? false : isAdmin;
    UnitElementWithKeys.call(this);
    this.q51_1 = name;
    this.r51_1 = status;
    this.s51_1 = asymEncKeys;
    this.t51_1 = asymSigKeys;
    this.u51_1 = isAdmin;
    this.v51_1 = Companion_getInstance_27().h51(this.q51_1);
  }
  protoOf(User).w50 = function () {
    return this.q51_1;
  };
  protoOf(User).j3k = function () {
    return this.r51_1;
  };
  protoOf(User).i51 = function () {
    return this.s51_1;
  };
  protoOf(User).j51 = function () {
    return this.t51_1;
  };
  protoOf(User).x50 = function () {
    return this.v51_1;
  };
  protoOf(User).vb = function () {
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [this.q51_1, this.r51_1.toString(), this.u51_1.toString(), this.v51_1];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  protoOf(User).equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !getKClassFromExpression(this).equals(getKClassFromExpression(other)))
      return false;
    if (!protoOf(UnitElementWithKeys).equals.call(this, other))
      return false;
    if (other instanceof User)
      other;
    else
      THROW_CCE();
    if (!(this.q51_1 === other.q51_1))
      return false;
    if (!this.r51_1.equals(other.r51_1))
      return false;
    if (!equals(this.s51_1, other.s51_1))
      return false;
    if (!equals(this.t51_1, other.t51_1))
      return false;
    if (!(this.u51_1 === other.u51_1))
      return false;
    return this.v51_1 === other.v51_1;
  };
  protoOf(User).hashCode = function () {
    var result = protoOf(UnitElementWithKeys).hashCode.call(this);
    result = imul(31, result) + getStringHashCode(this.q51_1) | 0;
    result = imul(31, result) + this.r51_1.hashCode() | 0;
    var tmp = imul(31, result);
    var tmp0_safe_receiver = this.s51_1;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.hashCode();
    result = tmp + (tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs) | 0;
    var tmp_0 = imul(31, result);
    var tmp2_safe_receiver = this.t51_1;
    var tmp3_elvis_lhs = tmp2_safe_receiver == null ? null : tmp2_safe_receiver.hashCode();
    result = tmp_0 + (tmp3_elvis_lhs == null ? 0 : tmp3_elvis_lhs) | 0;
    result = imul(31, result) + (this.u51_1 | 0) | 0;
    result = imul(31, result) + getStringHashCode(this.v51_1) | 0;
    return result;
  };
  function RMServiceParameters() {
  }
  function RMServiceRemoteUPParameters() {
  }
  var RMType_RBAC_CRYPTOAC_instance;
  var RMType_NONE_instance;
  function values_9() {
    return [RMType_RBAC_CRYPTOAC_getInstance(), RMType_NONE_getInstance()];
  }
  function valueOf_4(value) {
    switch (value) {
      case 'RBAC_CRYPTOAC':
        return RMType_RBAC_CRYPTOAC_getInstance();
      case 'NONE':
        return RMType_NONE_getInstance();
      default:
        RMType_initEntries();
        THROW_ISE();
        break;
    }
  }
  var RMType_entriesInitialized;
  function RMType_initEntries() {
    if (RMType_entriesInitialized)
      return Unit_getInstance();
    RMType_entriesInitialized = true;
    RMType_RBAC_CRYPTOAC_instance = new RMType('RBAC_CRYPTOAC', 0);
    RMType_NONE_instance = new RMType('NONE', 1);
  }
  function RMType(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function RMType_RBAC_CRYPTOAC_getInstance() {
    RMType_initEntries();
    return RMType_RBAC_CRYPTOAC_instance;
  }
  function RMType_NONE_getInstance() {
    RMType_initEntries();
    return RMType_NONE_instance;
  }
  function Companion_25() {
    Companion_instance_25 = this;
    var tmp = this;
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [null, null, null, null, createSimpleEnumSerializer('eu.fbk.st.cryptoac.rm.RMType', values_9())];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp.x51_1 = tmp$ret$2;
  }
  protoOf(Companion_25).a4v = function (parameters) {
    SERVER_getInstance();
    var tmp0_username = ensureNotNull(parameters.y1('Username'));
    SERVER_getInstance();
    var tmp1_port = toInt(ensureNotNull(parameters.y1('RM_Port')));
    SERVER_getInstance();
    var tmp2_url = ensureNotNull(parameters.y1('RM_URL'));
    SERVER_getInstance();
    var tmp3_password = ensureNotNull(parameters.y1('RM_Password'));
    return new RMServiceRBACCryptoACParameters(tmp0_username, tmp3_password, tmp1_port, tmp2_url);
  };
  protoOf(Companion_25).y51 = function (parameters) {
    SERVER_getInstance();
    var tmp1_name = 'RM_URL';
    SERVER_getInstance();
    var tmp2_label = replace('RM_URL', '_', ' ');
    var tmp3_type = InputType_text_getInstance();
    var tmp0_safe_receiver = parameters;
    var tmp4_defaultValue = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.c52_1;
    var tmp = new CryptoACFormField(tmp1_name, tmp2_label, tmp3_type, VOID, tmp4_defaultValue, 'darkTextField');
    SERVER_getInstance();
    var tmp6_name = 'RM_Password';
    SERVER_getInstance();
    var tmp7_label = replace('RM_Password', '_', ' ');
    var tmp8_type = InputType_password_getInstance();
    var tmp5_safe_receiver = parameters;
    var tmp9_defaultValue = tmp5_safe_receiver == null ? null : tmp5_safe_receiver.a52_1;
    var tmp_0 = new CryptoACFormField(tmp6_name, tmp7_label, tmp8_type, VOID, tmp9_defaultValue, 'darkTextField');
    SERVER_getInstance();
    var tmp11_name = 'RM_Port';
    SERVER_getInstance();
    var tmp12_label = replace('RM_Port', '_', ' ');
    var tmp13_type = InputType_number_getInstance();
    var tmp10_safe_receiver = parameters;
    var tmp14_defaultValue = toString(tmp10_safe_receiver == null ? null : tmp10_safe_receiver.b52_1);
    return listOf_0(listOf([tmp, tmp_0, new CryptoACFormField(tmp11_name, tmp12_label, tmp13_type, VOID, tmp14_defaultValue, 'darkTextField')]));
  };
  var Companion_instance_25;
  function Companion_getInstance_30() {
    if (Companion_instance_25 == null)
      new Companion_25();
    return Companion_instance_25;
  }
  function $serializer_16() {
    $serializer_instance_16 = this;
    var tmp0_serialDesc = new PluginGeneratedSerialDescriptor('eu.fbk.st.cryptoac.rm.cryptoac.RMServiceRBACCryptoACParameters', this, 5);
    tmp0_serialDesc.h2t('username', false);
    tmp0_serialDesc.h2t('password', false);
    tmp0_serialDesc.h2t('port', false);
    tmp0_serialDesc.h2t('url', false);
    tmp0_serialDesc.h2t('rmType', true);
    this.e52_1 = tmp0_serialDesc;
  }
  protoOf($serializer_16).s2i = function () {
    return this.e52_1;
  };
  protoOf($serializer_16).w2t = function () {
    var tmp0_cached = Companion_getInstance_30().x51_1;
    var tmp$ret$2;
    // Inline function 'kotlin.arrayOf' call
    var tmp0_arrayOf = [StringSerializer_getInstance(), StringSerializer_getInstance(), IntSerializer_getInstance(), StringSerializer_getInstance(), tmp0_cached[4]];
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_arrayOf;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  };
  protoOf($serializer_16).u2i = function (decoder) {
    var tmp0_desc = this.e52_1;
    var tmp1_flag = true;
    var tmp2_index = 0;
    var tmp3_bitMask0 = 0;
    var tmp4_local0 = null;
    var tmp5_local1 = null;
    var tmp6_local2 = 0;
    var tmp7_local3 = null;
    var tmp8_local4 = null;
    var tmp9_input = decoder.e2m(tmp0_desc);
    var tmp10_cached = Companion_getInstance_30().x51_1;
    if (tmp9_input.t2m()) {
      tmp4_local0 = tmp9_input.o2m(tmp0_desc, 0);
      tmp3_bitMask0 = tmp3_bitMask0 | 1;
      tmp5_local1 = tmp9_input.o2m(tmp0_desc, 1);
      tmp3_bitMask0 = tmp3_bitMask0 | 2;
      tmp6_local2 = tmp9_input.j2m(tmp0_desc, 2);
      tmp3_bitMask0 = tmp3_bitMask0 | 4;
      tmp7_local3 = tmp9_input.o2m(tmp0_desc, 3);
      tmp3_bitMask0 = tmp3_bitMask0 | 8;
      tmp8_local4 = tmp9_input.q2m(tmp0_desc, 4, tmp10_cached[4], tmp8_local4);
      tmp3_bitMask0 = tmp3_bitMask0 | 16;
    } else
      while (tmp1_flag) {
        tmp2_index = tmp9_input.u2m(tmp0_desc);
        switch (tmp2_index) {
          case -1:
            tmp1_flag = false;
            break;
          case 0:
            tmp4_local0 = tmp9_input.o2m(tmp0_desc, 0);
            tmp3_bitMask0 = tmp3_bitMask0 | 1;
            break;
          case 1:
            tmp5_local1 = tmp9_input.o2m(tmp0_desc, 1);
            tmp3_bitMask0 = tmp3_bitMask0 | 2;
            break;
          case 2:
            tmp6_local2 = tmp9_input.j2m(tmp0_desc, 2);
            tmp3_bitMask0 = tmp3_bitMask0 | 4;
            break;
          case 3:
            tmp7_local3 = tmp9_input.o2m(tmp0_desc, 3);
            tmp3_bitMask0 = tmp3_bitMask0 | 8;
            break;
          case 4:
            tmp8_local4 = tmp9_input.q2m(tmp0_desc, 4, tmp10_cached[4], tmp8_local4);
            tmp3_bitMask0 = tmp3_bitMask0 | 16;
            break;
          default:
            throw UnknownFieldException_init_$Create$(tmp2_index);
        }
      }
    tmp9_input.f2m(tmp0_desc);
    return RMServiceRBACCryptoACParameters_init_$Create$(tmp3_bitMask0, tmp4_local0, tmp5_local1, tmp6_local2, tmp7_local3, tmp8_local4, null);
  };
  protoOf($serializer_16).f52 = function (encoder, value) {
    var tmp0_desc = this.e52_1;
    var tmp1_output = encoder.e2m(tmp0_desc);
    var tmp2_cached = Companion_getInstance_30().x51_1;
    tmp1_output.s2n(tmp0_desc, 0, value.z51_1);
    tmp1_output.s2n(tmp0_desc, 1, value.a52_1);
    tmp1_output.n2n(tmp0_desc, 2, value.b52_1);
    tmp1_output.s2n(tmp0_desc, 3, value.c52_1);
    if (tmp1_output.a2o(tmp0_desc, 4) ? true : !value.d52_1.equals(RMType_RBAC_CRYPTOAC_getInstance())) {
      tmp1_output.u2n(tmp0_desc, 4, tmp2_cached[4], value.d52_1);
    }
    tmp1_output.f2m(tmp0_desc);
  };
  protoOf($serializer_16).t2i = function (encoder, value) {
    return this.f52(encoder, value instanceof RMServiceRBACCryptoACParameters ? value : THROW_CCE());
  };
  var $serializer_instance_16;
  function $serializer_getInstance_16() {
    if ($serializer_instance_16 == null)
      new $serializer_16();
    return $serializer_instance_16;
  }
  function RMServiceRBACCryptoACParameters_init_$Init$(seen1, username, password, port, url, rmType, serializationConstructorMarker, $this) {
    if (!(15 === (15 & seen1))) {
      throwMissingFieldException(seen1, 15, $serializer_getInstance_16().e52_1);
    }
    $this.z51_1 = username;
    $this.a52_1 = password;
    $this.b52_1 = port;
    $this.c52_1 = url;
    if (0 === (seen1 & 16))
      $this.d52_1 = RMType_RBAC_CRYPTOAC_getInstance();
    else
      $this.d52_1 = rmType;
    return $this;
  }
  function RMServiceRBACCryptoACParameters_init_$Create$(seen1, username, password, port, url, rmType, serializationConstructorMarker) {
    return RMServiceRBACCryptoACParameters_init_$Init$(seen1, username, password, port, url, rmType, serializationConstructorMarker, objectCreate(protoOf(RMServiceRBACCryptoACParameters)));
  }
  function RMServiceRBACCryptoACParameters(username, password, port, url) {
    Companion_getInstance_30();
    this.z51_1 = username;
    this.a52_1 = password;
    this.b52_1 = port;
    this.c52_1 = url;
    this.d52_1 = RMType_RBAC_CRYPTOAC_getInstance();
  }
  protoOf(RMServiceRBACCryptoACParameters).w51 = function () {
    return this.d52_1;
  };
  protoOf(RMServiceRBACCryptoACParameters).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof RMServiceRBACCryptoACParameters))
      return false;
    if (!(this.z51_1 === other.z51_1))
      return false;
    if (!(this.a52_1 === other.a52_1))
      return false;
    if (!(this.b52_1 === other.b52_1))
      return false;
    if (!(this.c52_1 === other.c52_1))
      return false;
    if (!this.d52_1.equals(other.d52_1))
      return false;
    return true;
  };
  protoOf(RMServiceRBACCryptoACParameters).hashCode = function () {
    var result = getStringHashCode(this.z51_1);
    result = imul(31, result) + getStringHashCode(this.a52_1) | 0;
    result = imul(31, result) + this.b52_1 | 0;
    result = imul(31, result) + getStringHashCode(this.c52_1) | 0;
    result = imul(31, result) + this.d52_1.hashCode() | 0;
    return result;
  };
  function get_logger() {
    _init_properties_App_kt__fk8usv();
    return logger_0;
  }
  var logger_0;
  function get_App() {
    _init_properties_App_kt__fk8usv();
    return App;
  }
  var App;
  function AppState$_init_$lambda_zi38h1($this$HttpClient) {
    $this$HttpClient.i3i_1 = false;
    $this$HttpClient.r3i(Plugin_getInstance());
    $this$HttpClient.r3i(Companion_getInstance_0());
    var tmp = Plugin_getInstance_0();
    $this$HttpClient.d3j(tmp, AppState$_init_$lambda$lambda_enkoti);
    return Unit_getInstance();
  }
  function AppState$_init_$lambda$lambda_enkoti($this$install) {
    json($this$install, get_myJson());
    return Unit_getInstance();
  }
  function AppState(userIsLoggedState, usernameState, httpClientState, coreTypeState, userProfilesState, sidebarButtonsForCoreTypesState, sidebarButtonIndexState, backdropIsOpenState, alertMessageState, alertSeverityState, alertIsOpenState, tablesState, uiTypeState, sidebarIsCollapsedState, circularProgressValueState, tradeOffBoardScenarioState, tradeOffBoardAlgorithmState, tradeOffBoardMetricState) {
    userIsLoggedState = userIsLoggedState === VOID ? false : userIsLoggedState;
    usernameState = usernameState === VOID ? '' : usernameState;
    var tmp;
    if (httpClientState === VOID) {
      tmp = HttpClient(AppState$_init_$lambda_zi38h1);
    } else {
      tmp = httpClientState;
    }
    httpClientState = tmp;
    coreTypeState = coreTypeState === VOID ? CoreType_RBAC_AT_REST_getInstance() : coreTypeState;
    var tmp_0;
    if (userProfilesState === VOID) {
      var tmp$ret$0;
      var tmp$ret$0_0;
      // Inline function 'kotlin.collections.hashMapOf' call
      tmp$ret$0 = HashMap_init_$Create$();
      tmp$ret$0_0 = Unit_getInstance();
      tmp_0 = tmp$ret$0;
    } else {
      tmp_0 = userProfilesState;
    }
    userProfilesState = tmp_0;
    var tmp_1;
    if (sidebarButtonsForCoreTypesState === VOID) {
      var tmp$ret$0_1;
      var tmp$ret$1;
      // Inline function 'kotlin.collections.listOf' call
      tmp$ret$0_1 = emptyList();
      tmp$ret$1 = Unit_getInstance();
      tmp_1 = tmp$ret$0_1;
    } else {
      tmp_1 = sidebarButtonsForCoreTypesState;
    }
    sidebarButtonsForCoreTypesState = tmp_1;
    sidebarButtonIndexState = sidebarButtonIndexState === VOID ? 0 : sidebarButtonIndexState;
    backdropIsOpenState = backdropIsOpenState === VOID ? false : backdropIsOpenState;
    alertMessageState = alertMessageState === VOID ? '' : alertMessageState;
    alertSeverityState = alertSeverityState === VOID ? CryptoACAlertSeverity_SUCCESS_getInstance() : alertSeverityState;
    alertIsOpenState = alertIsOpenState === VOID ? false : alertIsOpenState;
    var tmp_2;
    if (tablesState === VOID) {
      var tmp$ret$0_2;
      var tmp$ret$2;
      // Inline function 'kotlin.collections.mutableListOf' call
      tmp$ret$0_2 = ArrayList_init_$Create$();
      tmp$ret$2 = Unit_getInstance();
      tmp_2 = tmp$ret$0_2;
    } else {
      tmp_2 = tablesState;
    }
    tablesState = tmp_2;
    uiTypeState = uiTypeState === VOID ? UIType_NewProfile_getInstance() : uiTypeState;
    sidebarIsCollapsedState = sidebarIsCollapsedState === VOID ? false : sidebarIsCollapsedState;
    circularProgressValueState = circularProgressValueState === VOID ? 0 : circularProgressValueState;
    tradeOffBoardScenarioState = tradeOffBoardScenarioState === VOID ? Scenario_CryptoAC_getInstance() : tradeOffBoardScenarioState;
    tradeOffBoardAlgorithmState = tradeOffBoardAlgorithmState === VOID ? Algorithm_Best_getInstance() : tradeOffBoardAlgorithmState;
    tradeOffBoardMetricState = tradeOffBoardMetricState === VOID ? Metric_Goals_getInstance() : tradeOffBoardMetricState;
    this.g52_1 = userIsLoggedState;
    this.h52_1 = usernameState;
    this.i52_1 = httpClientState;
    this.j52_1 = coreTypeState;
    this.k52_1 = userProfilesState;
    this.l52_1 = sidebarButtonsForCoreTypesState;
    this.m52_1 = sidebarButtonIndexState;
    this.n52_1 = backdropIsOpenState;
    this.o52_1 = alertMessageState;
    this.p52_1 = alertSeverityState;
    this.q52_1 = alertIsOpenState;
    this.r52_1 = tablesState;
    this.s52_1 = uiTypeState;
    this.t52_1 = sidebarIsCollapsedState;
    this.u52_1 = circularProgressValueState;
    this.v52_1 = tradeOffBoardScenarioState;
    this.w52_1 = tradeOffBoardAlgorithmState;
    this.x52_1 = tradeOffBoardMetricState;
  }
  protoOf(AppState).y52 = function (userIsLoggedState, usernameState, httpClientState, coreTypeState, userProfilesState, sidebarButtonsForCoreTypesState, sidebarButtonIndexState, backdropIsOpenState, alertMessageState, alertSeverityState, alertIsOpenState, tablesState, uiTypeState, sidebarIsCollapsedState, circularProgressValueState, tradeOffBoardScenarioState, tradeOffBoardAlgorithmState, tradeOffBoardMetricState) {
    return new AppState(userIsLoggedState, usernameState, httpClientState, coreTypeState, userProfilesState, sidebarButtonsForCoreTypesState, sidebarButtonIndexState, backdropIsOpenState, alertMessageState, alertSeverityState, alertIsOpenState, tablesState, uiTypeState, sidebarIsCollapsedState, circularProgressValueState, tradeOffBoardScenarioState, tradeOffBoardAlgorithmState, tradeOffBoardMetricState);
  };
  protoOf(AppState).z52 = function (userIsLoggedState, usernameState, httpClientState, coreTypeState, userProfilesState, sidebarButtonsForCoreTypesState, sidebarButtonIndexState, backdropIsOpenState, alertMessageState, alertSeverityState, alertIsOpenState, tablesState, uiTypeState, sidebarIsCollapsedState, circularProgressValueState, tradeOffBoardScenarioState, tradeOffBoardAlgorithmState, tradeOffBoardMetricState, $super) {
    userIsLoggedState = userIsLoggedState === VOID ? this.g52_1 : userIsLoggedState;
    usernameState = usernameState === VOID ? this.h52_1 : usernameState;
    httpClientState = httpClientState === VOID ? this.i52_1 : httpClientState;
    coreTypeState = coreTypeState === VOID ? this.j52_1 : coreTypeState;
    userProfilesState = userProfilesState === VOID ? this.k52_1 : userProfilesState;
    sidebarButtonsForCoreTypesState = sidebarButtonsForCoreTypesState === VOID ? this.l52_1 : sidebarButtonsForCoreTypesState;
    sidebarButtonIndexState = sidebarButtonIndexState === VOID ? this.m52_1 : sidebarButtonIndexState;
    backdropIsOpenState = backdropIsOpenState === VOID ? this.n52_1 : backdropIsOpenState;
    alertMessageState = alertMessageState === VOID ? this.o52_1 : alertMessageState;
    alertSeverityState = alertSeverityState === VOID ? this.p52_1 : alertSeverityState;
    alertIsOpenState = alertIsOpenState === VOID ? this.q52_1 : alertIsOpenState;
    tablesState = tablesState === VOID ? this.r52_1 : tablesState;
    uiTypeState = uiTypeState === VOID ? this.s52_1 : uiTypeState;
    sidebarIsCollapsedState = sidebarIsCollapsedState === VOID ? this.t52_1 : sidebarIsCollapsedState;
    circularProgressValueState = circularProgressValueState === VOID ? this.u52_1 : circularProgressValueState;
    tradeOffBoardScenarioState = tradeOffBoardScenarioState === VOID ? this.v52_1 : tradeOffBoardScenarioState;
    tradeOffBoardAlgorithmState = tradeOffBoardAlgorithmState === VOID ? this.w52_1 : tradeOffBoardAlgorithmState;
    tradeOffBoardMetricState = tradeOffBoardMetricState === VOID ? this.x52_1 : tradeOffBoardMetricState;
    return $super === VOID ? this.y52(userIsLoggedState, usernameState, httpClientState, coreTypeState, userProfilesState, sidebarButtonsForCoreTypesState, sidebarButtonIndexState, backdropIsOpenState, alertMessageState, alertSeverityState, alertIsOpenState, tablesState, uiTypeState, sidebarIsCollapsedState, circularProgressValueState, tradeOffBoardScenarioState, tradeOffBoardAlgorithmState, tradeOffBoardMetricState) : $super.y52.call(this, userIsLoggedState, usernameState, httpClientState, coreTypeState, userProfilesState, sidebarButtonsForCoreTypesState, sidebarButtonIndexState, backdropIsOpenState, alertMessageState, alertSeverityState, alertIsOpenState, tablesState, uiTypeState, sidebarIsCollapsedState, circularProgressValueState, tradeOffBoardScenarioState, tradeOffBoardAlgorithmState, tradeOffBoardMetricState);
  };
  protoOf(AppState).toString = function () {
    return 'AppState(userIsLoggedState=' + this.g52_1 + ', usernameState=' + this.h52_1 + ', httpClientState=' + this.i52_1 + ', coreTypeState=' + this.j52_1 + ', userProfilesState=' + this.k52_1 + ', sidebarButtonsForCoreTypesState=' + this.l52_1 + ', sidebarButtonIndexState=' + this.m52_1 + ', backdropIsOpenState=' + this.n52_1 + ', alertMessageState=' + this.o52_1 + ', alertSeverityState=' + this.p52_1 + ', alertIsOpenState=' + this.q52_1 + ', tablesState=' + this.r52_1 + ', uiTypeState=' + this.s52_1 + ', sidebarIsCollapsedState=' + this.t52_1 + ', circularProgressValueState=' + this.u52_1 + ', tradeOffBoardScenarioState=' + this.v52_1 + ', tradeOffBoardAlgorithmState=' + this.w52_1 + ', tradeOffBoardMetricState=' + this.x52_1 + ')';
  };
  protoOf(AppState).hashCode = function () {
    var result = this.g52_1 | 0;
    result = imul(result, 31) + getStringHashCode(this.h52_1) | 0;
    result = imul(result, 31) + hashCode(this.i52_1) | 0;
    result = imul(result, 31) + this.j52_1.hashCode() | 0;
    result = imul(result, 31) + this.k52_1.hashCode() | 0;
    result = imul(result, 31) + hashCode(this.l52_1) | 0;
    result = imul(result, 31) + this.m52_1 | 0;
    result = imul(result, 31) + (this.n52_1 | 0) | 0;
    result = imul(result, 31) + getStringHashCode(this.o52_1) | 0;
    result = imul(result, 31) + this.p52_1.hashCode() | 0;
    result = imul(result, 31) + (this.q52_1 | 0) | 0;
    result = imul(result, 31) + hashCode(this.r52_1) | 0;
    result = imul(result, 31) + this.s52_1.hashCode() | 0;
    result = imul(result, 31) + (this.t52_1 | 0) | 0;
    result = imul(result, 31) + this.u52_1 | 0;
    result = imul(result, 31) + this.v52_1.hashCode() | 0;
    result = imul(result, 31) + this.w52_1.hashCode() | 0;
    result = imul(result, 31) + this.x52_1.hashCode() | 0;
    return result;
  };
  protoOf(AppState).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof AppState))
      return false;
    var tmp0_other_with_cast = other instanceof AppState ? other : THROW_CCE();
    if (!(this.g52_1 === tmp0_other_with_cast.g52_1))
      return false;
    if (!(this.h52_1 === tmp0_other_with_cast.h52_1))
      return false;
    if (!equals(this.i52_1, tmp0_other_with_cast.i52_1))
      return false;
    if (!this.j52_1.equals(tmp0_other_with_cast.j52_1))
      return false;
    if (!this.k52_1.equals(tmp0_other_with_cast.k52_1))
      return false;
    if (!equals(this.l52_1, tmp0_other_with_cast.l52_1))
      return false;
    if (!(this.m52_1 === tmp0_other_with_cast.m52_1))
      return false;
    if (!(this.n52_1 === tmp0_other_with_cast.n52_1))
      return false;
    if (!(this.o52_1 === tmp0_other_with_cast.o52_1))
      return false;
    if (!this.p52_1.equals(tmp0_other_with_cast.p52_1))
      return false;
    if (!(this.q52_1 === tmp0_other_with_cast.q52_1))
      return false;
    if (!equals(this.r52_1, tmp0_other_with_cast.r52_1))
      return false;
    if (!this.s52_1.equals(tmp0_other_with_cast.s52_1))
      return false;
    if (!(this.t52_1 === tmp0_other_with_cast.t52_1))
      return false;
    if (!(this.u52_1 === tmp0_other_with_cast.u52_1))
      return false;
    if (!this.v52_1.equals(tmp0_other_with_cast.v52_1))
      return false;
    if (!this.w52_1.equals(tmp0_other_with_cast.w52_1))
      return false;
    if (!this.x52_1.equals(tmp0_other_with_cast.x52_1))
      return false;
    return true;
  };
  function profileWasCreatedOrModified(state, newCoreType, $completion) {
    var tmp = new $profileWasCreatedOrModifiedCOROUTINE$1(state, newCoreType, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  }
  function resetAppState(state, $completion) {
    var tmp = new $resetAppStateCOROUTINE$2(state, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  }
  function submitLogin(state, method, endpoint, values, $completion) {
    var tmp = new $submitLoginCOROUTINE$3(state, method, endpoint, values, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  }
  function submitLogout(state, $completion) {
    var tmp = new $submitLogoutCOROUTINE$4(state, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  }
  function displayAlert(state, code, severity) {
    _init_properties_App_kt__fk8usv();
    var tmp = get_logger();
    tmp.h4r(displayAlert$lambda(code, severity));
    state.q52_1 = true;
    state.o52_1 = code.g4t() + (' (Code ' + code.f4t() + ')');
    state.p52_1 = severity;
  }
  function addTableInContent(state, tableName) {
    _init_properties_App_kt__fk8usv();
    var tmp = get_logger();
    tmp.h4r(addTableInContent$lambda(tableName));
    state.r52_1.a(tableName);
  }
  function changeUIType(state, newUIType) {
    _init_properties_App_kt__fk8usv();
    var tmp = get_logger();
    tmp.h4r(changeUIType$lambda(newUIType));
    state.s52_1 = newUIType;
  }
  function changeCoreType(state, newCoreType) {
    _init_properties_App_kt__fk8usv();
    var tmp = get_logger();
    tmp.h4r(changeCoreType$lambda(newCoreType));
    state.j52_1 = newCoreType;
  }
  function changeBackdropIsOpen(state, newBackdropIsOpen) {
    _init_properties_App_kt__fk8usv();
    var tmp = get_logger();
    tmp.h4r(changeBackdropIsOpen$lambda(newBackdropIsOpen));
    if (!newBackdropIsOpen) {
      changeCircularProgressValue(state, 0);
    }
    state.n52_1 = newBackdropIsOpen;
  }
  function changeCircularProgressValue(state, newCircularProgressValue) {
    _init_properties_App_kt__fk8usv();
    var tmp = get_logger();
    tmp.h4r(changeCircularProgressValue$lambda(newCircularProgressValue));
    state.u52_1 = newCircularProgressValue;
  }
  function changeUserIsLogged(state, newUserIsLogged, $completion) {
    var tmp = new $changeUserIsLoggedCOROUTINE$5(state, newUserIsLogged, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  }
  function computeSidebarButtonsAndIndex(state, profiles) {
    _init_properties_App_kt__fk8usv();
    var tmp = get_logger();
    tmp.h4r(computeSidebarButtonsAndIndex$lambda);
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp$ret$0 = ArrayList_init_$Create$();
    var listOfCoreTypes = tmp$ret$0;
    var loopCount = 2;
    var indexButton = {_v: loopCount};
    // Inline function 'kotlin.collections.forEach' call
    var tmp$ret$1;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$1 = profiles.o().f();
    var tmp0_iterator = tmp$ret$1;
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      // Inline function 'eu.fbk.st.cryptoac.view.computeSidebarButtonsAndIndex.<anonymous>' call
      var newCoreType = element.p();
      if (newCoreType.equals(state.j52_1)) {
        indexButton._v = loopCount;
      }
      loopCount = loopCount + 1 | 0;
      listOfCoreTypes.a(newCoreType);
    }
    var tmp_0 = get_logger();
    tmp_0.h4r(computeSidebarButtonsAndIndex$lambda_0(listOfCoreTypes));
    var tmp_1 = get_logger();
    tmp_1.h4r(computeSidebarButtonsAndIndex$lambda_1(indexButton));
    state.l52_1 = listOfCoreTypes;
    state.m52_1 = indexButton._v;
  }
  function getIconByCoreType(state, coreType) {
    _init_properties_App_kt__fk8usv();
    var jsonStyle = JSON.parse(trimMargin('{"marginRight": "' + (state.t52_1 ? 'unset' : 'auto') + ' "}'));
    return create(FC(getIconByCoreType$lambda(coreType, jsonStyle)));
  }
  function changeUsername(state, newUsername) {
    _init_properties_App_kt__fk8usv();
    var tmp = get_logger();
    tmp.h4r(changeUsername$lambda(newUsername));
    state.h52_1 = newUsername;
  }
  function changeTradeOffBoardAlgorithm(state, newTradeOffBoardAlgorithm) {
    _init_properties_App_kt__fk8usv();
    var tmp = get_logger();
    tmp.h4r(changeTradeOffBoardAlgorithm$lambda(newTradeOffBoardAlgorithm));
    state.w52_1 = newTradeOffBoardAlgorithm;
  }
  function changeTradeOffBoardMetric(state, newTradeOffBoardMetric) {
    _init_properties_App_kt__fk8usv();
    var tmp = get_logger();
    tmp.h4r(changeTradeOffBoardMetric$lambda(newTradeOffBoardMetric));
    state.x52_1 = newTradeOffBoardMetric;
  }
  function changeTradeOffBoardScenario(state, newTradeOffBoardScenario) {
    _init_properties_App_kt__fk8usv();
    var tmp = get_logger();
    tmp.h4r(changeTradeOffBoardScenario$lambda(newTradeOffBoardScenario));
    state.v52_1 = newTradeOffBoardScenario;
  }
  function toggleSidebarIsCollapsed(state) {
    _init_properties_App_kt__fk8usv();
    var collapsed = !state.t52_1;
    var tmp = get_logger();
    tmp.h4r(toggleSidebarIsCollapsed$lambda(collapsed));
    state.t52_1 = collapsed;
  }
  function getProfileFromCryptoAC(state, username, coreType, $completion) {
    username = username === VOID ? state.h52_1 : username;
    coreType = coreType === VOID ? state.j52_1 : coreType;
    var tmp = new $getProfileFromCryptoACCOROUTINE$6(state, username, coreType, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  }
  var UIType_NewProfile_instance;
  var UIType_TradeOffBoard_instance;
  var UIType_CoreType_instance;
  var UIType_entriesInitialized;
  function UIType_initEntries() {
    if (UIType_entriesInitialized)
      return Unit_getInstance();
    UIType_entriesInitialized = true;
    UIType_NewProfile_instance = new UIType('NewProfile', 0);
    UIType_TradeOffBoard_instance = new UIType('TradeOffBoard', 1);
    UIType_CoreType_instance = new UIType('CoreType', 2);
  }
  function UIType(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function logger$lambda_0() {
    _init_properties_App_kt__fk8usv();
    return Unit_getInstance();
  }
  function App$lambda($this$FC, it) {
    _init_properties_App_kt__fk8usv();
    var state$delegate = useState(new AppState());
    var tmp$ret$3;
    // Inline function 'react.dom.html.ReactHTML.div' call
    var tmp0__get_div__2k2o9m = ReactHTML_getInstance();
    var tmp$ret$2;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = 'div';
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    var tmp = tmp$ret$3;
    $this$FC.x4r(tmp, App$lambda$lambda(state$delegate));
    var tmp_0 = get_CryptoACAlert();
    $this$FC.x4r(tmp_0, App$lambda$lambda_0(state$delegate));
    if (invoke$lambda(state$delegate).g52_1) {
      var tmp$ret$7;
      // Inline function 'react.dom.html.ReactHTML.div' call
      var tmp1__get_div__r5s89x = ReactHTML_getInstance();
      var tmp$ret$6;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = 'div';
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      tmp$ret$7 = tmp$ret$6;
      var tmp_1 = tmp$ret$7;
      $this$FC.x4r(tmp_1, App$lambda$lambda_1(state$delegate));
    } else {
      var tmp_2 = get_Login();
      $this$FC.x4r(tmp_2, App$lambda$lambda_2(state$delegate));
    }
    return Unit_getInstance();
  }
  function invoke$lambda($state$delegate) {
    _init_properties_App_kt__fk8usv();
    var tmp$ret$2;
    // Inline function 'react.StateInstance.getValue' call
    var tmp1_getValue = getLocalDelegateReference('state', KMutableProperty0, true, function () {
      return THROW_ISE();
    });
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = $state$delegate;
    var tmp0_unsafeCast = tmp$ret$0[0];
    tmp$ret$1 = tmp0_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  }
  function invoke$lambda_0($state$delegate, value) {
    _init_properties_App_kt__fk8usv();
    var tmp1_setValue = getLocalDelegateReference('state', KMutableProperty0, true, function () {
      return THROW_ISE();
    });
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = $state$delegate;
    var tmp0_unsafeCast = tmp$ret$0[1];
    tmp$ret$1 = tmp0_unsafeCast;
    return tmp$ret$1(value);
  }
  function App$lambda$lambda$lambda$lambda($state$delegate) {
    return function ($this$invoke) {
      var tmp;
      if (!(invoke$lambda($state$delegate).u52_1 === 0)) {
        $this$invoke.value = invoke$lambda($state$delegate).u52_1;
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.open = invoke$lambda($state$delegate).n52_1;
      var tmp = CircularProgress;
      $this$invoke.x4r(tmp, App$lambda$lambda$lambda$lambda($state$delegate));
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda($state$delegate) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$6;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$5;
      // Inline function 'js.core.jso' call
      var tmp$ret$4;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.App.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'csstype.integer' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = 10;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.zIndex = tmp$ret$3;
      tmp0_apply.position = (/*union*/{absolute: 'absolute', fixed: 'fixed', relative: 'relative', static: 'static', sticky: 'sticky'}/*union*/).relative;
      tmp$ret$4 = tmp0_apply;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = css(tmp$ret$5);
      tmp1_css.className = tmp$ret$6;
      var tmp = Backdrop;
      $this$invoke.x4r(tmp, App$lambda$lambda$lambda($state$delegate));
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda_0($state$delegate) {
    return function (it) {
      invoke$lambda_0($state$delegate, invoke$lambda($state$delegate).z52(VOID, VOID, VOID, VOID, VOID, VOID, VOID, VOID, VOID, VOID, false));
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda_0($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.severityProp = invoke$lambda($state$delegate).p52_1;
      $this$invoke.messageProp = invoke$lambda($state$delegate).o52_1;
      $this$invoke.openProp = invoke$lambda($state$delegate).q52_1;
      $this$invoke.handleCloseProp = App$lambda$lambda$lambda_0($state$delegate);
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$3;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$2;
      // Inline function 'js.core.jso' call
      var tmp$ret$1;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.App.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      tmp0_apply.marginTop = (/*union*/{auto: 'auto'}/*union*/).auto;
      tmp$ret$1 = tmp0_apply;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = css(tmp$ret$2);
      tmp1_css.className = tmp$ret$3;
      $this$invoke.w4r('Hello, ' + invoke$lambda($state$delegate).h52_1);
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$slambda($state$delegate, resultContinuation) {
    this.q56_1 = $state$delegate;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$slambda).f1e = function ($this$launch, $completion) {
    var tmp = this.g1e($this$launch, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  };
  protoOf(App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$slambda).si = function (p1, $completion) {
    return this.f1e((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$slambda).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 2;
            this.xh_1 = 1;
            suspendResult = submitLogout(invoke$lambda(this.q56_1), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            invoke$lambda_0(this.q56_1, invoke$lambda(this.q56_1).z52());
            return Unit_getInstance();
          case 2:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 2) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  protoOf(App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$slambda).g1e = function ($this$launch, completion) {
    var i = new App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$slambda(this.q56_1, completion);
    i.r56_1 = $this$launch;
    return i;
  };
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$slambda_0($state$delegate, resultContinuation) {
    var i = new App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$slambda($state$delegate, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.f1e($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate) {
    return function (it) {
      var tmp = MainScope();
      launch(tmp, VOID, VOID, App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$slambda_0($state$delegate, null));
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($this$invoke) {
    _init_properties_App_kt__fk8usv();
    return Unit_getInstance();
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.size = 'small';
      $this$invoke.label = 'logout';
      $this$invoke.style = JSON.parse('{\n                                     "marginLeft": "auto"\n                                 }');
      $this$invoke.onClick = App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate);
      var tmp = FaDoorOpen;
      $this$invoke.x4r(tmp, App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0);
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda_0($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.title = 'Logout';
      var tmp = IconButton;
      $this$invoke.x4r(tmp, App$lambda$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate));
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda($state$delegate) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$12;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$11;
      // Inline function 'js.core.jso' call
      var tmp$ret$10;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.App.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      tmp0_apply.display = (/*union*/{block: 'block', inline: 'inline', runIn: 'run-in', flex: 'flex', flow: 'flow', flowRoot: 'flow-root', grid: 'grid', ruby: 'ruby', table: 'table', rubyBase: 'ruby-base', rubyBaseContainer: 'ruby-base-container', rubyText: 'ruby-text', rubyTextContainer: 'ruby-text-container', tableCaption: 'table-caption', tableCell: 'table-cell', tableColumn: 'table-column', tableColumnGroup: 'table-column-group', tableFooterGroup: 'table-footer-group', tableHeaderGroup: 'table-header-group', tableRow: 'table-row', tableRowGroup: 'table-row-group', inlineBlock: 'inline-block', inlineFlex: 'inline-flex', inlineGrid: 'inline-grid', inlineListItem: 'inline-list-item', inlineTable: 'inline-table', contents: 'contents', listItem: 'list-item'}/*union*/).flex;
      var tmp$ret$9;
      // Inline function 'csstype.Padding' call
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '13.75px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp3_Padding = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '0px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      var tmp4_Padding = tmp$ret$6;
      var tmp$ret$8;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp2_unsafeCast = '' + tmp3_Padding + ' ' + tmp4_Padding;
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = tmp2_unsafeCast;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      tmp0_apply.padding = tmp$ret$9;
      tmp$ret$10 = tmp0_apply;
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = css(tmp$ret$11);
      tmp1_css.className = tmp$ret$12;
      var tmp$ret$16;
      // Inline function 'react.dom.html.ReactHTML.span' call
      var tmp2__get_span__cr97gl = ReactHTML_getInstance();
      var tmp$ret$15;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$14;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$13;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$13 = 'span';
      tmp$ret$14 = tmp$ret$13;
      tmp$ret$15 = tmp$ret$14;
      tmp$ret$16 = tmp$ret$15;
      var tmp = tmp$ret$16;
      $this$invoke.x4r(tmp, App$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate));
      var tmp_0 = Tooltip;
      $this$invoke.x4r(tmp_0, App$lambda$lambda$lambda$lambda$lambda$lambda_0($state$delegate));
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda_0($this$invoke) {
    _init_properties_App_kt__fk8usv();
    var tmp$ret$2;
    // Inline function 'csstype.pct' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = '100%';
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_unsafeCast;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    $this$invoke.widthProp = tmp$ret$2;
    var tmp$ret$5;
    // Inline function 'csstype.px' call
    var tmp$ret$4;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp1_unsafeCast = '10px';
    var tmp$ret$3;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$3 = tmp1_unsafeCast;
    tmp$ret$4 = tmp$ret$3;
    tmp$ret$5 = tmp$ret$4;
    $this$invoke.marginBottomProp = tmp$ret$5;
    var tmp$ret$8;
    // Inline function 'csstype.px' call
    var tmp$ret$7;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp2_unsafeCast = '0px';
    var tmp$ret$6;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$6 = tmp2_unsafeCast;
    tmp$ret$7 = tmp$ret$6;
    tmp$ret$8 = tmp$ret$7;
    $this$invoke.marginTopProp = tmp$ret$8;
    return Unit_getInstance();
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda_1($state$delegate) {
    return function (circularProgressValue) {
      changeCircularProgressValue(invoke$lambda($state$delegate), circularProgressValue);
      invoke$lambda_0($state$delegate, invoke$lambda($state$delegate).z52());
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda_2($state$delegate) {
    return function (backdropIsOpen) {
      changeBackdropIsOpen(invoke$lambda($state$delegate), backdropIsOpen);
      invoke$lambda_0($state$delegate, invoke$lambda($state$delegate).z52());
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda_1($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.handleChangeCircularProgressValueProp = App$lambda$lambda$lambda$lambda$lambda$lambda_1($state$delegate);
      $this$invoke.handleChangeBackdropIsOpenProp = App$lambda$lambda$lambda$lambda$lambda$lambda_2($state$delegate);
      $this$invoke.scenarioProp = invoke$lambda($state$delegate).v52_1;
      $this$invoke.algorithmProp = invoke$lambda($state$delegate).w52_1;
      $this$invoke.metricProp = invoke$lambda($state$delegate).x52_1;
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$slambda($coreType, $state$delegate, resultContinuation) {
    this.a57_1 = $coreType;
    this.b57_1 = $state$delegate;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(App$lambda$lambda$lambda$lambda$lambda$lambda$slambda).f1e = function ($this$launch, $completion) {
    var tmp = this.g1e($this$launch, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  };
  protoOf(App$lambda$lambda$lambda$lambda$lambda$lambda$slambda).si = function (p1, $completion) {
    return this.f1e((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(App$lambda$lambda$lambda$lambda$lambda$lambda$slambda).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 2;
            this.xh_1 = 1;
            suspendResult = profileWasCreatedOrModified(invoke$lambda(this.b57_1), this.a57_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            invoke$lambda_0(this.b57_1, invoke$lambda(this.b57_1).z52());
            return Unit_getInstance();
          case 2:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 2) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  protoOf(App$lambda$lambda$lambda$lambda$lambda$lambda$slambda).g1e = function ($this$launch, completion) {
    var i = new App$lambda$lambda$lambda$lambda$lambda$lambda$slambda(this.a57_1, this.b57_1, completion);
    i.c57_1 = $this$launch;
    return i;
  };
  function App$lambda$lambda$lambda$lambda$lambda$lambda$slambda_0($coreType, $state$delegate, resultContinuation) {
    var i = new App$lambda$lambda$lambda$lambda$lambda$lambda$slambda($coreType, $state$delegate, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.f1e($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda_3($state$delegate) {
    return function (coreType) {
      var tmp = MainScope();
      launch(tmp, VOID, VOID, App$lambda$lambda$lambda$lambda$lambda$lambda$slambda_0(coreType, $state$delegate, null));
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda_4($state$delegate) {
    return function (backdropIsOpen) {
      changeBackdropIsOpen(invoke$lambda($state$delegate), backdropIsOpen);
      invoke$lambda_0($state$delegate, invoke$lambda($state$delegate).z52());
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda_5($state$delegate) {
    return function (code, severity) {
      displayAlert(invoke$lambda($state$delegate), code, severity);
      invoke$lambda_0($state$delegate, invoke$lambda($state$delegate).z52());
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda_2($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.handleProfileWasCreatedOrModifiedProp = App$lambda$lambda$lambda$lambda$lambda$lambda_3($state$delegate);
      $this$invoke.handleChangeBackdropIsOpenProp = App$lambda$lambda$lambda$lambda$lambda$lambda_4($state$delegate);
      $this$invoke.handleDisplayAlertProp = App$lambda$lambda$lambda$lambda$lambda$lambda_5($state$delegate);
      $this$invoke.httpClientProp = invoke$lambda($state$delegate).i52_1;
      $this$invoke.excludedCoreTypesProp = invoke$lambda($state$delegate).k52_1.z1();
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$slambda_1($coreType, $state$delegate, resultContinuation) {
    this.l57_1 = $coreType;
    this.m57_1 = $state$delegate;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(App$lambda$lambda$lambda$lambda$lambda$lambda$slambda_1).f1e = function ($this$launch, $completion) {
    var tmp = this.g1e($this$launch, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  };
  protoOf(App$lambda$lambda$lambda$lambda$lambda$lambda$slambda_1).si = function (p1, $completion) {
    return this.f1e((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(App$lambda$lambda$lambda$lambda$lambda$lambda$slambda_1).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 2;
            this.xh_1 = 1;
            suspendResult = profileWasCreatedOrModified(invoke$lambda(this.m57_1), this.l57_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            invoke$lambda_0(this.m57_1, invoke$lambda(this.m57_1).z52());
            return Unit_getInstance();
          case 2:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 2) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  protoOf(App$lambda$lambda$lambda$lambda$lambda$lambda$slambda_1).g1e = function ($this$launch, completion) {
    var i = new App$lambda$lambda$lambda$lambda$lambda$lambda$slambda_1(this.l57_1, this.m57_1, completion);
    i.n57_1 = $this$launch;
    return i;
  };
  function App$lambda$lambda$lambda$lambda$lambda$lambda$slambda_2($coreType, $state$delegate, resultContinuation) {
    var i = new App$lambda$lambda$lambda$lambda$lambda$lambda$slambda_1($coreType, $state$delegate, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.f1e($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda_6($state$delegate) {
    return function (coreType) {
      var tmp = MainScope();
      launch(tmp, VOID, VOID, App$lambda$lambda$lambda$lambda$lambda$lambda$slambda_2(coreType, $state$delegate, null));
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda_7($state$delegate) {
    return function (backdropIsOpen) {
      changeBackdropIsOpen(invoke$lambda($state$delegate), backdropIsOpen);
      invoke$lambda_0($state$delegate, invoke$lambda($state$delegate).z52());
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda_8($state$delegate) {
    return function (code, severity) {
      displayAlert(invoke$lambda($state$delegate), code, severity);
      invoke$lambda_0($state$delegate, invoke$lambda($state$delegate).z52());
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda_3($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.handleProfileWasCreatedOrModifiedProp = App$lambda$lambda$lambda$lambda$lambda$lambda_6($state$delegate);
      $this$invoke.handleChangeBackdropIsOpenProp = App$lambda$lambda$lambda$lambda$lambda$lambda_7($state$delegate);
      $this$invoke.handleDisplayAlertProp = App$lambda$lambda$lambda$lambda$lambda$lambda_8($state$delegate);
      $this$invoke.coreParametersProp = ensureNotNull(invoke$lambda($state$delegate).k52_1.y1(invoke$lambda($state$delegate).j52_1));
      $this$invoke.userIsLoggedProp = invoke$lambda($state$delegate).g52_1;
      $this$invoke.httpClientProp = invoke$lambda($state$delegate).i52_1;
      $this$invoke.coreTypeProp = invoke$lambda($state$delegate).j52_1;
      $this$invoke.usernameProp = invoke$lambda($state$delegate).h52_1;
      $this$invoke.tablesProp = invoke$lambda($state$delegate).r52_1;
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda_0($state$delegate) {
    return function ($this$invoke) {
      var tmp$ret$3;
      // Inline function 'react.dom.html.ReactHTML.div' call
      var tmp0__get_div__2k2o9m = ReactHTML_getInstance();
      var tmp$ret$2;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = 'div';
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp = tmp$ret$3;
      $this$invoke.x4r(tmp, App$lambda$lambda$lambda$lambda$lambda($state$delegate));
      var tmp_0 = get_CryptoACDivider();
      $this$invoke.x4r(tmp_0, App$lambda$lambda$lambda$lambda$lambda_0);
      var tmp0_subject = invoke$lambda($state$delegate).s52_1;
      var tmp0 = tmp0_subject.n4_1;
      var tmp_1;
      switch (tmp0) {
        case 1:
          var tmp_2 = get_TradeOffBoard();
          $this$invoke.x4r(tmp_2, App$lambda$lambda$lambda$lambda$lambda_1($state$delegate));
          tmp_1 = Unit_getInstance();
          break;
        case 0:
          var tmp_3 = get_NewProfile();
          $this$invoke.x4r(tmp_3, App$lambda$lambda$lambda$lambda$lambda_2($state$delegate));
          tmp_1 = Unit_getInstance();
          break;
        case 2:
          var tmp_4 = get_Dashboard();
          $this$invoke.x4r(tmp_4, App$lambda$lambda$lambda$lambda$lambda_3($state$delegate));
          tmp_1 = Unit_getInstance();
          break;
      }
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda_1($state$delegate) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$15;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$14;
      // Inline function 'js.core.jso' call
      var tmp$ret$13;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.App.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'csstype.Color' call
      Themes_getInstance();
      var tmp0_Color = '#f7f7f7';
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_Color;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.backgroundColor = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp2__get_px__vmdsxl = invoke$lambda($state$delegate).t52_1 ? 80 : 300;
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '' + tmp2__get_px__vmdsxl + 'px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      tmp0_apply.marginLeft = tmp$ret$6;
      var tmp$ret$9;
      // Inline function 'csstype.pct' call
      var tmp$ret$8;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp3_unsafeCast = '100%';
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = tmp3_unsafeCast;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      tmp0_apply.width = tmp$ret$9;
      var tmp$ret$12;
      // Inline function 'csstype.pct' call
      var tmp$ret$11;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp4_unsafeCast = '100%';
      var tmp$ret$10;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$10 = tmp4_unsafeCast;
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = tmp$ret$11;
      tmp0_apply.height = tmp$ret$12;
      tmp$ret$13 = tmp0_apply;
      tmp$ret$14 = tmp$ret$13;
      tmp$ret$15 = css(tmp$ret$14);
      tmp1_css.className = tmp$ret$15;
      var tmp = Container;
      $this$invoke.x4r(tmp, App$lambda$lambda$lambda$lambda_0($state$delegate));
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate) {
    return function (it) {
      toggleSidebarIsCollapsed(invoke$lambda($state$delegate));
      invoke$lambda_0($state$delegate, invoke$lambda($state$delegate).z52());
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($this$invoke) {
    _init_properties_App_kt__fk8usv();
    // Inline function 'emotion.react.css' call
    var tmp1_css = $this$invoke;
    var tmp$ret$9;
    // Inline function 'emotion.css.ClassName' call
    var tmp$ret$8;
    // Inline function 'js.core.jso' call
    var tmp$ret$7;
    // Inline function 'kotlin.apply' call
    var tmp$ret$0;
    // Inline function 'js.core.jso' call
    tmp$ret$0 = {};
    var tmp0_apply = tmp$ret$0;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'eu.fbk.st.cryptoac.view.App.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
    var tmp$ret$3;
    // Inline function 'csstype.px' call
    var tmp$ret$2;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = '18px';
    var tmp$ret$1;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$1 = tmp0_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    tmp0_apply.fontSize = tmp$ret$3;
    tmp0_apply.display = (/*union*/{block: 'block', inline: 'inline', runIn: 'run-in', flex: 'flex', flow: 'flow', flowRoot: 'flow-root', grid: 'grid', ruby: 'ruby', table: 'table', rubyBase: 'ruby-base', rubyBaseContainer: 'ruby-base-container', rubyText: 'ruby-text', rubyTextContainer: 'ruby-text-container', tableCaption: 'table-caption', tableCell: 'table-cell', tableColumn: 'table-column', tableColumnGroup: 'table-column-group', tableFooterGroup: 'table-footer-group', tableHeaderGroup: 'table-header-group', tableRow: 'table-row', tableRowGroup: 'table-row-group', inlineBlock: 'inline-block', inlineFlex: 'inline-flex', inlineGrid: 'inline-grid', inlineListItem: 'inline-list-item', inlineTable: 'inline-table', contents: 'contents', listItem: 'list-item'}/*union*/).inline;
    var tmp$ret$6;
    // Inline function 'csstype.Color' call
    Themes_getInstance();
    var tmp1_Color = '#95a5a6';
    var tmp$ret$5;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$4;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$4 = tmp1_Color;
    tmp$ret$5 = tmp$ret$4;
    tmp$ret$6 = tmp$ret$5;
    tmp0_apply.color = tmp$ret$6;
    tmp$ret$7 = tmp0_apply;
    tmp$ret$8 = tmp$ret$7;
    tmp$ret$9 = css(tmp$ret$8);
    tmp1_css.className = tmp$ret$9;
    $this$invoke.w4r('CryptoAC');
    return Unit_getInstance();
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.style = JSON.parse('{\n                                                    "width": "100%",\n                                                    "maxHeight": "20px",\n                                                    "padding": "0"\n                                                }');
      $this$invoke.variant = 'text';
      $this$invoke.onClick = App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate);
      var tmp$ret$3;
      // Inline function 'react.dom.html.ReactHTML.span' call
      var tmp0__get_span__8hjtqf = ReactHTML_getInstance();
      var tmp$ret$2;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = 'span';
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp = tmp$ret$3;
      $this$invoke.x4r(tmp, App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0);
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate) {
    return function ($this$invoke) {
      var tmp = Button;
      $this$invoke.x4r(tmp, App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate));
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate) {
    return function (it) {
      toggleSidebarIsCollapsed(invoke$lambda($state$delegate));
      invoke$lambda_0($state$delegate, invoke$lambda($state$delegate).z52());
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($this$invoke) {
    _init_properties_App_kt__fk8usv();
    return Unit_getInstance();
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.size = 'small';
      $this$invoke.label = 'expand';
      $this$invoke.onClick = App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate);
      var tmp = FaStream;
      $this$invoke.x4r(tmp, App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0);
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.title = 'Expand';
      var tmp = IconButton;
      $this$invoke.x4r(tmp, App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($state$delegate));
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($state$delegate) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$6;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$5;
      // Inline function 'js.core.jso' call
      var tmp$ret$4;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.App.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '10px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.marginTop = tmp$ret$3;
      tmp$ret$4 = tmp0_apply;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = css(tmp$ret$5);
      tmp1_css.className = tmp$ret$6;
      var tmp = Tooltip;
      $this$invoke.x4r(tmp, App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($state$delegate));
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($state$delegate) {
    return function ($this$invoke) {
      var tmp;
      if (!invoke$lambda($state$delegate).t52_1) {
        var tmp$ret$3;
        // Inline function 'react.dom.html.ReactHTML.div' call
        var tmp0__get_div__2k2o9m = ReactHTML_getInstance();
        var tmp$ret$2;
        // Inline function 'react.IntrinsicType' call
        var tmp$ret$1;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp$ret$0;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$0 = 'div';
        tmp$ret$1 = tmp$ret$0;
        tmp$ret$2 = tmp$ret$1;
        tmp$ret$3 = tmp$ret$2;
        var tmp_0 = tmp$ret$3;
        $this$invoke.x4r(tmp_0, App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate));
        tmp = Unit_getInstance();
      } else {
        var tmp$ret$7;
        // Inline function 'react.dom.html.ReactHTML.div' call
        var tmp1__get_div__r5s89x = ReactHTML_getInstance();
        var tmp$ret$6;
        // Inline function 'react.IntrinsicType' call
        var tmp$ret$5;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp$ret$4;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$4 = 'div';
        tmp$ret$5 = tmp$ret$4;
        tmp$ret$6 = tmp$ret$5;
        tmp$ret$7 = tmp$ret$6;
        var tmp_1 = tmp$ret$7;
        $this$invoke.x4r(tmp_1, App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($state$delegate));
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2($this$invoke) {
    _init_properties_App_kt__fk8usv();
    var tmp$ret$2;
    // Inline function 'csstype.pct' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = '100%';
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_unsafeCast;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    $this$invoke.widthProp = tmp$ret$2;
    var tmp$ret$5;
    // Inline function 'csstype.px' call
    var tmp$ret$4;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp1_unsafeCast = '10px';
    var tmp$ret$3;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$3 = tmp1_unsafeCast;
    tmp$ret$4 = tmp$ret$3;
    tmp$ret$5 = tmp$ret$4;
    $this$invoke.marginTopProp = tmp$ret$5;
    var tmp$ret$8;
    // Inline function 'csstype.px' call
    var tmp$ret$7;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp2_unsafeCast = '10px';
    var tmp$ret$6;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$6 = tmp2_unsafeCast;
    tmp$ret$7 = tmp$ret$6;
    tmp$ret$8 = tmp$ret$7;
    $this$invoke.marginBottomProp = tmp$ret$8;
    return Unit_getInstance();
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.style = JSON.parse(trimMargin('{"marginRight": "' + (invoke$lambda($state$delegate).t52_1 ? 'unset' : 'auto') + ' "}'));
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($state$delegate) {
    return function ($this$FC, it) {
      var tmp = FaBoxes;
      $this$FC.x4r(tmp, App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($state$delegate));
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2($state$delegate) {
    return function (it) {
      changeUIType(invoke$lambda($state$delegate), UIType_NewProfile_getInstance());
      invoke$lambda_0($state$delegate, invoke$lambda($state$delegate).z52());
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.style = JSON.parse(trimMargin('{"marginRight": "' + (invoke$lambda($state$delegate).t52_1 ? 'unset' : 'auto') + ' "}'));
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_3($state$delegate) {
    return function ($this$FC, it) {
      var tmp = FaVials;
      $this$FC.x4r(tmp, App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2($state$delegate));
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_4($state$delegate) {
    return function (it) {
      changeUIType(invoke$lambda($state$delegate), UIType_TradeOffBoard_getInstance());
      invoke$lambda_0($state$delegate, invoke$lambda($state$delegate).z52());
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_5($element, $state$delegate) {
    return function (it) {
      changeCoreType(invoke$lambda($state$delegate), $element);
      changeUIType(invoke$lambda($state$delegate), UIType_CoreType_getInstance());
      invoke$lambda_0($state$delegate, invoke$lambda($state$delegate).z52());
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_3($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.defaultSelectedButtonProp = invoke$lambda($state$delegate).m52_1;
      var tmp$ret$0;
      // Inline function 'kotlin.apply' call
      var tmp = create(FC(App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($state$delegate)));
      var tmp_0 = !invoke$lambda($state$delegate).t52_1;
      var tmp_1 = new CryptoACButtonAndIconData(tmp, 'New profile', tmp_0, App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2($state$delegate));
      var tmp_2 = create(FC(App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_3($state$delegate)));
      var tmp_3 = !invoke$lambda($state$delegate).t52_1;
      var tmp0_apply = mutableListOf([tmp_1, new CryptoACButtonAndIconData(tmp_2, 'TradeOffBoard', tmp_3, App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_4($state$delegate))]);
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.App.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      // Inline function 'kotlin.collections.forEach' call
      var tmp0_forEach = invoke$lambda($state$delegate).l52_1;
      var tmp0_iterator = tmp0_forEach.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        // Inline function 'eu.fbk.st.cryptoac.view.App.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
        var tmp_4 = getIconByCoreType(invoke$lambda($state$delegate), element);
        var tmp_5 = element.u4w();
        var tmp_6 = !invoke$lambda($state$delegate).t52_1;
        tmp0_apply.a(new CryptoACButtonAndIconData(tmp_4, tmp_5, tmp_6, App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_5(element, $state$delegate)));
      }
      tmp$ret$0 = tmp0_apply;
      $this$invoke.buttonsProp = tmp$ret$0;
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($state$delegate) {
    return function ($this$invoke) {
      var tmp$ret$2;
      // Inline function 'csstype.ClassName' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = 'pro-sidebar-header';
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      $this$invoke.className = tmp$ret$2;
      var tmp1_css = $this$invoke;
      var tmp$ret$27;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$26;
      // Inline function 'js.core.jso' call
      var tmp$ret$25;
      // Inline function 'kotlin.apply' call
      var tmp$ret$3;
      // Inline function 'js.core.jso' call
      tmp$ret$3 = {};
      var tmp0_apply = tmp$ret$3;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.App.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      tmp0_apply.textAlign = (/*union*/{center: 'center', end: 'end', justify: 'justify', left: 'left', matchParent: 'match-parent', right: 'right', start: 'start'}/*union*/).center;
      tmp0_apply.fontWeight = (/*union*/{bold: 'bold', normal: 'normal', bolder: 'bolder', lighter: 'lighter'}/*union*/).bold;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '2px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp0_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      tmp0_apply.letterSpacing = tmp$ret$6;
      var tmp;
      if (!invoke$lambda($state$delegate).t52_1) {
        var tmp$ret$15;
        // Inline function 'csstype.Padding' call
        var tmp$ret$9;
        // Inline function 'csstype.px' call
        var tmp$ret$8;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp1_unsafeCast = '20px';
        var tmp$ret$7;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$7 = tmp1_unsafeCast;
        tmp$ret$8 = tmp$ret$7;
        tmp$ret$9 = tmp$ret$8;
        var tmp4_Padding = tmp$ret$9;
        var tmp$ret$12;
        // Inline function 'csstype.px' call
        var tmp$ret$11;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp2_unsafeCast = '20px';
        var tmp$ret$10;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$10 = tmp2_unsafeCast;
        tmp$ret$11 = tmp$ret$10;
        tmp$ret$12 = tmp$ret$11;
        var tmp5_Padding = tmp$ret$12;
        var tmp$ret$14;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp3_unsafeCast = '' + tmp4_Padding + ' ' + tmp5_Padding;
        var tmp$ret$13;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$13 = tmp3_unsafeCast;
        tmp$ret$14 = tmp$ret$13;
        tmp$ret$15 = tmp$ret$14;
        tmp = tmp$ret$15;
      } else {
        var tmp$ret$24;
        // Inline function 'csstype.Padding' call
        var tmp$ret$18;
        // Inline function 'csstype.px' call
        var tmp$ret$17;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp6_unsafeCast = '0px';
        var tmp$ret$16;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$16 = tmp6_unsafeCast;
        tmp$ret$17 = tmp$ret$16;
        tmp$ret$18 = tmp$ret$17;
        var tmp9_Padding = tmp$ret$18;
        var tmp$ret$21;
        // Inline function 'csstype.px' call
        var tmp$ret$20;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp7_unsafeCast = '0px';
        var tmp$ret$19;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$19 = tmp7_unsafeCast;
        tmp$ret$20 = tmp$ret$19;
        tmp$ret$21 = tmp$ret$20;
        var tmp10_Padding = tmp$ret$21;
        var tmp$ret$23;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp8_unsafeCast = '' + tmp9_Padding + ' ' + tmp10_Padding;
        var tmp$ret$22;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$22 = tmp8_unsafeCast;
        tmp$ret$23 = tmp$ret$22;
        tmp$ret$24 = tmp$ret$23;
        tmp = tmp$ret$24;
      }
      tmp0_apply.padding = tmp;
      tmp$ret$25 = tmp0_apply;
      tmp$ret$26 = tmp$ret$25;
      tmp$ret$27 = css(tmp$ret$26);
      tmp1_css.className = tmp$ret$27;
      var tmp$ret$31;
      // Inline function 'react.dom.html.ReactHTML.div' call
      var tmp2__get_div__e5gx5o = ReactHTML_getInstance();
      var tmp$ret$30;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$29;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$28;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$28 = 'div';
      tmp$ret$29 = tmp$ret$28;
      tmp$ret$30 = tmp$ret$29;
      tmp$ret$31 = tmp$ret$30;
      var tmp_0 = tmp$ret$31;
      $this$invoke.x4r(tmp_0, App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($state$delegate));
      var tmp_1 = get_CryptoACDivider();
      $this$invoke.x4r(tmp_1, App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2);
      var tmp_2 = get_CryptoACButtonAndIconGroup();
      $this$invoke.x4r(tmp_2, App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_3($state$delegate));
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($this$invoke) {
    _init_properties_App_kt__fk8usv();
    return Unit_getInstance();
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_4($state$delegate) {
    return function (newAlgorithm) {
      changeTradeOffBoardAlgorithm(invoke$lambda($state$delegate), newAlgorithm);
      invoke$lambda_0($state$delegate, invoke$lambda($state$delegate).z52());
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_5($state$delegate) {
    return function (newScenario) {
      changeTradeOffBoardScenario(invoke$lambda($state$delegate), newScenario);
      invoke$lambda_0($state$delegate, invoke$lambda($state$delegate).z52());
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_6($state$delegate) {
    return function (newMetric) {
      changeTradeOffBoardMetric(invoke$lambda($state$delegate), newMetric);
      invoke$lambda_0($state$delegate, invoke$lambda($state$delegate).z52());
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.handleChangeAlgorithmProp = App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_4($state$delegate);
      $this$invoke.handleChangeScenarioProp = App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_5($state$delegate);
      $this$invoke.handleChangeMetricProp = App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_6($state$delegate);
      $this$invoke.currentScenarioProp = invoke$lambda($state$delegate).v52_1;
      $this$invoke.currentAlgorithmProp = invoke$lambda($state$delegate).w52_1;
      $this$invoke.currentMetricProp = invoke$lambda($state$delegate).x52_1;
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_7($state$delegate) {
    return function (backdropIsOpen) {
      changeBackdropIsOpen(invoke$lambda($state$delegate), backdropIsOpen);
      invoke$lambda_0($state$delegate, invoke$lambda($state$delegate).z52());
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_8($state$delegate) {
    return function (topic) {
      addTableInContent(invoke$lambda($state$delegate), topic);
      invoke$lambda_0($state$delegate, invoke$lambda($state$delegate).z52());
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_9($state$delegate) {
    return function (code, severity) {
      displayAlert(invoke$lambda($state$delegate), code, severity);
      invoke$lambda_0($state$delegate, invoke$lambda($state$delegate).z52());
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda_3($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.handleChangeBackdropIsOpenProp = App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_7($state$delegate);
      $this$invoke.handleAddTableInContentProp = App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_8($state$delegate);
      $this$invoke.handleDisplayAlertProp = App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_9($state$delegate);
      $this$invoke.userIsAdminProp = ensureNotNull(invoke$lambda($state$delegate).k52_1.y1(invoke$lambda($state$delegate).j52_1)).k25().u51_1;
      $this$invoke.httpClientProp = invoke$lambda($state$delegate).i52_1;
      $this$invoke.coreTypeProp = invoke$lambda($state$delegate).j52_1;
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda_4($this$invoke) {
    _init_properties_App_kt__fk8usv();
    return Unit_getInstance();
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_6($this$invoke) {
    _init_properties_App_kt__fk8usv();
    return Unit_getInstance();
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_7($this$invoke) {
    _init_properties_App_kt__fk8usv();
    // Inline function 'emotion.react.css' call
    var tmp1_css = $this$invoke;
    var tmp$ret$9;
    // Inline function 'emotion.css.ClassName' call
    var tmp$ret$8;
    // Inline function 'js.core.jso' call
    var tmp$ret$7;
    // Inline function 'kotlin.apply' call
    var tmp$ret$0;
    // Inline function 'js.core.jso' call
    tmp$ret$0 = {};
    var tmp0_apply = tmp$ret$0;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'eu.fbk.st.cryptoac.view.App.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
    var tmp$ret$3;
    // Inline function 'csstype.px' call
    var tmp$ret$2;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = '5px';
    var tmp$ret$1;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$1 = tmp0_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    tmp0_apply.marginLeft = tmp$ret$3;
    var tmp$ret$6;
    // Inline function 'csstype.px' call
    var tmp$ret$5;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp1_unsafeCast = '13px';
    var tmp$ret$4;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$4 = tmp1_unsafeCast;
    tmp$ret$5 = tmp$ret$4;
    tmp$ret$6 = tmp$ret$5;
    tmp0_apply.fontSize = tmp$ret$6;
    tmp$ret$7 = tmp0_apply;
    tmp$ret$8 = tmp$ret$7;
    tmp$ret$9 = css(tmp$ret$8);
    tmp1_css.className = tmp$ret$9;
    $this$invoke.w4r('View source');
    return Unit_getInstance();
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_10($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.href = 'https://github.com/stfbk/CryptoAC';
      $this$invoke.target = (/*union*/{_self: '_self', _blank: '_blank', _parent: '_parent', _top: '_top'}/*union*/)._blank;
      var tmp1_css = $this$invoke;
      var tmp$ret$15;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$14;
      // Inline function 'js.core.jso' call
      var tmp$ret$13;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.App.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'csstype.Color' call
      Themes_getInstance();
      var tmp0_Color = '#676767';
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_Color;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.color = tmp$ret$3;
      tmp0_apply.textDecoration = (/*union*/{none: 'none'}/*union*/).none;
      tmp0_apply.display = (/*union*/{block: 'block', inline: 'inline', runIn: 'run-in', flex: 'flex', flow: 'flow', flowRoot: 'flow-root', grid: 'grid', ruby: 'ruby', table: 'table', rubyBase: 'ruby-base', rubyBaseContainer: 'ruby-base-container', rubyText: 'ruby-text', rubyTextContainer: 'ruby-text-container', tableCaption: 'table-caption', tableCell: 'table-cell', tableColumn: 'table-column', tableColumnGroup: 'table-column-group', tableFooterGroup: 'table-footer-group', tableHeaderGroup: 'table-header-group', tableRow: 'table-row', tableRowGroup: 'table-row-group', inlineBlock: 'inline-block', inlineFlex: 'inline-flex', inlineGrid: 'inline-grid', inlineListItem: 'inline-list-item', inlineTable: 'inline-table', contents: 'contents', listItem: 'list-item'}/*union*/).flex;
      tmp0_apply.alignItems = (/*union*/{center: 'center', end: 'end', flexEnd: 'flex-end', flexStart: 'flex-start', selfEnd: 'self-end', selfStart: 'self-start', start: 'start', baseline: 'baseline', normal: 'normal', stretch: 'stretch'}/*union*/).center;
      tmp0_apply.justifyContent = (/*union*/{spaceAround: 'space-around', spaceBetween: 'space-between', spaceEvenly: 'space-evenly', stretch: 'stretch', center: 'center', end: 'end', flexEnd: 'flex-end', flexStart: 'flex-start', start: 'start', left: 'left', normal: 'normal', right: 'right'}/*union*/).center;
      tmp0_apply.textOverflow = (/*union*/{clip: 'clip', ellipsis: 'ellipsis'}/*union*/).ellipsis;
      tmp0_apply.overflow = (/*union*/{clip: 'clip', hidden: 'hidden', scroll: 'scroll', visible: 'visible'}/*union*/).hidden;
      // Inline function 'csstype.SimplePseudosRuleBuilder.hover' call
      // Inline function 'csstype.RuleBuilder.invoke' call
      // Inline function 'csstype.RuleBuilder.invoke' call
      var tmp$ret$6;
      // Inline function 'csstype.Selector' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = ':hover';
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      var tmp2_invoke = tmp$ret$6;
      var tmp$ret$12;
      // Inline function 'js.core.jso' call
      var tmp$ret$11;
      // Inline function 'kotlin.apply' call
      var tmp$ret$7;
      // Inline function 'js.core.jso' call
      tmp$ret$7 = {};
      var tmp1_apply = tmp$ret$7;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.App.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$10;
      // Inline function 'csstype.Color' call
      Themes_getInstance();
      var tmp0_Color_0 = '#34495e';
      var tmp$ret$9;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$8;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$8 = tmp0_Color_0;
      tmp$ret$9 = tmp$ret$8;
      tmp$ret$10 = tmp$ret$9;
      tmp1_apply.color = tmp$ret$10;
      tmp$ret$11 = tmp1_apply;
      tmp$ret$12 = tmp$ret$11;
      tmp0_apply[tmp2_invoke] = tmp$ret$12;
      tmp$ret$13 = tmp0_apply;
      tmp$ret$14 = tmp$ret$13;
      tmp$ret$15 = css(tmp$ret$14);
      tmp1_css.className = tmp$ret$15;
      var tmp = FaGithub;
      $this$invoke.x4r(tmp, App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_6);
      var tmp_0;
      if (!invoke$lambda($state$delegate).t52_1) {
        var tmp$ret$19;
        // Inline function 'react.dom.html.ReactHTML.span' call
        var tmp2__get_span__cr97gl = ReactHTML_getInstance();
        var tmp$ret$18;
        // Inline function 'react.IntrinsicType' call
        var tmp$ret$17;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp$ret$16;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$16 = 'span';
        tmp$ret$17 = tmp$ret$16;
        tmp$ret$18 = tmp$ret$17;
        tmp$ret$19 = tmp$ret$18;
        var tmp_1 = tmp$ret$19;
        $this$invoke.x4r(tmp_1, App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_7);
        tmp_0 = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda$lambda_5($state$delegate) {
    return function ($this$invoke) {
      var tmp$ret$2;
      // Inline function 'csstype.ClassName' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = 'pro-sidebar-footer';
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      $this$invoke.className = tmp$ret$2;
      var tmp1_css = $this$invoke;
      var tmp$ret$15;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$14;
      // Inline function 'js.core.jso' call
      var tmp$ret$13;
      // Inline function 'kotlin.apply' call
      var tmp$ret$3;
      // Inline function 'js.core.jso' call
      tmp$ret$3 = {};
      var tmp0_apply = tmp$ret$3;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.App.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$12;
      // Inline function 'csstype.Padding' call
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '20px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp0_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      var tmp3_Padding = tmp$ret$6;
      var tmp$ret$9;
      // Inline function 'csstype.px' call
      var tmp$ret$8;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '24px';
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = tmp1_unsafeCast;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      var tmp4_Padding = tmp$ret$9;
      var tmp$ret$11;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp2_unsafeCast = '' + tmp3_Padding + ' ' + tmp4_Padding;
      var tmp$ret$10;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$10 = tmp2_unsafeCast;
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = tmp$ret$11;
      tmp0_apply.padding = tmp$ret$12;
      tmp$ret$13 = tmp0_apply;
      tmp$ret$14 = tmp$ret$13;
      tmp$ret$15 = css(tmp$ret$14);
      tmp1_css.className = tmp$ret$15;
      var tmp$ret$19;
      // Inline function 'react.dom.html.ReactHTML.a' call
      var tmp2__get_a__qh4lho = ReactHTML_getInstance();
      var tmp$ret$18;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$17;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$16;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$16 = 'a';
      tmp$ret$17 = tmp$ret$16;
      tmp$ret$18 = tmp$ret$17;
      tmp$ret$19 = tmp$ret$18;
      var tmp = tmp$ret$19;
      $this$invoke.x4r(tmp, App$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_10($state$delegate));
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda$lambda_9($state$delegate) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$6;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$5;
      // Inline function 'js.core.jso' call
      var tmp$ret$4;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.App.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'csstype.pct' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '100%';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.height = tmp$ret$3;
      tmp0_apply.display = (/*union*/{block: 'block', inline: 'inline', runIn: 'run-in', flex: 'flex', flow: 'flow', flowRoot: 'flow-root', grid: 'grid', ruby: 'ruby', table: 'table', rubyBase: 'ruby-base', rubyBaseContainer: 'ruby-base-container', rubyText: 'ruby-text', rubyTextContainer: 'ruby-text-container', tableCaption: 'table-caption', tableCell: 'table-cell', tableColumn: 'table-column', tableColumnGroup: 'table-column-group', tableFooterGroup: 'table-footer-group', tableHeaderGroup: 'table-header-group', tableRow: 'table-row', tableRowGroup: 'table-row-group', inlineBlock: 'inline-block', inlineFlex: 'inline-flex', inlineGrid: 'inline-grid', inlineListItem: 'inline-list-item', inlineTable: 'inline-table', contents: 'contents', listItem: 'list-item'}/*union*/).flex;
      tmp0_apply.flexDirection = (/*union*/{column: 'column', columnReverse: 'column-reverse', row: 'row', rowReverse: 'row-reverse'}/*union*/).column;
      tmp$ret$4 = tmp0_apply;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = css(tmp$ret$5);
      tmp1_css.className = tmp$ret$6;
      var tmp$ret$10;
      // Inline function 'react.dom.html.ReactHTML.div' call
      var tmp2__get_div__e5gx5o = ReactHTML_getInstance();
      var tmp$ret$9;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$8;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = 'div';
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      tmp$ret$10 = tmp$ret$9;
      var tmp = tmp$ret$10;
      $this$invoke.x4r(tmp, App$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($state$delegate));
      var tmp_0;
      if (invoke$lambda($state$delegate).t52_1) {
        var tmp_1 = get_Empty();
        $this$invoke.x4r(tmp_1, App$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1);
        tmp_0 = Unit_getInstance();
      } else {
        var tmp0_subject = invoke$lambda($state$delegate).s52_1;
        var tmp0 = tmp0_subject.n4_1;
        var tmp_2;
        switch (tmp0) {
          case 1:
            var tmp_3 = get_Configuration();
            $this$invoke.x4r(tmp_3, App$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2($state$delegate));
            tmp_2 = Unit_getInstance();
            break;
          case 2:
            var tmp_4 = get_Actions();
            $this$invoke.x4r(tmp_4, App$lambda$lambda$lambda$lambda$lambda$lambda$lambda_3($state$delegate));
            tmp_2 = Unit_getInstance();
            break;
          case 0:
            var tmp_5 = get_Evaluation();
            $this$invoke.x4r(tmp_5, App$lambda$lambda$lambda$lambda$lambda$lambda$lambda_4);
            tmp_2 = Unit_getInstance();
            break;
        }
        tmp_0 = tmp_2;
      }
      var tmp$ret$14;
      // Inline function 'react.dom.html.ReactHTML.div' call
      var tmp3__get_div__fkdzdv = ReactHTML_getInstance();
      var tmp$ret$13;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$12;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$11;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$11 = 'div';
      tmp$ret$12 = tmp$ret$11;
      tmp$ret$13 = tmp$ret$12;
      tmp$ret$14 = tmp$ret$13;
      var tmp_6 = tmp$ret$14;
      $this$invoke.x4r(tmp_6, App$lambda$lambda$lambda$lambda$lambda$lambda$lambda_5($state$delegate));
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda$lambda_4($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.collapsed = invoke$lambda($state$delegate).t52_1;
      var tmp$ret$2;
      // Inline function 'csstype.px' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '80px';
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = tmp0_unsafeCast;
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      $this$invoke.collapsedWidth = tmp$ret$2;
      var tmp;
      if (!invoke$lambda($state$delegate).t52_1) {
        var tmp$ret$5;
        // Inline function 'csstype.px' call
        var tmp$ret$4;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp1_unsafeCast = '300px';
        var tmp$ret$3;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$3 = tmp1_unsafeCast;
        tmp$ret$4 = tmp$ret$3;
        tmp$ret$5 = tmp$ret$4;
        tmp = tmp$ret$5;
      } else {
        var tmp$ret$8;
        // Inline function 'csstype.px' call
        var tmp$ret$7;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp2_unsafeCast = '80px';
        var tmp$ret$6;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$6 = tmp2_unsafeCast;
        tmp$ret$7 = tmp$ret$6;
        tmp$ret$8 = tmp$ret$7;
        tmp = tmp$ret$8;
      }
      $this$invoke.width = tmp;
      $this$invoke.image = 'bg4.jpg';
      $this$invoke.breakpoint = 'md';
      $this$invoke.transitionDuration = 300;
      var tmp$ret$12;
      // Inline function 'react.dom.html.ReactHTML.div' call
      var tmp3__get_div__fkdzdv = ReactHTML_getInstance();
      var tmp$ret$11;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$10;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$9;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$9 = 'div';
      tmp$ret$10 = tmp$ret$9;
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = tmp$ret$11;
      var tmp_0 = tmp$ret$12;
      $this$invoke.x4r(tmp_0, App$lambda$lambda$lambda$lambda$lambda$lambda_9($state$delegate));
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$lambda_1($state$delegate) {
    return function ($this$invoke) {
      var tmp = Sidebar;
      $this$invoke.x4r(tmp, App$lambda$lambda$lambda$lambda$lambda_4($state$delegate));
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda_2($state$delegate) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$36;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$35;
      // Inline function 'js.core.jso' call
      var tmp$ret$34;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.App.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      tmp0_apply.position = (/*union*/{absolute: 'absolute', fixed: 'fixed', relative: 'relative', static: 'static', sticky: 'sticky'}/*union*/).fixed;
      var tmp$ret$3;
      // Inline function 'csstype.pct' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '100%';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.height = tmp$ret$3;
      var tmp$ret$18;
      // Inline function 'csstype.BoxShadow' call
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '0px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      var tmp6_BoxShadow = tmp$ret$6;
      var tmp$ret$9;
      // Inline function 'csstype.px' call
      var tmp$ret$8;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp2_unsafeCast = '19px';
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = tmp2_unsafeCast;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      var tmp7_BoxShadow = tmp$ret$9;
      var tmp$ret$12;
      // Inline function 'csstype.px' call
      var tmp$ret$11;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp3_unsafeCast = '38px';
      var tmp$ret$10;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$10 = tmp3_unsafeCast;
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = tmp$ret$11;
      var tmp8_BoxShadow = tmp$ret$12;
      var tmp$ret$15;
      // Inline function 'csstype.rgba' call
      var tmp$ret$14;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp4_unsafeCast = 'rgba(0,0,0,30)';
      var tmp$ret$13;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$13 = tmp4_unsafeCast;
      tmp$ret$14 = tmp$ret$13;
      tmp$ret$15 = tmp$ret$14;
      var tmp9_BoxShadow = tmp$ret$15;
      var tmp$ret$17;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp5_unsafeCast = '' + tmp6_BoxShadow + ' ' + tmp7_BoxShadow + ' ' + tmp8_BoxShadow + ' ' + tmp9_BoxShadow;
      var tmp$ret$16;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$16 = tmp5_unsafeCast;
      tmp$ret$17 = tmp$ret$16;
      tmp$ret$18 = tmp$ret$17;
      tmp0_apply.boxShadow = tmp$ret$18;
      var tmp$ret$33;
      // Inline function 'csstype.BoxShadow' call
      var tmp$ret$21;
      // Inline function 'csstype.px' call
      var tmp$ret$20;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp10_unsafeCast = '0px';
      var tmp$ret$19;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$19 = tmp10_unsafeCast;
      tmp$ret$20 = tmp$ret$19;
      tmp$ret$21 = tmp$ret$20;
      var tmp15_BoxShadow = tmp$ret$21;
      var tmp$ret$24;
      // Inline function 'csstype.px' call
      var tmp$ret$23;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp11_unsafeCast = '15px';
      var tmp$ret$22;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$22 = tmp11_unsafeCast;
      tmp$ret$23 = tmp$ret$22;
      tmp$ret$24 = tmp$ret$23;
      var tmp16_BoxShadow = tmp$ret$24;
      var tmp$ret$27;
      // Inline function 'csstype.px' call
      var tmp$ret$26;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp12_unsafeCast = '12px';
      var tmp$ret$25;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$25 = tmp12_unsafeCast;
      tmp$ret$26 = tmp$ret$25;
      tmp$ret$27 = tmp$ret$26;
      var tmp17_BoxShadow = tmp$ret$27;
      var tmp$ret$30;
      // Inline function 'csstype.rgba' call
      var tmp$ret$29;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp13_unsafeCast = 'rgba(0,0,0,22)';
      var tmp$ret$28;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$28 = tmp13_unsafeCast;
      tmp$ret$29 = tmp$ret$28;
      tmp$ret$30 = tmp$ret$29;
      var tmp18_BoxShadow = tmp$ret$30;
      var tmp$ret$32;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp14_unsafeCast = '' + tmp15_BoxShadow + ' ' + tmp16_BoxShadow + ' ' + tmp17_BoxShadow + ' ' + tmp18_BoxShadow;
      var tmp$ret$31;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$31 = tmp14_unsafeCast;
      tmp$ret$32 = tmp$ret$31;
      tmp$ret$33 = tmp$ret$32;
      tmp0_apply.boxShadow = tmp$ret$33;
      tmp$ret$34 = tmp0_apply;
      tmp$ret$35 = tmp$ret$34;
      tmp$ret$36 = css(tmp$ret$35);
      tmp1_css.className = tmp$ret$36;
      var tmp = ProSidebarProvider;
      $this$invoke.x4r(tmp, App$lambda$lambda$lambda$lambda_1($state$delegate));
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda_1($state$delegate) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$6;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$5;
      // Inline function 'js.core.jso' call
      var tmp$ret$4;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.App.<anonymous>.<anonymous>.<anonymous>' call
      tmp0_apply.display = (/*union*/{block: 'block', inline: 'inline', runIn: 'run-in', flex: 'flex', flow: 'flow', flowRoot: 'flow-root', grid: 'grid', ruby: 'ruby', table: 'table', rubyBase: 'ruby-base', rubyBaseContainer: 'ruby-base-container', rubyText: 'ruby-text', rubyTextContainer: 'ruby-text-container', tableCaption: 'table-caption', tableCell: 'table-cell', tableColumn: 'table-column', tableColumnGroup: 'table-column-group', tableFooterGroup: 'table-footer-group', tableHeaderGroup: 'table-header-group', tableRow: 'table-row', tableRowGroup: 'table-row-group', inlineBlock: 'inline-block', inlineFlex: 'inline-flex', inlineGrid: 'inline-grid', inlineListItem: 'inline-list-item', inlineTable: 'inline-table', contents: 'contents', listItem: 'list-item'}/*union*/).flex;
      tmp0_apply.position = (/*union*/{absolute: 'absolute', fixed: 'fixed', relative: 'relative', static: 'static', sticky: 'sticky'}/*union*/).relative;
      var tmp$ret$3;
      // Inline function 'csstype.pct' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '100%';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.height = tmp$ret$3;
      tmp$ret$4 = tmp0_apply;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = css(tmp$ret$5);
      tmp1_css.className = tmp$ret$6;
      var tmp$ret$10;
      // Inline function 'react.dom.html.ReactHTML.div' call
      var tmp2__get_div__e5gx5o = ReactHTML_getInstance();
      var tmp$ret$9;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$8;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = 'div';
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      tmp$ret$10 = tmp$ret$9;
      var tmp = tmp$ret$10;
      $this$invoke.x4r(tmp, App$lambda$lambda$lambda_1($state$delegate));
      var tmp$ret$14;
      // Inline function 'react.dom.html.ReactHTML.div' call
      var tmp3__get_div__fkdzdv = ReactHTML_getInstance();
      var tmp$ret$13;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$12;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$11;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$11 = 'div';
      tmp$ret$12 = tmp$ret$11;
      tmp$ret$13 = tmp$ret$12;
      tmp$ret$14 = tmp$ret$13;
      var tmp_0 = tmp$ret$14;
      $this$invoke.x4r(tmp_0, App$lambda$lambda$lambda_2($state$delegate));
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda_3($state$delegate) {
    return function (code, severity) {
      displayAlert(invoke$lambda($state$delegate), code, severity);
      invoke$lambda_0($state$delegate, invoke$lambda($state$delegate).z52());
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda$lambda$slambda($method, $endpoint, $values, $state$delegate, resultContinuation) {
    this.w57_1 = $method;
    this.x57_1 = $endpoint;
    this.y57_1 = $values;
    this.z57_1 = $state$delegate;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(App$lambda$lambda$lambda$slambda).f1e = function ($this$launch, $completion) {
    var tmp = this.g1e($this$launch, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  };
  protoOf(App$lambda$lambda$lambda$slambda).si = function (p1, $completion) {
    return this.f1e((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(App$lambda$lambda$lambda$slambda).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 2;
            this.xh_1 = 1;
            suspendResult = submitLogin(invoke$lambda(this.z57_1), this.w57_1, this.x57_1, this.y57_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            invoke$lambda_0(this.z57_1, invoke$lambda(this.z57_1).z52());
            return Unit_getInstance();
          case 2:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 2) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  protoOf(App$lambda$lambda$lambda$slambda).g1e = function ($this$launch, completion) {
    var i = new App$lambda$lambda$lambda$slambda(this.w57_1, this.x57_1, this.y57_1, this.z57_1, completion);
    i.a58_1 = $this$launch;
    return i;
  };
  function App$lambda$lambda$lambda$slambda_0($method, $endpoint, $values, $state$delegate, resultContinuation) {
    var i = new App$lambda$lambda$lambda$slambda($method, $endpoint, $values, $state$delegate, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.f1e($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function App$lambda$lambda$lambda_4($state$delegate) {
    return function (method, endpoint, values) {
      var tmp = MainScope();
      launch(tmp, VOID, VOID, App$lambda$lambda$lambda$slambda_0(method, endpoint, values, $state$delegate, null));
      return Unit_getInstance();
    };
  }
  function App$lambda$lambda_2($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.handleDisplayAlertProp = App$lambda$lambda$lambda_3($state$delegate);
      $this$invoke.handleSubmitLoginProp = App$lambda$lambda$lambda_4($state$delegate);
      $this$invoke.httpClientProp = invoke$lambda($state$delegate).i52_1;
      return Unit_getInstance();
    };
  }
  function profileWasCreatedOrModified$lambda($newCoreType) {
    return function () {
      return 'A profile for core ' + $newCoreType + ' was created or modified ';
    };
  }
  function profileWasCreatedOrModified$lambda_0($newCoreType) {
    return function () {
      return 'Fetching profile for core ' + $newCoreType + ' ';
    };
  }
  function submitLogin$lambda($method, $endpoint) {
    return function () {
      return 'Submitting CryptoAC login form, method ' + $method + ', endpoint ' + $endpoint;
    };
  }
  function submitLogin$lambda_0($status, $code) {
    return function () {
      return 'Response status is ' + $status + ', code is ' + $code;
    };
  }
  function submitLogin$lambda_1($status, $code) {
    return function () {
      return 'Response status is ' + $status + ', code is ' + $code;
    };
  }
  function submitLogin$lambda_2($e) {
    return function () {
      return 'Error during login (' + $e.message + '), see console log for details';
    };
  }
  function submitLogout$lambda() {
    _init_properties_App_kt__fk8usv();
    return 'Submitting CryptoAC logout form';
  }
  function submitLogout$lambda_0($status, $code) {
    return function () {
      return 'Response status is ' + $status + ', code is ' + $code;
    };
  }
  function submitLogout$lambda_1($status, $code) {
    return function () {
      return 'Response status is ' + $status + ', code is ' + $code;
    };
  }
  function submitLogout$lambda_2($e) {
    return function () {
      return 'Error during logout (' + $e.message + '), see console log for details';
    };
  }
  function displayAlert$lambda($code, $severity) {
    return function () {
      return 'Displaying the alert with code ' + $code + ' and severity ' + $severity;
    };
  }
  function addTableInContent$lambda($tableName) {
    return function () {
      return 'Adding table ' + $tableName + ' to content';
    };
  }
  function changeUIType$lambda($newUIType) {
    return function () {
      return "Setting the 'uiType' state to " + $newUIType;
    };
  }
  function changeCoreType$lambda($newCoreType) {
    return function () {
      return "Setting the 'coreType' state to " + $newCoreType;
    };
  }
  function changeBackdropIsOpen$lambda($newBackdropIsOpen) {
    return function () {
      return "Setting the 'backdropIsOpen' state to " + $newBackdropIsOpen;
    };
  }
  function changeCircularProgressValue$lambda($newCircularProgressValue) {
    return function () {
      return "Setting the 'circularProgressValue' state to " + $newCircularProgressValue;
    };
  }
  function changeUserIsLogged$lambda($newUserIsLogged) {
    return function () {
      return "Setting the 'userIsLogged' state to " + $newUserIsLogged;
    };
  }
  function changeUserIsLogged$lambda_0($element) {
    return function () {
      return 'Checking if profile for core ' + $element + ' exists';
    };
  }
  function changeUserIsLogged$lambda_1() {
    _init_properties_App_kt__fk8usv();
    return "The profile exists, adding it to the user's profiles";
  }
  function computeSidebarButtonsAndIndex$lambda() {
    _init_properties_App_kt__fk8usv();
    return 'Computing sidebar buttons and index';
  }
  function computeSidebarButtonsAndIndex$lambda_0($listOfCoreTypes) {
    return function () {
      return 'Number of buttons computed is ' + $listOfCoreTypes.i();
    };
  }
  function computeSidebarButtonsAndIndex$lambda_1($indexButton) {
    return function () {
      return 'Sidebar index is ' + $indexButton._v;
    };
  }
  function getIconByCoreType$lambda$lambda($jsonStyle) {
    return function ($this$invoke) {
      $this$invoke.style = $jsonStyle;
      return Unit_getInstance();
    };
  }
  function getIconByCoreType$lambda$lambda_0($jsonStyle) {
    return function ($this$invoke) {
      $this$invoke.style = $jsonStyle;
      return Unit_getInstance();
    };
  }
  function getIconByCoreType$lambda$lambda_1($jsonStyle) {
    return function ($this$invoke) {
      $this$invoke.style = $jsonStyle;
      return Unit_getInstance();
    };
  }
  function getIconByCoreType$lambda$lambda_2($jsonStyle) {
    return function ($this$invoke) {
      $this$invoke.style = $jsonStyle;
      return Unit_getInstance();
    };
  }
  function getIconByCoreType$lambda($coreType, $jsonStyle) {
    return function ($this$FC, it) {
      var tmp0_subject = $coreType;
      var tmp0 = tmp0_subject.n4_1;
      var tmp;
      switch (tmp0) {
        case 0:
          var tmp_0 = FaCloud;
          $this$FC.x4r(tmp_0, getIconByCoreType$lambda$lambda($jsonStyle));
          tmp = Unit_getInstance();
          break;
        case 1:
          var tmp_1 = FaWifi;
          $this$FC.x4r(tmp_1, getIconByCoreType$lambda$lambda_0($jsonStyle));
          tmp = Unit_getInstance();
          break;
        case 2:
          var tmp_2 = FaCloudMeatball;
          $this$FC.x4r(tmp_2, getIconByCoreType$lambda$lambda_1($jsonStyle));
          tmp = Unit_getInstance();
          break;
        case 3:
          var tmp_3 = FaWater;
          $this$FC.x4r(tmp_3, getIconByCoreType$lambda$lambda_2($jsonStyle));
          tmp = Unit_getInstance();
          break;
      }
      return Unit_getInstance();
    };
  }
  function changeUsername$lambda($newUsername) {
    return function () {
      return "Setting the 'username' state to " + $newUsername;
    };
  }
  function changeTradeOffBoardAlgorithm$lambda($newTradeOffBoardAlgorithm) {
    return function () {
      return "Setting the 'algorithm' state to " + $newTradeOffBoardAlgorithm;
    };
  }
  function changeTradeOffBoardMetric$lambda($newTradeOffBoardMetric) {
    return function () {
      return "Setting the 'metric' state to " + $newTradeOffBoardMetric;
    };
  }
  function changeTradeOffBoardScenario$lambda($newTradeOffBoardScenario) {
    return function () {
      return "Setting the 'scenario' state to " + $newTradeOffBoardScenario;
    };
  }
  function toggleSidebarIsCollapsed$lambda($collapsed) {
    return function () {
      return "Setting the 'sidebarIsCollapsed' state to " + $collapsed;
    };
  }
  function getProfileFromCryptoAC$lambda($username, $coreType) {
    return function () {
      return 'Getting the profile for user ' + $username + ' and core ' + $coreType;
    };
  }
  function getProfileFromCryptoAC$lambda_0($status) {
    return function () {
      return 'Response status is ' + $status;
    };
  }
  function getProfileFromCryptoAC$lambda_1($status, $outcomeCode) {
    return function () {
      return 'Response status is ' + $status + ', code is ' + $outcomeCode;
    };
  }
  function UIType_NewProfile_getInstance() {
    UIType_initEntries();
    return UIType_NewProfile_instance;
  }
  function UIType_TradeOffBoard_getInstance() {
    UIType_initEntries();
    return UIType_TradeOffBoard_instance;
  }
  function UIType_CoreType_getInstance() {
    UIType_initEntries();
    return UIType_CoreType_instance;
  }
  function $profileWasCreatedOrModifiedCOROUTINE$1(state, newCoreType, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.i53_1 = state;
    this.j53_1 = newCoreType;
  }
  protoOf($profileWasCreatedOrModifiedCOROUTINE$1).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 2;
            var tmp_0 = get_logger();
            tmp_0.h4r(profileWasCreatedOrModified$lambda(this.j53_1));
            var tmp_1 = get_logger();
            tmp_1.h4r(profileWasCreatedOrModified$lambda_0(this.j53_1));
            this.xh_1 = 1;
            suspendResult = getProfileFromCryptoAC(this.i53_1, VOID, this.j53_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var tmp0_safe_receiver = suspendResult;
            if (tmp0_safe_receiver == null)
              null;
            else {
              var tmp0_set = this.i53_1.k52_1;
              tmp0_set.y2(this.j53_1, tmp0_safe_receiver);
              changeCoreType(this.i53_1, this.j53_1);
              computeSidebarButtonsAndIndex(this.i53_1, this.i53_1.k52_1);
              changeUIType(this.i53_1, UIType_CoreType_getInstance());
            }

            ;
            return Unit_getInstance();
          case 2:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 2) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  function $resetAppStateCOROUTINE$2(state, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.s53_1 = state;
  }
  protoOf($resetAppStateCOROUTINE$2).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 2;
            changeBackdropIsOpen(this.s53_1, false);
            this.xh_1 = 1;
            suspendResult = changeUserIsLogged(this.s53_1, false, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            changeUsername(this.s53_1, '');
            changeUIType(this.s53_1, UIType_NewProfile_getInstance());
            var tmp_0 = this.s53_1;
            tmp_0.k52_1 = HashMap_init_$Create$();
            var tmp_1 = this.s53_1;
            tmp_1.r52_1 = ArrayList_init_$Create$();
            return Unit_getInstance();
          case 2:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 2) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  function $submitLoginCOROUTINE$3(state, method, endpoint, values, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.b54_1 = state;
    this.c54_1 = method;
    this.d54_1 = endpoint;
    this.e54_1 = values;
  }
  protoOf($submitLoginCOROUTINE$3).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 9;
            var tmp_0 = get_logger();
            tmp_0.h4r(submitLogin$lambda(this.c54_1, this.d54_1));
            changeBackdropIsOpen(this.b54_1, true);
            this.yh_1 = 6;
            var tmp_1 = this;
            tmp_1.f54_1 = this.b54_1.i52_1;
            var tmp_2 = this;
            var tmp1_build = Companion_getInstance_1();
            var tmp0_apply = ParametersBuilder();
            var tmp0_iterator = this.e54_1.o().f();
            while (tmp0_iterator.g()) {
              var element = tmp0_iterator.h();
              tmp0_apply.e1p(element.p(), element.q());
            }

            tmp_2.g54_1 = tmp0_apply.u1a();
            var tmp_3 = this;
            var tmp2_apply = new HttpRequestBuilder();
            if (false) {
              tmp2_apply.x3h_1 = Companion_getInstance().b21_1;
              tmp2_apply.w3h_1.j24_1.f1p(this.g54_1);
            } else {
              tmp2_apply.x3h_1 = Companion_getInstance().c21_1;
              var tmp0_setBody = new FormDataContent(this.g54_1);
              var tmp0_subject = tmp0_setBody;
              if (tmp0_subject == null) {
                tmp2_apply.z3h_1 = NullBody_getInstance();
                var tmp_4 = JsType_getInstance();
                var tmp_5 = getKClass(FormDataContent);
                var tmp_6;
                try {
                  tmp_6 = createKType(getKClass(FormDataContent), arrayOf([]), false);
                } catch ($p) {
                  var tmp_7;
                  if ($p instanceof Error) {
                    var cause = $p;
                    tmp_7 = null;
                  } else {
                    throw $p;
                  }
                  tmp_6 = tmp_7;
                }
                tmp2_apply.v3n(typeInfoImpl(tmp_4, tmp_5, tmp_6));
              } else {
                if (tmp0_subject instanceof OutgoingContent) {
                  tmp2_apply.z3h_1 = tmp0_setBody;
                  tmp2_apply.v3n(null);
                } else {
                  tmp2_apply.z3h_1 = tmp0_setBody;
                  var tmp_8 = JsType_getInstance();
                  var tmp_9 = getKClass(FormDataContent);
                  var tmp_10;
                  try {
                    tmp_10 = createKType(getKClass(FormDataContent), arrayOf([]), false);
                  } catch ($p) {
                    var tmp_11;
                    if ($p instanceof Error) {
                      var cause_0 = $p;
                      tmp_11 = null;
                    } else {
                      throw $p;
                    }
                    tmp_10 = tmp_11;
                  }
                  tmp2_apply.v3n(typeInfoImpl(tmp_8, tmp_9, tmp_10));
                }
              }
            }

            url(tmp2_apply, this.d54_1);
            ;
            tmp_3.h54_1 = tmp2_apply;
            this.xh_1 = 1;
            suspendResult = (new HttpStatement(this.h54_1, this.f54_1)).o4i(this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.i54_1 = suspendResult;
            this.xh_1 = 2;
            var tmp_12 = this.i54_1.e3l();
            var tmp_13 = JsType_getInstance();
            var tmp_14 = getKClass(OutcomeCode);
            var tmp_15;
            try {
              tmp_15 = createKType(getKClass(OutcomeCode), arrayOf([]), false);
            } catch ($p) {
              var tmp_16;
              if ($p instanceof Error) {
                var cause_1 = $p;
                tmp_16 = null;
              } else {
                throw $p;
              }
              tmp_15 = tmp_16;
            }

            suspendResult = tmp_12.h3k(typeInfoImpl(tmp_13, tmp_14, tmp_15), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            var tmp_17 = this;
            tmp_17.j54_1 = suspendResult instanceof OutcomeCode ? suspendResult : THROW_CCE();
            this.k54_1 = this.i54_1.j3k();
            if (this.k54_1.equals(Companion_getInstance_2().v21_1)) {
              var tmp_18 = get_logger();
              tmp_18.h4r(submitLogin$lambda_0(this.k54_1, this.j54_1));
              changeBackdropIsOpen(this.b54_1, false);
              SERVER_getInstance();
              changeUsername(this.b54_1, ensureNotNull(this.e54_1.y1('Username')));
              this.xh_1 = 4;
              suspendResult = changeUserIsLogged(this.b54_1, true, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              var tmp_19 = get_logger();
              tmp_19.i4r(submitLogin$lambda_1(this.k54_1, this.j54_1));
              this.xh_1 = 3;
              suspendResult = resetAppState(this.b54_1, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            }

            break;
          case 3:
            displayAlert(this.b54_1, this.j54_1, CryptoACAlertSeverity_ERROR_getInstance());
            this.xh_1 = 5;
            continue $sm;
          case 4:
            displayAlert(this.b54_1, OutcomeCode_CODE_000_SUCCESS_getInstance(), CryptoACAlertSeverity_SUCCESS_getInstance());
            this.xh_1 = 5;
            continue $sm;
          case 5:
            this.yh_1 = 9;
            this.xh_1 = 8;
            continue $sm;
          case 6:
            this.yh_1 = 9;
            var tmp_20 = this.ai_1;
            if (tmp_20 instanceof Error) {
              this.l54_1 = this.ai_1;
              this.xh_1 = 7;
              suspendResult = resetAppState(this.b54_1, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              throw this.ai_1;
            }

            break;
          case 7:
            var tmp_21 = get_logger();
            tmp_21.j4r(submitLogin$lambda_2(this.l54_1));
            console.log(this.l54_1);
            displayAlert(this.b54_1, OutcomeCode_CODE_049_UNEXPECTED_getInstance(), CryptoACAlertSeverity_ERROR_getInstance());
            this.xh_1 = 8;
            continue $sm;
          case 8:
            this.yh_1 = 9;
            return Unit_getInstance();
          case 9:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 9) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  function $submitLogoutCOROUTINE$4(state, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.u54_1 = state;
  }
  protoOf($submitLogoutCOROUTINE$4).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 9;
            var tmp_0 = get_logger();
            tmp_0.h4r(submitLogout$lambda);
            changeBackdropIsOpen(this.u54_1, true);
            this.xh_1 = 1;
            continue $sm;
          case 1:
            this.yh_1 = 5;
            this.yh_1 = 4;
            var tmp_1 = this;
            tmp_1.w54_1 = this.u54_1.i52_1;
            var tmp_2 = this;
            var tmp0_apply = new HttpRequestBuilder();
            var tmp_3 = get_baseURL();
            API_getInstance();
            url(tmp0_apply, tmp_3 + '/logout/');
            ;
            tmp_2.x54_1 = tmp0_apply;
            this.x54_1.x3h_1 = Companion_getInstance().f21_1;
            this.xh_1 = 2;
            suspendResult = (new HttpStatement(this.x54_1, this.w54_1)).o4i(this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.y54_1 = suspendResult;
            this.xh_1 = 3;
            var tmp_4 = this.y54_1.e3l();
            var tmp_5 = JsType_getInstance();
            var tmp_6 = getKClass(OutcomeCode);
            var tmp_7;
            try {
              tmp_7 = createKType(getKClass(OutcomeCode), arrayOf([]), false);
            } catch ($p) {
              var tmp_8;
              if ($p instanceof Error) {
                var cause = $p;
                tmp_8 = null;
              } else {
                throw $p;
              }
              tmp_7 = tmp_8;
            }

            suspendResult = tmp_4.h3k(typeInfoImpl(tmp_5, tmp_6, tmp_7), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 3:
            var tmp_9 = this;
            tmp_9.z54_1 = suspendResult instanceof OutcomeCode ? suspendResult : THROW_CCE();
            this.a55_1 = this.y54_1.j3k();
            var tmp_10 = this;
            var tmp_11;
            if (this.a55_1.equals(Companion_getInstance_2().v21_1)) {
              var tmp_12 = get_logger();
              tmp_12.h4r(submitLogout$lambda_0(this.a55_1, this.z54_1));
              tmp_11 = Unit_getInstance();
            } else {
              var tmp_13 = get_logger();
              tmp_13.i4r(submitLogout$lambda_1(this.a55_1, this.z54_1));
              displayAlert(this.u54_1, this.z54_1, CryptoACAlertSeverity_ERROR_getInstance());
              tmp_11 = Unit_getInstance();
            }

            tmp_10.v54_1 = tmp_11;
            this.yh_1 = 9;
            this.xh_1 = 7;
            continue $sm;
          case 4:
            this.yh_1 = 5;
            var tmp_14 = this.ai_1;
            if (tmp_14 instanceof Error_0) {
              this.b55_1 = this.ai_1;
              var tmp_15 = this;
              var tmp_16 = get_logger();
              tmp_16.j4r(submitLogout$lambda_2(this.b55_1));
              console.log(this.b55_1);
              displayAlert(this.u54_1, OutcomeCode_CODE_049_UNEXPECTED_getInstance(), CryptoACAlertSeverity_ERROR_getInstance());
              tmp_15.v54_1 = Unit_getInstance();
              this.yh_1 = 9;
              this.xh_1 = 7;
              continue $sm;
            } else {
              throw this.ai_1;
            }

            break;
          case 5:
            this.yh_1 = 9;
            this.c55_1 = this.ai_1;
            this.xh_1 = 6;
            suspendResult = resetAppState(this.u54_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 6:
            throw this.c55_1;
          case 7:
            this.xh_1 = 8;
            suspendResult = resetAppState(this.u54_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 8:
            return Unit_getInstance();
          case 9:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 9) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  function $changeUserIsLoggedCOROUTINE$5(state, newUserIsLogged, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.l55_1 = state;
    this.m55_1 = newUserIsLogged;
  }
  protoOf($changeUserIsLoggedCOROUTINE$5).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 5;
            var tmp_0 = get_logger();
            tmp_0.h4r(changeUserIsLogged$lambda(this.m55_1));
            this.l55_1.g52_1 = this.m55_1;
            if (this.m55_1) {
              var tmp_1 = this;
              tmp_1.n55_1 = HashMap_init_$Create$();
              var tmp_2 = this;
              tmp_2.o55_1 = values_1();
              this.p55_1 = arrayIterator(this.o55_1);
              this.xh_1 = 1;
              continue $sm;
            } else {
              var tmp_3 = this.l55_1;
              tmp_3.k52_1 = HashMap_init_$Create$();
              var tmp_4 = this.l55_1;
              tmp_4.l52_1 = emptyList();
              this.xh_1 = 4;
              continue $sm;
            }

            break;
          case 1:
            if (!this.p55_1.g()) {
              this.xh_1 = 3;
              continue $sm;
            }

            this.q55_1 = this.p55_1.h();
            var tmp_5 = get_logger();
            tmp_5.h4r(changeUserIsLogged$lambda_0(this.q55_1));
            this.xh_1 = 2;
            suspendResult = getProfileFromCryptoAC(this.l55_1, VOID, this.q55_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            var tmp0_safe_receiver = suspendResult;
            if (tmp0_safe_receiver == null)
              null;
            else {
              var tmp_6 = get_logger();
              tmp_6.h4r(changeUserIsLogged$lambda_1);
              this.n55_1.y2(this.q55_1, tmp0_safe_receiver);
            }

            ;
            this.xh_1 = 1;
            continue $sm;
          case 3:
            if (!this.n55_1.l()) {
              this.l55_1.k52_1 = this.n55_1;
              changeCoreType(this.l55_1, first(this.n55_1.z1()));
              computeSidebarButtonsAndIndex(this.l55_1, this.n55_1);
              changeUIType(this.l55_1, UIType_CoreType_getInstance());
            }

            this.xh_1 = 4;
            continue $sm;
          case 4:
            return Unit_getInstance();
          case 5:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 5) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  function $getProfileFromCryptoACCOROUTINE$6(state, username, coreType, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.z55_1 = state;
    this.a56_1 = username;
    this.b56_1 = coreType;
  }
  protoOf($getProfileFromCryptoACCOROUTINE$6).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 5;
            var tmp_0 = this;
            var tmp_1 = get_baseURL();
            API_getInstance();
            tmp_0.c56_1 = tmp_1 + replace('/v1/profile/{Core}/', '{Core}', toString(this.b56_1)) + this.a56_1;
            var tmp_2 = get_logger();
            tmp_2.h4r(getProfileFromCryptoAC$lambda(this.a56_1, this.b56_1));
            var tmp_3 = this;
            tmp_3.d56_1 = this.z55_1.i52_1;
            var tmp_4 = this;
            var tmp0_apply = new HttpRequestBuilder();
            url(tmp0_apply, this.c56_1);
            ;
            tmp_4.e56_1 = tmp0_apply;
            this.e56_1.x3h_1 = Companion_getInstance().b21_1;
            this.xh_1 = 1;
            suspendResult = (new HttpStatement(this.e56_1, this.d56_1)).o4i(this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.f56_1 = suspendResult;
            this.g56_1 = this.f56_1.j3k();
            if (this.g56_1.equals(Companion_getInstance_2().v21_1)) {
              var tmp_5 = get_logger();
              tmp_5.h4r(getProfileFromCryptoAC$lambda_0(this.g56_1));
              this.xh_1 = 3;
              suspendResult = bodyAsText(this.f56_1, VOID, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.xh_1 = 2;
              suspendResult = bodyAsText(this.f56_1, VOID, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            }

            break;
          case 2:
            var text = suspendResult;
            var tmp8_decodeFromString = get_myJson();
            var tmp7_serializer = tmp8_decodeFromString.w2j();
            var tmp6_cast = serializer_0(tmp7_serializer, createKType(getKClass(OutcomeCode), arrayOf([]), false));
            var outcomeCode = tmp8_decodeFromString.v2j(isInterface(tmp6_cast, KSerializer) ? tmp6_cast : THROW_CCE(), text);
            var tmp_6 = get_logger();
            tmp_6.i4r(getProfileFromCryptoAC$lambda_1(this.g56_1, outcomeCode));
            if (!outcomeCode.equals(OutcomeCode_CODE_039_PROFILE_NOT_FOUND_getInstance())) {
              displayAlert(this.z55_1, outcomeCode, CryptoACAlertSeverity_ERROR_getInstance());
            }

            this.h56_1 = null;
            this.xh_1 = 4;
            continue $sm;
          case 3:
            var profileAsString = suspendResult;
            var tmp_7 = this;
            var tmp5_decodeFromString = get_myJson();
            var tmp4_serializer = tmp5_decodeFromString.w2j();
            var tmp3_cast = serializer_0(tmp4_serializer, createKType(getKClass(CoreParameters), arrayOf([]), false));
            tmp_7.h56_1 = tmp5_decodeFromString.v2j(isInterface(tmp3_cast, KSerializer) ? tmp3_cast : THROW_CCE(), profileAsString);
            this.xh_1 = 4;
            continue $sm;
          case 4:
            return this.h56_1;
          case 5:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 5) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  var properties_initialized_App_kt_kalemn;
  function _init_properties_App_kt__fk8usv() {
    if (properties_initialized_App_kt_kalemn) {
    } else {
      properties_initialized_App_kt_kalemn = true;
      var tmp = KotlinLogging_getInstance();
      logger_0 = tmp.b4r(logger$lambda_0);
      App = FC(App$lambda);
    }
  }
  function get_Login() {
    _init_properties_Login_kt__3d35vb();
    return Login;
  }
  var Login;
  function Login$lambda($this$FC, props) {
    _init_properties_Login_kt__3d35vb();
    var tmp$ret$3;
    // Inline function 'react.dom.html.ReactHTML.div' call
    var tmp0__get_div__2k2o9m = ReactHTML_getInstance();
    var tmp$ret$2;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = 'div';
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    var tmp = tmp$ret$3;
    $this$FC.x4r(tmp, Login$lambda$lambda(props));
    return Unit_getInstance();
  }
  function Login$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda($props) {
    return function (method, endpoint, values, _anonymous_parameter_3__qggqen) {
      $props.handleSubmitLoginProp(method, endpoint, values);
      return Unit_getInstance();
    };
  }
  function Login$lambda$lambda$lambda$lambda$lambda$lambda$lambda($props) {
    return function ($this$invoke) {
      $this$invoke.handleDisplayAlertProp = $props.handleDisplayAlertProp;
      $this$invoke.submitButtonTextProp = 'Login';
      $this$invoke.methodProp = Companion_getInstance().c21_1;
      API_getInstance();
      $this$invoke.endpointProp = '/login/';
      $this$invoke.handleSubmitEventProp = Login$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda($props);
      SERVER_getInstance();
      var tmp0_name = 'Username';
      SERVER_getInstance();
      var tmp1_label = 'Username';
      var tmp2_type = InputType_text_getInstance();
      $this$invoke.cryptoACFormFieldsProp = listOf_0(listOf_0(new CryptoACFormField(tmp0_name, tmp1_label, tmp2_type, VOID, VOID, 'darkTextField')));
      return Unit_getInstance();
    };
  }
  function Login$lambda$lambda$lambda$lambda$lambda$lambda($props) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$9;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$8;
      // Inline function 'js.core.jso' call
      var tmp$ret$7;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.Login.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'csstype.pct' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '15%';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.marginLeft = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.pct' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '15%';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      tmp0_apply.marginRight = tmp$ret$6;
      tmp$ret$7 = tmp0_apply;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = css(tmp$ret$8);
      tmp1_css.className = tmp$ret$9;
      var tmp = get_CryptoACForm();
      $this$invoke.x4r(tmp, Login$lambda$lambda$lambda$lambda$lambda$lambda$lambda($props));
      return Unit_getInstance();
    };
  }
  function Login$lambda$lambda$lambda$lambda$lambda($props) {
    return function ($this$FC, it) {
      var tmp$ret$3;
      // Inline function 'react.dom.html.ReactHTML.div' call
      var tmp0__get_div__2k2o9m = ReactHTML_getInstance();
      var tmp$ret$2;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = 'div';
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp = tmp$ret$3;
      $this$FC.x4r(tmp, Login$lambda$lambda$lambda$lambda$lambda$lambda($props));
      return Unit_getInstance();
    };
  }
  function Login$lambda$lambda$lambda$lambda($props) {
    return function ($this$invoke) {
      $this$invoke.titleStyleProp = Themes_getInstance().h58_1;
      $this$invoke.titleTextProp = 'Login to CryptoAC';
      $this$invoke.titleVariantProp = 'h5';
      $this$invoke.setDividerProp = true;
      var tmp$ret$2;
      // Inline function 'csstype.pct' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '80%';
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = tmp0_unsafeCast;
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      $this$invoke.dividerWidthProp = tmp$ret$2;
      $this$invoke.childProp = create(FC(Login$lambda$lambda$lambda$lambda$lambda($props)));
      return Unit_getInstance();
    };
  }
  function Login$lambda$lambda$lambda($props) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$24;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$23;
      // Inline function 'js.core.jso' call
      var tmp$ret$22;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.Login.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      tmp0_apply.position = (/*union*/{absolute: 'absolute', fixed: 'fixed', relative: 'relative', static: 'static', sticky: 'sticky'}/*union*/).fixed;
      var tmp$ret$3;
      // Inline function 'csstype.pct' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '50%';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.top = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.pct' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '50%';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      tmp0_apply.left = tmp$ret$6;
      var tmp$ret$15;
      // Inline function 'csstype.translate' call
      var tmp$ret$9;
      // Inline function 'csstype.pct' call
      var tmp$ret$8;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp2_unsafeCast = '-50%';
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = tmp2_unsafeCast;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      var tmp5_translate = tmp$ret$9;
      var tmp$ret$12;
      // Inline function 'csstype.pct' call
      var tmp$ret$11;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp3_unsafeCast = '-50%';
      var tmp$ret$10;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$10 = tmp3_unsafeCast;
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = tmp$ret$11;
      var tmp6_translate = tmp$ret$12;
      var tmp$ret$14;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp4_unsafeCast = 'translate(' + tmp5_translate + ',' + tmp6_translate + ')';
      var tmp$ret$13;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$13 = tmp4_unsafeCast;
      tmp$ret$14 = tmp$ret$13;
      tmp$ret$15 = tmp$ret$14;
      tmp0_apply.transform = tmp$ret$15;
      tmp0_apply.textAlign = (/*union*/{center: 'center', end: 'end', justify: 'justify', left: 'left', matchParent: 'match-parent', right: 'right', start: 'start'}/*union*/).center;
      var tmp$ret$18;
      // Inline function 'csstype.pct' call
      var tmp$ret$17;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp7_unsafeCast = '35%';
      var tmp$ret$16;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$16 = tmp7_unsafeCast;
      tmp$ret$17 = tmp$ret$16;
      tmp$ret$18 = tmp$ret$17;
      tmp0_apply.width = tmp$ret$18;
      var tmp$ret$21;
      // Inline function 'csstype.pct' call
      var tmp$ret$20;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp8_unsafeCast = '30%';
      var tmp$ret$19;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$19 = tmp8_unsafeCast;
      tmp$ret$20 = tmp$ret$19;
      tmp$ret$21 = tmp$ret$20;
      tmp0_apply.height = tmp$ret$21;
      tmp$ret$22 = tmp0_apply;
      tmp$ret$23 = tmp$ret$22;
      tmp$ret$24 = css(tmp$ret$23);
      tmp1_css.className = tmp$ret$24;
      var tmp = get_CryptoACPaper();
      $this$invoke.x4r(tmp, Login$lambda$lambda$lambda$lambda($props));
      return Unit_getInstance();
    };
  }
  function Login$lambda$lambda($props) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$12;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$11;
      // Inline function 'js.core.jso' call
      var tmp$ret$10;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.Login.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'csstype.pct' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '100%';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.height = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.pct' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '100%';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      tmp0_apply.width = tmp$ret$6;
      var tmp$ret$9;
      // Inline function 'csstype.url' call
      var tmp$ret$8;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp2_unsafeCast = 'url(fbk_background.jpg)';
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = tmp2_unsafeCast;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      tmp0_apply.backgroundImage = tmp$ret$9;
      tmp0_apply.backgroundPositionX = (/*union*/{center: 'center', left: 'left', right: 'right', xEnd: 'x-end', xStart: 'x-start'}/*union*/).center;
      tmp0_apply.backgroundPositionY = (/*union*/{bottom: 'bottom', center: 'center', top: 'top', yEnd: 'y-end', yStart: 'y-start'}/*union*/).center;
      tmp0_apply.backgroundRepeat = (/*union*/{noRepeat: 'no-repeat', repeat: 'repeat', repeatX: 'repeat-x', repeatY: 'repeat-y', round: 'round', space: 'space'}/*union*/).noRepeat;
      tmp0_apply.backgroundSize = (/*union*/{contain: 'contain', cover: 'cover'}/*union*/).cover;
      tmp$ret$10 = tmp0_apply;
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = css(tmp$ret$11);
      tmp1_css.className = tmp$ret$12;
      var tmp$ret$16;
      // Inline function 'react.dom.html.ReactHTML.div' call
      var tmp2__get_div__e5gx5o = ReactHTML_getInstance();
      var tmp$ret$15;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$14;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$13;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$13 = 'div';
      tmp$ret$14 = tmp$ret$13;
      tmp$ret$15 = tmp$ret$14;
      tmp$ret$16 = tmp$ret$15;
      var tmp = tmp$ret$16;
      $this$invoke.x4r(tmp, Login$lambda$lambda$lambda($props));
      return Unit_getInstance();
    };
  }
  var properties_initialized_Login_kt_fsh261;
  function _init_properties_Login_kt__3d35vb() {
    if (properties_initialized_Login_kt_fsh261) {
    } else {
      properties_initialized_Login_kt_fsh261 = true;
      Login = FC(Login$lambda);
    }
  }
  function get_baseURL() {
    _init_properties_Main_kt__xi25uv();
    return baseURL;
  }
  var baseURL;
  function main() {
    _init_properties_Main_kt__xi25uv();
    KotlinLoggingConfiguration_getInstance().c4r_1 = KotlinLoggingLevel_DEBUG_getInstance();
    require('./prosidebar.css');
    var container = ensureNotNull(document.getElementById('root'));
    createRoot(container).render(create(get_App()));
  }
  var properties_initialized_Main_kt_gqj46d;
  function _init_properties_Main_kt__xi25uv() {
    if (properties_initialized_Main_kt_gqj46d) {
    } else {
      properties_initialized_Main_kt_gqj46d = true;
      baseURL = window.location.protocol + '//' + window.location.host;
    }
  }
  function Themes() {
    Themes_instance = this;
    this.b58_1 = '#f7f7f7';
    this.c58_1 = '#95a5a6';
    this.d58_1 = '#676767';
    this.e58_1 = '#34495e';
    this.f58_1 = 'linear-gradient(to right, rgb(142, 68, 173), rgb(172, 98, 203))';
    this.g58_1 = JSON.parse('{\n                                         "paddingTop": "5px",\n                                         "paddingBottom": "5px",\n                                         "color": "#3C4858"\n                                     }');
    this.h58_1 = JSON.parse('{\n                                         "paddingTop": "20px",\n                                         "paddingBottom": "20px",\n                                         "color": "#3C4858"\n                                     }');
  }
  var Themes_instance;
  function Themes_getInstance() {
    if (Themes_instance == null)
      new Themes();
    return Themes_instance;
  }
  function get_CryptoACAlert() {
    _init_properties_CryptoACAlert_kt__5jnvd3();
    return CryptoACAlert;
  }
  var CryptoACAlert;
  var CryptoACAlertSeverity_SUCCESS_instance;
  var CryptoACAlertSeverity_WARNING_instance;
  var CryptoACAlertSeverity_INFO_instance;
  var CryptoACAlertSeverity_ERROR_instance;
  var CryptoACAlertSeverity_entriesInitialized;
  function CryptoACAlertSeverity_initEntries() {
    if (CryptoACAlertSeverity_entriesInitialized)
      return Unit_getInstance();
    CryptoACAlertSeverity_entriesInitialized = true;
    CryptoACAlertSeverity_SUCCESS_instance = new CryptoACAlertSeverity('SUCCESS', 0);
    CryptoACAlertSeverity_WARNING_instance = new CryptoACAlertSeverity('WARNING', 1);
    CryptoACAlertSeverity_INFO_instance = new CryptoACAlertSeverity('INFO', 2);
    CryptoACAlertSeverity_ERROR_instance = new CryptoACAlertSeverity('ERROR', 3);
  }
  function CryptoACAlertSeverity(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function CryptoACAlert$lambda($this$FC, props) {
    _init_properties_CryptoACAlert_kt__5jnvd3();
    var tmp = Snackbar;
    $this$FC.x4r(tmp, CryptoACAlert$lambda$lambda(props));
    return Unit_getInstance();
  }
  function CryptoACAlert$lambda$lambda$lambda($props) {
    return function (event, _anonymous_parameter_1__qggqgd) {
      $props.handleCloseProp(event);
      return Unit_getInstance();
    };
  }
  function CryptoACAlert$lambda$lambda$lambda$lambda($props) {
    return function (event) {
      $props.handleCloseProp(event);
      return Unit_getInstance();
    };
  }
  function CryptoACAlert$lambda$lambda$lambda_0($props) {
    return function ($this$invoke) {
      var tmp$ret$1;
      // Inline function 'kotlin.text.lowercase' call
      var tmp0_lowercase = $props.severityProp.toString();
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = tmp0_lowercase;
      tmp$ret$1 = tmp$ret$0.toLowerCase();
      $this$invoke.severity = tmp$ret$1;
      $this$invoke.onClose = CryptoACAlert$lambda$lambda$lambda$lambda($props);
      $this$invoke.w4r($props.messageProp);
      return Unit_getInstance();
    };
  }
  function CryptoACAlert$lambda$lambda($props) {
    return function ($this$invoke) {
      $this$invoke.open = $props.openProp;
      $this$invoke.autoHideDuration = $props.severityProp.equals(CryptoACAlertSeverity_SUCCESS_getInstance()) ? 4000 : null;
      $this$invoke.onClose = CryptoACAlert$lambda$lambda$lambda($props);
      var tmp = Alert;
      $this$invoke.x4r(tmp, CryptoACAlert$lambda$lambda$lambda_0($props));
      return Unit_getInstance();
    };
  }
  function CryptoACAlertSeverity_SUCCESS_getInstance() {
    CryptoACAlertSeverity_initEntries();
    return CryptoACAlertSeverity_SUCCESS_instance;
  }
  function CryptoACAlertSeverity_WARNING_getInstance() {
    CryptoACAlertSeverity_initEntries();
    return CryptoACAlertSeverity_WARNING_instance;
  }
  function CryptoACAlertSeverity_INFO_getInstance() {
    CryptoACAlertSeverity_initEntries();
    return CryptoACAlertSeverity_INFO_instance;
  }
  function CryptoACAlertSeverity_ERROR_getInstance() {
    CryptoACAlertSeverity_initEntries();
    return CryptoACAlertSeverity_ERROR_instance;
  }
  var properties_initialized_CryptoACAlert_kt_muqojb;
  function _init_properties_CryptoACAlert_kt__5jnvd3() {
    if (properties_initialized_CryptoACAlert_kt_muqojb) {
    } else {
      properties_initialized_CryptoACAlert_kt_muqojb = true;
      CryptoACAlert = FC(CryptoACAlert$lambda);
    }
  }
  function get_CryptoACButtonAndIcon() {
    _init_properties_CryptoACButtonAndIcon_kt__6ofq89();
    return CryptoACButtonAndIcon;
  }
  var CryptoACButtonAndIcon;
  function CryptoACButtonAndIconData(icon, text, showText, onClick) {
    this.i58_1 = icon;
    this.j58_1 = text;
    this.k58_1 = showText;
    this.l58_1 = onClick;
  }
  protoOf(CryptoACButtonAndIconData).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CryptoACButtonAndIconData))
      return false;
    if (!equals(this.i58_1, other.i58_1))
      return false;
    if (!(this.j58_1 === other.j58_1))
      return false;
    if (!(this.k58_1 === other.k58_1))
      return false;
    return equals(this.l58_1, other.l58_1);
  };
  protoOf(CryptoACButtonAndIconData).hashCode = function () {
    var tmp$ret$0;
    // Inline function 'kotlin.hashCode' call
    var tmp0_hashCode = this.i58_1.key;
    var tmp0_safe_receiver = tmp0_hashCode;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
    tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    var result = tmp$ret$0;
    result = imul(31, result) + getStringHashCode(this.j58_1) | 0;
    result = imul(31, result) + (this.k58_1 | 0) | 0;
    return result;
  };
  protoOf(CryptoACButtonAndIconData).toString = function () {
    return 'CryptoACButtonAndIconData(icon=' + this.i58_1 + ', text=' + this.j58_1 + ', showText=' + this.k58_1 + ', onClick=' + this.l58_1 + ')';
  };
  function CryptoACButtonAndIcon$lambda($this$FC, props) {
    _init_properties_CryptoACButtonAndIcon_kt__6ofq89();
    var tmp = Button;
    $this$FC.x4r(tmp, CryptoACButtonAndIcon$lambda$lambda(props));
    return Unit_getInstance();
  }
  function CryptoACButtonAndIcon$lambda$lambda$lambda($props) {
    return function (event) {
      $props.onClickProp(event);
      return Unit_getInstance();
    };
  }
  function CryptoACButtonAndIcon$lambda$lambda$lambda_0($this$invoke) {
    _init_properties_CryptoACButtonAndIcon_kt__6ofq89();
    // Inline function 'emotion.react.css' call
    var tmp1_css = $this$invoke;
    var tmp$ret$3;
    // Inline function 'emotion.css.ClassName' call
    var tmp$ret$2;
    // Inline function 'js.core.jso' call
    var tmp$ret$1;
    // Inline function 'kotlin.apply' call
    var tmp$ret$0;
    // Inline function 'js.core.jso' call
    tmp$ret$0 = {};
    var tmp0_apply = tmp$ret$0;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'eu.fbk.st.cryptoac.view.components.custom.CryptoACButtonAndIcon.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
    tmp0_apply.marginLeft = (/*union*/{auto: 'auto'}/*union*/).auto;
    tmp$ret$1 = tmp0_apply;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = css(tmp$ret$2);
    tmp1_css.className = tmp$ret$3;
    $this$invoke.w4r('');
    return Unit_getInstance();
  }
  function CryptoACButtonAndIcon$lambda$lambda($props) {
    return function ($this$invoke) {
      $this$invoke.variant = 'text';
      var tmp = JSON;
      var tmp_0 = $props.showTextProp ? ' "width": "90%", ' : '';
      var tmp_1;
      if ($props.highlightedProp) {
        Themes_getInstance();
        tmp_1 = ' "backgroundImage": "' + 'linear-gradient(to right, rgb(142, 68, 173), rgb(172, 98, 203))' + '", ';
      } else {
        tmp_1 = '';
      }
      var tmp_2 = tmp_1;
      var tmp_3;
      if ($props.highlightedProp) {
        tmp_3 = 'white';
      } else {
        Themes_getInstance();
        tmp_3 = '#676767';
      }
      $this$invoke.style = tmp.parse(trimMargin('{\n            "margin": "5px",\n            ' + tmp_0 + '\n            ' + tmp_2 + '\n            "color": "' + tmp_3 + '"\n        }'));
      $this$invoke.onClick = CryptoACButtonAndIcon$lambda$lambda$lambda($props);
      $this$invoke.u4r($props.iconProp);
      var tmp_4;
      if ($props.showTextProp) {
        $this$invoke.w4r($props.textProp);
        var tmp$ret$3;
        // Inline function 'react.dom.html.ReactHTML.span' call
        var tmp0__get_span__8hjtqf = ReactHTML_getInstance();
        var tmp$ret$2;
        // Inline function 'react.IntrinsicType' call
        var tmp$ret$1;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp$ret$0;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$0 = 'span';
        tmp$ret$1 = tmp$ret$0;
        tmp$ret$2 = tmp$ret$1;
        tmp$ret$3 = tmp$ret$2;
        var tmp_5 = tmp$ret$3;
        $this$invoke.x4r(tmp_5, CryptoACButtonAndIcon$lambda$lambda$lambda_0);
        tmp_4 = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  var properties_initialized_CryptoACButtonAndIcon_kt_9mo6ff;
  function _init_properties_CryptoACButtonAndIcon_kt__6ofq89() {
    if (properties_initialized_CryptoACButtonAndIcon_kt_9mo6ff) {
    } else {
      properties_initialized_CryptoACButtonAndIcon_kt_9mo6ff = true;
      CryptoACButtonAndIcon = FC(CryptoACButtonAndIcon$lambda);
    }
  }
  function get_logger_0() {
    _init_properties_CryptoACButtonAndIconGroup_kt__hzgk0s();
    return logger_1;
  }
  var logger_1;
  function get_CryptoACButtonAndIconGroup() {
    _init_properties_CryptoACButtonAndIconGroup_kt__hzgk0s();
    return CryptoACButtonAndIconGroup;
  }
  var CryptoACButtonAndIconGroup;
  function calculateHashCode(_this__u8e3s4) {
    _init_properties_CryptoACButtonAndIconGroup_kt__hzgk0s();
    var result = _this__u8e3s4.defaultSelectedButtonProp;
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_forEach = _this__u8e3s4.buttonsProp;
    var tmp0_iterator = tmp0_forEach.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      // Inline function 'eu.fbk.st.cryptoac.view.components.custom.calculateHashCode.<anonymous>' call
      result = imul(31, result) + element.hashCode() | 0;
    }
    return result;
  }
  function CryptoACButtonAndIconGroupState(selectedButtonState, justMountedState, propsHashState) {
    selectedButtonState = selectedButtonState === VOID ? 0 : selectedButtonState;
    justMountedState = justMountedState === VOID ? true : justMountedState;
    propsHashState = propsHashState === VOID ? 0 : propsHashState;
    this.m58_1 = selectedButtonState;
    this.n58_1 = justMountedState;
    this.o58_1 = propsHashState;
  }
  protoOf(CryptoACButtonAndIconGroupState).p58 = function (selectedButtonState, justMountedState, propsHashState) {
    return new CryptoACButtonAndIconGroupState(selectedButtonState, justMountedState, propsHashState);
  };
  protoOf(CryptoACButtonAndIconGroupState).q58 = function (selectedButtonState, justMountedState, propsHashState, $super) {
    selectedButtonState = selectedButtonState === VOID ? this.m58_1 : selectedButtonState;
    justMountedState = justMountedState === VOID ? this.n58_1 : justMountedState;
    propsHashState = propsHashState === VOID ? this.o58_1 : propsHashState;
    return $super === VOID ? this.p58(selectedButtonState, justMountedState, propsHashState) : $super.p58.call(this, selectedButtonState, justMountedState, propsHashState);
  };
  protoOf(CryptoACButtonAndIconGroupState).toString = function () {
    return 'CryptoACButtonAndIconGroupState(selectedButtonState=' + this.m58_1 + ', justMountedState=' + this.n58_1 + ', propsHashState=' + this.o58_1 + ')';
  };
  protoOf(CryptoACButtonAndIconGroupState).hashCode = function () {
    var result = this.m58_1;
    result = imul(result, 31) + (this.n58_1 | 0) | 0;
    result = imul(result, 31) + this.o58_1 | 0;
    return result;
  };
  protoOf(CryptoACButtonAndIconGroupState).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CryptoACButtonAndIconGroupState))
      return false;
    var tmp0_other_with_cast = other instanceof CryptoACButtonAndIconGroupState ? other : THROW_CCE();
    if (!(this.m58_1 === tmp0_other_with_cast.m58_1))
      return false;
    if (!(this.n58_1 === tmp0_other_with_cast.n58_1))
      return false;
    if (!(this.o58_1 === tmp0_other_with_cast.o58_1))
      return false;
    return true;
  };
  function getStateFromProps(props, oldState) {
    oldState = oldState === VOID ? new CryptoACButtonAndIconGroupState() : oldState;
    _init_properties_CryptoACButtonAndIconGroup_kt__hzgk0s();
    var propsHash = calculateHashCode(props);
    if (oldState.n58_1 ? true : !(oldState.o58_1 === propsHash)) {
      oldState.o58_1 = propsHash;
      oldState.m58_1 = props.defaultSelectedButtonProp;
      oldState.n58_1 = false;
    }
    return oldState.q58();
  }
  function logger$lambda_1() {
    _init_properties_CryptoACButtonAndIconGroup_kt__hzgk0s();
    return Unit_getInstance();
  }
  function CryptoACButtonAndIconGroup$lambda($this$FC, props) {
    _init_properties_CryptoACButtonAndIconGroup_kt__hzgk0s();
    var state$delegate = useState(getStateFromProps(props));
    useEffect([props], CryptoACButtonAndIconGroup$lambda$lambda(props, state$delegate));
    var tmp$ret$3;
    // Inline function 'react.dom.html.ReactHTML.div' call
    var tmp0__get_div__2k2o9m = ReactHTML_getInstance();
    var tmp$ret$2;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = 'div';
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    var tmp = tmp$ret$3;
    $this$FC.x4r(tmp, CryptoACButtonAndIconGroup$lambda$lambda_0(props, state$delegate));
    return Unit_getInstance();
  }
  function invoke$lambda_1($state$delegate) {
    _init_properties_CryptoACButtonAndIconGroup_kt__hzgk0s();
    var tmp$ret$2;
    // Inline function 'react.StateInstance.getValue' call
    var tmp1_getValue = getLocalDelegateReference('state', KMutableProperty0, true, function () {
      return THROW_ISE();
    });
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = $state$delegate;
    var tmp0_unsafeCast = tmp$ret$0[0];
    tmp$ret$1 = tmp0_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  }
  function invoke$lambda_2($state$delegate, value) {
    _init_properties_CryptoACButtonAndIconGroup_kt__hzgk0s();
    var tmp1_setValue = getLocalDelegateReference('state', KMutableProperty0, true, function () {
      return THROW_ISE();
    });
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = $state$delegate;
    var tmp0_unsafeCast = tmp$ret$0[1];
    tmp$ret$1 = tmp0_unsafeCast;
    return tmp$ret$1(value);
  }
  function CryptoACButtonAndIconGroup$lambda$lambda($props, $state$delegate) {
    return function ($this$useEffect) {
      invoke$lambda_2($state$delegate, getStateFromProps($props, invoke$lambda_1($state$delegate)));
      return Unit_getInstance();
    };
  }
  function CryptoACButtonAndIconGroup$lambda$lambda$lambda$lambda$lambda($tmp1__anonymous__6ijp4k) {
    return function () {
      return "Setting the 'selectedButton' state to " + $tmp1__anonymous__6ijp4k;
    };
  }
  function CryptoACButtonAndIconGroup$lambda$lambda$lambda$lambda($tmp1__anonymous__6ijp4k, $item, $state$delegate) {
    return function (event) {
      var tmp = get_logger_0();
      tmp.h4r(CryptoACButtonAndIconGroup$lambda$lambda$lambda$lambda$lambda($tmp1__anonymous__6ijp4k));
      invoke$lambda_2($state$delegate, invoke$lambda_1($state$delegate).q58($tmp1__anonymous__6ijp4k));
      $item.l58_1(event);
      return Unit_getInstance();
    };
  }
  function CryptoACButtonAndIconGroup$lambda$lambda$lambda($item, $tmp1__anonymous__6ijp4k, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.iconProp = $item.i58_1;
      $this$invoke.textProp = $item.j58_1;
      $this$invoke.showTextProp = $item.k58_1;
      $this$invoke.onClickProp = CryptoACButtonAndIconGroup$lambda$lambda$lambda$lambda($tmp1__anonymous__6ijp4k, $item, $state$delegate);
      $this$invoke.highlightedProp = invoke$lambda_1($state$delegate).m58_1 === $tmp1__anonymous__6ijp4k;
      return Unit_getInstance();
    };
  }
  function CryptoACButtonAndIconGroup$lambda$lambda_0($props, $state$delegate) {
    return function ($this$invoke) {
      var tmp0_forEachIndexed = $props.buttonsProp;
      var index = 0;
      var tmp0_iterator = tmp0_forEachIndexed.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        // Inline function 'eu.fbk.st.cryptoac.view.components.custom.CryptoACButtonAndIconGroup.<anonymous>.<anonymous>.<anonymous>' call
        var tmp1 = index;
        index = tmp1 + 1 | 0;
        var tmp1__anonymous__uwfjfc = checkIndexOverflow(tmp1);
        $this$invoke.key = item.j58_1;
        var tmp = get_CryptoACButtonAndIcon();
        $this$invoke.x4r(tmp, CryptoACButtonAndIconGroup$lambda$lambda$lambda(item, tmp1__anonymous__uwfjfc, $state$delegate));
      }
      return Unit_getInstance();
    };
  }
  var properties_initialized_CryptoACButtonAndIconGroup_kt_kn5pru;
  function _init_properties_CryptoACButtonAndIconGroup_kt__hzgk0s() {
    if (properties_initialized_CryptoACButtonAndIconGroup_kt_kn5pru) {
    } else {
      properties_initialized_CryptoACButtonAndIconGroup_kt_kn5pru = true;
      var tmp = KotlinLogging_getInstance();
      logger_1 = tmp.b4r(logger$lambda_1);
      CryptoACButtonAndIconGroup = FC(CryptoACButtonAndIconGroup$lambda);
    }
  }
  function get_CryptoACCheckbox() {
    _init_properties_CryptoACCheckbox_kt__kpe7qe();
    return CryptoACCheckbox;
  }
  var CryptoACCheckbox;
  function get_divider() {
    return divider;
  }
  var divider;
  function CryptoACCheckboxState(valueState, changedByUserState, justMountedState) {
    valueState = valueState === VOID ? '' : valueState;
    changedByUserState = changedByUserState === VOID ? false : changedByUserState;
    justMountedState = justMountedState === VOID ? true : justMountedState;
    this.r58_1 = valueState;
    this.s58_1 = changedByUserState;
    this.t58_1 = justMountedState;
  }
  protoOf(CryptoACCheckboxState).u58 = function (valueState, changedByUserState, justMountedState) {
    return new CryptoACCheckboxState(valueState, changedByUserState, justMountedState);
  };
  protoOf(CryptoACCheckboxState).v58 = function (valueState, changedByUserState, justMountedState, $super) {
    valueState = valueState === VOID ? this.r58_1 : valueState;
    changedByUserState = changedByUserState === VOID ? this.s58_1 : changedByUserState;
    justMountedState = justMountedState === VOID ? this.t58_1 : justMountedState;
    return $super === VOID ? this.u58(valueState, changedByUserState, justMountedState) : $super.u58.call(this, valueState, changedByUserState, justMountedState);
  };
  protoOf(CryptoACCheckboxState).toString = function () {
    return 'CryptoACCheckboxState(valueState=' + this.r58_1 + ', changedByUserState=' + this.s58_1 + ', justMountedState=' + this.t58_1 + ')';
  };
  protoOf(CryptoACCheckboxState).hashCode = function () {
    var result = getStringHashCode(this.r58_1);
    result = imul(result, 31) + (this.s58_1 | 0) | 0;
    result = imul(result, 31) + (this.t58_1 | 0) | 0;
    return result;
  };
  protoOf(CryptoACCheckboxState).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CryptoACCheckboxState))
      return false;
    var tmp0_other_with_cast = other instanceof CryptoACCheckboxState ? other : THROW_CCE();
    if (!(this.r58_1 === tmp0_other_with_cast.r58_1))
      return false;
    if (!(this.s58_1 === tmp0_other_with_cast.s58_1))
      return false;
    if (!(this.t58_1 === tmp0_other_with_cast.t58_1))
      return false;
    return true;
  };
  function getStateFromProps_0(props, oldState) {
    oldState = oldState === VOID ? new CryptoACCheckboxState() : oldState;
    _init_properties_CryptoACCheckbox_kt__kpe7qe();
    if (oldState.t58_1 ? true : !oldState.s58_1) {
      oldState.r58_1 = props.defaultValueProp + '4%&\xA3$5' + props.labelProp;
    }
    oldState.s58_1 = false;
    oldState.t58_1 = false;
    return oldState.v58();
  }
  function CryptoACCheckbox$lambda($this$FC, props) {
    _init_properties_CryptoACCheckbox_kt__kpe7qe();
    var state$delegate = useState(getStateFromProps_0(props));
    useEffect([props], CryptoACCheckbox$lambda$lambda(props, state$delegate));
    var tmp = FormControlLabel;
    $this$FC.x4r(tmp, CryptoACCheckbox$lambda$lambda_0(props, state$delegate));
    return Unit_getInstance();
  }
  function invoke$lambda_3($state$delegate) {
    _init_properties_CryptoACCheckbox_kt__kpe7qe();
    var tmp$ret$2;
    // Inline function 'react.StateInstance.getValue' call
    var tmp1_getValue = getLocalDelegateReference('state', KMutableProperty0, true, function () {
      return THROW_ISE();
    });
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = $state$delegate;
    var tmp0_unsafeCast = tmp$ret$0[0];
    tmp$ret$1 = tmp0_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  }
  function invoke$lambda_4($state$delegate, value) {
    _init_properties_CryptoACCheckbox_kt__kpe7qe();
    var tmp1_setValue = getLocalDelegateReference('state', KMutableProperty0, true, function () {
      return THROW_ISE();
    });
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = $state$delegate;
    var tmp0_unsafeCast = tmp$ret$0[1];
    tmp$ret$1 = tmp0_unsafeCast;
    return tmp$ret$1(value);
  }
  function CryptoACCheckbox$lambda$lambda($props, $state$delegate) {
    return function ($this$useEffect) {
      invoke$lambda_4($state$delegate, getStateFromProps_0($props, invoke$lambda_3($state$delegate)));
      return Unit_getInstance();
    };
  }
  function CryptoACCheckbox$lambda$lambda$lambda$lambda$lambda$lambda($props, $state$delegate) {
    return function (it) {
      var tmp0_$this = invoke$lambda_3($state$delegate);
      var tmp1_valueState = invoke$lambda_3($state$delegate).r58_1 === 'true4%&\xA3$5' + $props.labelProp ? 'false4%&\xA3$5' + $props.labelProp : 'true4%&\xA3$5' + $props.labelProp;
      invoke$lambda_4($state$delegate, tmp0_$this.v58(tmp1_valueState, true));
      return Unit_getInstance();
    };
  }
  function CryptoACCheckbox$lambda$lambda$lambda$lambda$lambda($props, $state$delegate) {
    return function ($this$attrs) {
      $this$attrs.disabled = $props.disabledProp;
      $this$attrs.value = invoke$lambda_3($state$delegate).r58_1;
      $this$attrs.checked = toBoolean(split(invoke$lambda_3($state$delegate).r58_1, ['4%&\xA3$5']).j(0));
      $this$attrs.onChange = CryptoACCheckbox$lambda$lambda$lambda$lambda$lambda$lambda($props, $state$delegate);
      return Unit_getInstance();
    };
  }
  function CryptoACCheckbox$lambda$lambda$lambda$lambda($props, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.q4r(CryptoACCheckbox$lambda$lambda$lambda$lambda$lambda($props, $state$delegate));
      return Unit_getInstance();
    };
  }
  function CryptoACCheckbox$lambda$lambda$lambda($props, $state$delegate) {
    return function ($this$createElement) {
      var tmp = Checkbox;
      $this$createElement.o4r(tmp, CryptoACCheckbox$lambda$lambda$lambda$lambda($props, $state$delegate));
      return Unit_getInstance();
    };
  }
  function CryptoACCheckbox$lambda$lambda_0($props, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.control = ensureNotNull(createElement(CryptoACCheckbox$lambda$lambda$lambda($props, $state$delegate)));
      $this$invoke.label = $props.labelProp;
      $this$invoke.value = $props.labelProp;
      $this$invoke.labelPlacement = 'start';
      return Unit_getInstance();
    };
  }
  var properties_initialized_CryptoACCheckbox_kt_80zjwo;
  function _init_properties_CryptoACCheckbox_kt__kpe7qe() {
    if (properties_initialized_CryptoACCheckbox_kt_80zjwo) {
    } else {
      properties_initialized_CryptoACCheckbox_kt_80zjwo = true;
      CryptoACCheckbox = FC(CryptoACCheckbox$lambda);
    }
  }
  function get_CryptoACDivider() {
    _init_properties_CryptoACDivider_kt__cc50w4();
    return CryptoACDivider;
  }
  var CryptoACDivider;
  function CryptoACDivider$lambda($this$FC, props) {
    _init_properties_CryptoACDivider_kt__cc50w4();
    var tmp$ret$3;
    // Inline function 'react.dom.html.ReactHTML.div' call
    var tmp0__get_div__2k2o9m = ReactHTML_getInstance();
    var tmp$ret$2;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = 'div';
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    var tmp = tmp$ret$3;
    $this$FC.x4r(tmp, CryptoACDivider$lambda$lambda(props));
    return Unit_getInstance();
  }
  function CryptoACDivider$lambda$lambda($props) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$9;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$8;
      // Inline function 'js.core.jso' call
      var tmp$ret$7;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.components.custom.CryptoACDivider.<anonymous>.<anonymous>.<anonymous>' call
      tmp0_apply.width = $props.widthProp;
      tmp0_apply.marginTop = $props.marginTopProp;
      tmp0_apply.marginBottom = $props.marginBottomProp;
      tmp0_apply.marginLeft = (/*union*/{auto: 'auto'}/*union*/).auto;
      tmp0_apply.marginRight = (/*union*/{auto: 'auto'}/*union*/).auto;
      var tmp$ret$3;
      // Inline function 'csstype.Color' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = 'rgba(173, 173, 173, 0.2)';
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.borderBottomColor = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '1px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp0_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      tmp0_apply.borderBottomWidth = tmp$ret$6;
      tmp0_apply.borderBottomStyle = (/*union*/{dashed: 'dashed', dotted: 'dotted', double: 'double', groove: 'groove', hidden: 'hidden', inset: 'inset', outset: 'outset', ridge: 'ridge', solid: 'solid'}/*union*/).solid;
      tmp$ret$7 = tmp0_apply;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = css(tmp$ret$8);
      tmp1_css.className = tmp$ret$9;
      return Unit_getInstance();
    };
  }
  var properties_initialized_CryptoACDivider_kt_iyr74q;
  function _init_properties_CryptoACDivider_kt__cc50w4() {
    if (properties_initialized_CryptoACDivider_kt_iyr74q) {
    } else {
      properties_initialized_CryptoACDivider_kt_iyr74q = true;
      CryptoACDivider = FC(CryptoACDivider$lambda);
    }
  }
  function get_logger_1() {
    _init_properties_CryptoACEditProfileForm_kt__8s21a();
    return logger_2;
  }
  var logger_2;
  function get_CryptoACEditProfileForm() {
    _init_properties_CryptoACEditProfileForm_kt__8s21a();
    return CryptoACEditProfileForm;
  }
  var CryptoACEditProfileForm;
  function calculateHashCode_0(_this__u8e3s4) {
    _init_properties_CryptoACEditProfileForm_kt__8s21a();
    var result = _this__u8e3s4.isCreatingNewProfileProp | 0;
    var tmp = imul(31, result);
    var tmp$ret$0;
    // Inline function 'kotlin.hashCode' call
    var tmp0_hashCode = _this__u8e3s4.usernameProp;
    var tmp0_safe_receiver = tmp0_hashCode;
    var tmp1_elvis_lhs = tmp0_safe_receiver == null ? null : hashCode(tmp0_safe_receiver);
    tmp$ret$0 = tmp1_elvis_lhs == null ? 0 : tmp1_elvis_lhs;
    result = tmp + tmp$ret$0 | 0;
    var tmp_0 = imul(31, result);
    var tmp$ret$1;
    // Inline function 'kotlin.hashCode' call
    var tmp1_hashCode = _this__u8e3s4.coreParametersProp;
    var tmp0_safe_receiver_0 = tmp1_hashCode;
    var tmp1_elvis_lhs_0 = tmp0_safe_receiver_0 == null ? null : hashCode(tmp0_safe_receiver_0);
    tmp$ret$1 = tmp1_elvis_lhs_0 == null ? 0 : tmp1_elvis_lhs_0;
    result = tmp_0 + tmp$ret$1 | 0;
    result = imul(31, result) + _this__u8e3s4.coreTypeProp.hashCode() | 0;
    result = imul(31, result) + _this__u8e3s4.rmTypeProp.hashCode() | 0;
    result = imul(31, result) + _this__u8e3s4.mmTypeProp.hashCode() | 0;
    result = imul(31, result) + _this__u8e3s4.dmTypeProp.hashCode() | 0;
    result = imul(31, result) + _this__u8e3s4.acTypeProp.hashCode() | 0;
    return result;
  }
  function CryptoACEditProfileFormState(justMountedState, cryptoACFormFieldsState, editProfileFormIsOpenState, propsHashState) {
    justMountedState = justMountedState === VOID ? true : justMountedState;
    var tmp;
    if (cryptoACFormFieldsState === VOID) {
      var tmp$ret$0;
      var tmp$ret$0_0;
      // Inline function 'kotlin.collections.listOf' call
      tmp$ret$0 = emptyList();
      tmp$ret$0_0 = Unit_getInstance();
      tmp = tmp$ret$0;
    } else {
      tmp = cryptoACFormFieldsState;
    }
    cryptoACFormFieldsState = tmp;
    editProfileFormIsOpenState = editProfileFormIsOpenState === VOID ? true : editProfileFormIsOpenState;
    propsHashState = propsHashState === VOID ? 0 : propsHashState;
    this.w58_1 = justMountedState;
    this.x58_1 = cryptoACFormFieldsState;
    this.y58_1 = editProfileFormIsOpenState;
    this.z58_1 = propsHashState;
  }
  protoOf(CryptoACEditProfileFormState).a59 = function (justMountedState, cryptoACFormFieldsState, editProfileFormIsOpenState, propsHashState) {
    return new CryptoACEditProfileFormState(justMountedState, cryptoACFormFieldsState, editProfileFormIsOpenState, propsHashState);
  };
  protoOf(CryptoACEditProfileFormState).b59 = function (justMountedState, cryptoACFormFieldsState, editProfileFormIsOpenState, propsHashState, $super) {
    justMountedState = justMountedState === VOID ? this.w58_1 : justMountedState;
    cryptoACFormFieldsState = cryptoACFormFieldsState === VOID ? this.x58_1 : cryptoACFormFieldsState;
    editProfileFormIsOpenState = editProfileFormIsOpenState === VOID ? this.y58_1 : editProfileFormIsOpenState;
    propsHashState = propsHashState === VOID ? this.z58_1 : propsHashState;
    return $super === VOID ? this.a59(justMountedState, cryptoACFormFieldsState, editProfileFormIsOpenState, propsHashState) : $super.a59.call(this, justMountedState, cryptoACFormFieldsState, editProfileFormIsOpenState, propsHashState);
  };
  protoOf(CryptoACEditProfileFormState).toString = function () {
    return 'CryptoACEditProfileFormState(justMountedState=' + this.w58_1 + ', cryptoACFormFieldsState=' + this.x58_1 + ', editProfileFormIsOpenState=' + this.y58_1 + ', propsHashState=' + this.z58_1 + ')';
  };
  protoOf(CryptoACEditProfileFormState).hashCode = function () {
    var result = this.w58_1 | 0;
    result = imul(result, 31) + hashCode(this.x58_1) | 0;
    result = imul(result, 31) + (this.y58_1 | 0) | 0;
    result = imul(result, 31) + this.z58_1 | 0;
    return result;
  };
  protoOf(CryptoACEditProfileFormState).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CryptoACEditProfileFormState))
      return false;
    var tmp0_other_with_cast = other instanceof CryptoACEditProfileFormState ? other : THROW_CCE();
    if (!(this.w58_1 === tmp0_other_with_cast.w58_1))
      return false;
    if (!equals(this.x58_1, tmp0_other_with_cast.x58_1))
      return false;
    if (!(this.y58_1 === tmp0_other_with_cast.y58_1))
      return false;
    if (!(this.z58_1 === tmp0_other_with_cast.z58_1))
      return false;
    return true;
  };
  function parseProfileFile(props, state, file) {
    _init_properties_CryptoACEditProfileForm_kt__8s21a();
    if (endsWith(file.name, '.json')) {
      var reader = new FileReader();
      reader.readAsText(file, 'UTF-8');
      reader.onload = parseProfileFile$lambda(reader, props, state);
    } else {
      var tmp = get_logger_1();
      tmp.i4r(parseProfileFile$lambda_0);
      props.handleDisplayAlertProp(OutcomeCode_CODE_040_MALFORMED_PROFILE_getInstance(), CryptoACAlertSeverity_WARNING_getInstance());
    }
  }
  function updateFieldsFromParameters(props, parameters, forceTypesUpdate) {
    _init_properties_CryptoACEditProfileForm_kt__8s21a();
    var tmp;
    try {
      var versionNumber = parameters.b4w();
      var coreType = parameters.z4v();
      var cryptoType = parameters.a4w();
      var user = parameters.k25();
      var tmp_0 = get_logger_1();
      tmp_0.h4r(updateFieldsFromParameters$lambda(coreType));
      if (!coreType.equals(props.coreTypeProp)) {
        throw UnsupportedOperationException_init_$Create$('Core type of parameters (' + coreType + ') is different ' + ('from core type of properties (' + props.coreTypeProp));
      }
      var tmp0_subject = versionNumber;
      if (tmp0_subject === 1) {
        var tmp_1 = get_logger_1();
        tmp_1.h4r(updateFieldsFromParameters$lambda_0);
      } else {
        throw UnsupportedOperationException_init_$Create$('Version number ' + versionNumber + ' is not supported');
      }
      var tmp1_subject = parameters;
      var tmp_2;
      if (tmp1_subject instanceof CoreParametersRBAC) {
        tmp_2 = parameters.c4w();
      } else {
        tmp_2 = null;
      }
      var rmParameters = tmp_2;
      if (!(rmParameters == null)) {
        var tmp_3 = get_logger_1();
        tmp_3.h4r(updateFieldsFromParameters$lambda_1(rmParameters, props));
        if (!rmParameters.w51().equals(props.rmTypeProp)) {
          if (forceTypesUpdate) {
            var tmp_4 = get_logger_1();
            tmp_4.h4r(updateFieldsFromParameters$lambda_2);
            var tmp2_safe_receiver = props.handleChangeRMTypeProp;
            if (tmp2_safe_receiver == null)
              null;
            else {
              var tmp$ret$0;
              // Inline function 'kotlin.let' call
              // Inline function 'kotlin.contracts.contract' call
              tmp$ret$0 = tmp2_safe_receiver(rmParameters.w51());
            }
            props.handleDisplayAlertProp(OutcomeCode_CODE_057_SERVICE_TYPE_UPDATED_getInstance(), CryptoACAlertSeverity_INFO_getInstance());
          } else {
            throw UnsupportedOperationException_init_$Create$('RM type of file (' + rmParameters.w51() + ') is different from currently selected core type (' + props.rmTypeProp);
          }
        }
      } else {
        var tmp_5 = get_logger_1();
        tmp_5.h4r(updateFieldsFromParameters$lambda_3);
      }
      var tmp3_subject = parameters;
      var tmp_6;
      if (tmp3_subject instanceof CoreParametersRBAC) {
        tmp_6 = parameters.d4w();
      } else {
        tmp_6 = null;
      }
      var mmParameters = tmp_6;
      if (!(mmParameters == null)) {
        var tmp_7 = get_logger_1();
        tmp_7.h4r(updateFieldsFromParameters$lambda_4(mmParameters, props));
        if (!mmParameters.e4y().equals(props.mmTypeProp)) {
          if (forceTypesUpdate) {
            var tmp_8 = get_logger_1();
            tmp_8.h4r(updateFieldsFromParameters$lambda_5);
            var tmp4_safe_receiver = props.handleChangeMMTypeProp;
            if (tmp4_safe_receiver == null)
              null;
            else {
              var tmp$ret$1;
              // Inline function 'kotlin.let' call
              // Inline function 'kotlin.contracts.contract' call
              tmp$ret$1 = tmp4_safe_receiver(mmParameters.e4y());
            }
            props.handleDisplayAlertProp(OutcomeCode_CODE_057_SERVICE_TYPE_UPDATED_getInstance(), CryptoACAlertSeverity_INFO_getInstance());
          } else {
            throw UnsupportedOperationException_init_$Create$('MM type of file (' + mmParameters.e4y() + ') is different from currently selected core type (' + props.mmTypeProp);
          }
        }
      } else {
        var tmp_9 = get_logger_1();
        tmp_9.h4r(updateFieldsFromParameters$lambda_6);
      }
      var tmp5_subject = parameters;
      var tmp_10;
      if (tmp5_subject instanceof CoreParametersRBAC) {
        tmp_10 = parameters.e4w();
      } else {
        tmp_10 = null;
      }
      var dmParameters = tmp_10;
      if (!(dmParameters == null)) {
        var tmp_11 = get_logger_1();
        tmp_11.h4r(updateFieldsFromParameters$lambda_7(dmParameters, props));
        if (!dmParameters.k4x().equals(props.dmTypeProp)) {
          if (forceTypesUpdate) {
            var tmp_12 = get_logger_1();
            tmp_12.h4r(updateFieldsFromParameters$lambda_8);
            var tmp6_safe_receiver = props.handleChangeDMTypeProp;
            if (tmp6_safe_receiver == null)
              null;
            else {
              var tmp$ret$2;
              // Inline function 'kotlin.let' call
              // Inline function 'kotlin.contracts.contract' call
              tmp$ret$2 = tmp6_safe_receiver(dmParameters.k4x());
            }
            props.handleDisplayAlertProp(OutcomeCode_CODE_057_SERVICE_TYPE_UPDATED_getInstance(), CryptoACAlertSeverity_INFO_getInstance());
          } else {
            throw UnsupportedOperationException_init_$Create$('DM type of file (' + dmParameters.k4x() + ') is different from currently selected core type (' + props.dmTypeProp);
          }
        }
      } else {
        var tmp_13 = get_logger_1();
        tmp_13.h4r(updateFieldsFromParameters$lambda_9);
      }
      var tmp7_subject = parameters;
      var tmp_14;
      if (tmp7_subject instanceof CoreParametersRBAC) {
        tmp_14 = parameters.f4w();
      } else {
        tmp_14 = null;
      }
      var acParameters = tmp_14;
      if (!(acParameters == null)) {
        var tmp_15 = get_logger_1();
        tmp_15.h4r(updateFieldsFromParameters$lambda_10(acParameters, props));
        if (!acParameters.y4u().equals(props.acTypeProp)) {
          if (forceTypesUpdate) {
            var tmp_16 = get_logger_1();
            tmp_16.h4r(updateFieldsFromParameters$lambda_11);
            var tmp8_safe_receiver = props.handleChangeACTypeProp;
            if (tmp8_safe_receiver == null)
              null;
            else {
              var tmp$ret$3;
              // Inline function 'kotlin.let' call
              // Inline function 'kotlin.contracts.contract' call
              tmp$ret$3 = tmp8_safe_receiver(acParameters.y4u());
            }
            props.handleDisplayAlertProp(OutcomeCode_CODE_057_SERVICE_TYPE_UPDATED_getInstance(), CryptoACAlertSeverity_INFO_getInstance());
          } else {
            throw UnsupportedOperationException_init_$Create$('AC type of file (' + acParameters.y4u() + ') is different from currently selected core type (' + props.acTypeProp);
          }
        }
      } else {
        var tmp_17 = get_logger_1();
        tmp_17.h4r(updateFieldsFromParameters$lambda_12);
      }
      tmp = getFieldsFromParameters(props, user, cryptoType, rmParameters, mmParameters, dmParameters, acParameters);
    } catch ($p) {
      var tmp_18;
      if ($p instanceof NullPointerException) {
        var e = $p;
        var tmp_19 = get_logger_1();
        tmp_19.i4r(updateFieldsFromParameters$lambda_13);
        var tmp_20 = get_logger_1();
        tmp_20.i4r(updateFieldsFromParameters$lambda_14(e));
        props.handleDisplayAlertProp(OutcomeCode_CODE_040_MALFORMED_PROFILE_getInstance(), CryptoACAlertSeverity_ERROR_getInstance());
        tmp_18 = null;
      } else {
        if ($p instanceof UnsupportedOperationException) {
          var e_0 = $p;
          var tmp_21 = get_logger_1();
          tmp_21.i4r(updateFieldsFromParameters$lambda_15);
          var tmp_22 = get_logger_1();
          tmp_22.i4r(updateFieldsFromParameters$lambda_16(e_0));
          props.handleDisplayAlertProp(OutcomeCode_CODE_061_WRONG_PARAMETERS_FOR_CORE_getInstance(), CryptoACAlertSeverity_WARNING_getInstance());
          tmp_18 = null;
        } else {
          throw $p;
        }
      }
      tmp = tmp_18;
    }
    return tmp;
  }
  function submitEditProfileForm(props, method, endpoint, values) {
    _init_properties_CryptoACEditProfileForm_kt__8s21a();
    var tmp = get_logger_1();
    tmp.h4r(submitEditProfileForm$lambda(method, endpoint));
    try {
      var tmp0_subject = props.rmTypeProp;
      var tmp0 = tmp0_subject.n4_1;
      var tmp_0;
      switch (tmp0) {
        case 0:
          tmp_0 = Companion_getInstance_30().a4v(values);
          break;
        case 1:
          tmp_0 = null;
          break;
        default:
          noWhenBranchMatchedException();
          break;
      }
      var rmParameters = tmp_0;
      var tmp1_subject = props.mmTypeProp;
      var tmp0_0 = tmp1_subject.n4_1;
      var tmp_1;
      switch (tmp0_0) {
        case 0:
        case 1:
          tmp_1 = Companion_getInstance_17().a4v(values);
          break;
        case 2:
          tmp_1 = Companion_getInstance_18().x4y(values, MMType_RBAC_REDIS_getInstance());
          break;
        default:
          noWhenBranchMatchedException();
          break;
      }
      var mmParameters = tmp_1;
      var tmp2_subject = props.dmTypeProp;
      var tmp0_1 = tmp2_subject.n4_1;
      var tmp_2;
      switch (tmp0_1) {
        case 0:
          tmp_2 = Companion_getInstance_14().a4v(values);
          break;
        case 1:
          tmp_2 = Companion_getInstance_15().a4v(values);
          break;
        default:
          noWhenBranchMatchedException();
          break;
      }
      var dmParameters = tmp_2;
      var tmp3_subject = props.acTypeProp;
      var tmp0_2 = tmp3_subject.n4_1;
      var tmp_3;
      switch (tmp0_2) {
        case 2:
          tmp_3 = Companion_getInstance_7().a4v(values);
          break;
        case 0:
          tmp_3 = Companion_getInstance_6().a4v(values);
          break;
        case 1:
          tmp_3 = Companion_getInstance_5().a4v(values);
          break;
        case 3:
          tmp_3 = null;
          break;
        default:
          noWhenBranchMatchedException();
          break;
      }
      var acParameters = tmp_3;
      SERVER_getInstance();
      var tmp_4 = ensureNotNull(values.y1('Username'));
      SERVER_getInstance();
      var user = new User(tmp_4, VOID, VOID, VOID, toBoolean(values.y1('Admin')));
      SERVER_getInstance();
      var cryptoType = valueOf_1(ensureNotNull(values.y1('Cryptography')));
      var tmp4_subject = props.coreTypeProp;
      var tmp0_3 = tmp4_subject.n4_1;
      var tmp_5;
      switch (tmp0_3) {
        case 0:
          var tmp_6 = CoreType_RBAC_AT_REST_getInstance();
          var tmp_7 = ensureNotNull(rmParameters);
          tmp_5 = new CoreParametersRBAC(user, tmp_6, cryptoType, VOID, tmp_7, mmParameters, dmParameters, (acParameters == null ? true : acParameters instanceof ACServiceRBACOPAParameters) ? acParameters : THROW_CCE());
          break;
        case 1:
          var tmp_8 = CoreType_RBAC_MQTT_getInstance();
          tmp_5 = new CoreParametersRBAC(user, tmp_8, cryptoType, VOID, null, mmParameters, dmParameters, (acParameters == null ? true : acParameters instanceof ACServiceRBACDynSecParameters) ? acParameters : THROW_CCE());
          break;
        case 2:
          throw new NotImplementedError();
        case 3:
          throw new NotImplementedError();
        default:
          noWhenBranchMatchedException();
          break;
      }
      var parameters = tmp_5;
      if (!method.equals(Companion_getInstance().c21_1) ? !method.equals(Companion_getInstance().e21_1) : false) {
        var tmp_9 = get_logger_1();
        tmp_9.i4r(submitEditProfileForm$lambda_0(method));
        props.handleDisplayAlertProp(OutcomeCode_CODE_048_HTTP_METHOD_NOT_SUPPORTED_getInstance(), CryptoACAlertSeverity_ERROR_getInstance());
      }
      var tmp_10 = MainScope();
      launch(tmp_10, VOID, VOID, submitEditProfileForm$slambda_0(props, method, endpoint, parameters, null));
    } catch ($p) {
      if ($p instanceof NullPointerException) {
        var e = $p;
        printStackTrace(e);
        var tmp_11 = get_logger_1();
        tmp_11.i4r(submitEditProfileForm$lambda_1);
        props.handleDisplayAlertProp(OutcomeCode_CODE_019_MISSING_PARAMETERS_getInstance(), CryptoACAlertSeverity_WARNING_getInstance());
      } else {
        if ($p instanceof Error_0) {
          var e_0 = $p;
          var tmp_12 = get_logger_1();
          tmp_12.j4r(submitEditProfileForm$lambda_2(e_0));
          console.log(e_0);
          props.handleDisplayAlertProp(OutcomeCode_CODE_049_UNEXPECTED_getInstance(), CryptoACAlertSeverity_ERROR_getInstance());
        } else {
          throw $p;
        }
      }
    }
  }
  function getFieldsFromParameters(props, user, cryptoType, rmParameters, mmParameters, dmParameters, acParameters) {
    user = user === VOID ? null : user;
    cryptoType = cryptoType === VOID ? CryptoType_SODIUM_getInstance() : cryptoType;
    rmParameters = rmParameters === VOID ? null : rmParameters;
    mmParameters = mmParameters === VOID ? null : mmParameters;
    dmParameters = dmParameters === VOID ? null : dmParameters;
    acParameters = acParameters === VOID ? null : acParameters;
    _init_properties_CryptoACEditProfileForm_kt__8s21a();
    var tmp = get_logger_1();
    tmp.h4r(getFieldsFromParameters$lambda(props));
    SERVER_getInstance();
    var tmp1_name = 'Username';
    SERVER_getInstance();
    var tmp2_label = 'Username';
    var tmp3_type = InputType_text_getInstance();
    var tmp0_safe_receiver = user;
    var tmp4_defaultValue = tmp0_safe_receiver == null ? null : tmp0_safe_receiver.q51_1;
    var tmp_0 = new CryptoACFormField(tmp1_name, tmp2_label, tmp3_type, VOID, tmp4_defaultValue, 'darkTextField', true);
    SERVER_getInstance();
    var tmp6_name = 'Admin';
    SERVER_getInstance();
    var tmp7_label = replace('Admin', '_', ' ');
    var tmp8_type = InputType_checkBox_getInstance();
    var tmp5_safe_receiver = user;
    var tmp9_defaultValue = toString(tmp5_safe_receiver == null ? null : tmp5_safe_receiver.u51_1);
    var tmp_1 = new CryptoACFormField(tmp6_name, tmp7_label, tmp8_type, VOID, tmp9_defaultValue, 'darkTextField', true);
    SERVER_getInstance();
    var tmp10_name = 'Cryptography';
    SERVER_getInstance();
    var tmp11_label = 'Cryptography';
    var tmp12_type = InputType_select_getInstance();
    var tmp$ret$2;
    // Inline function 'kotlin.collections.map' call
    var tmp1_map = values_3();
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mapTo' call
    var tmp0_mapTo = ArrayList_init_$Create$_0(tmp1_map.length);
    var indexedObject = tmp1_map;
    var inductionVariable = 0;
    var last = indexedObject.length;
    while (inductionVariable < last) {
      var item = indexedObject[inductionVariable];
      inductionVariable = inductionVariable + 1 | 0;
      var tmp$ret$0;
      // Inline function 'eu.fbk.st.cryptoac.view.components.custom.getFieldsFromParameters.<anonymous>' call
      tmp$ret$0 = item.toString();
      tmp0_mapTo.a(tmp$ret$0);
    }
    tmp$ret$1 = tmp0_mapTo;
    tmp$ret$2 = tmp$ret$1;
    var tmp13_options = tmp$ret$2;
    var tmp14_defaultValue = cryptoType.toString();
    var fields = mutableListOf([listOf([tmp_0, tmp_1, new CryptoACFormField(tmp10_name, tmp11_label, tmp12_type, tmp13_options, tmp14_defaultValue, 'darkTextField', true)])]);
    var tmp15_safe_receiver = rmParameters;
    var tmp16_elvis_lhs = tmp15_safe_receiver == null ? null : tmp15_safe_receiver.w51();
    var rmType = tmp16_elvis_lhs == null ? props.rmTypeProp : tmp16_elvis_lhs;
    var tmp_2 = get_logger_1();
    tmp_2.h4r(getFieldsFromParameters$lambda_0(rmType));
    var tmp17_subject = rmType;
    var tmp0 = tmp17_subject.n4_1;
    var tmp_3;
    switch (tmp0) {
      case 0:
        var tmp_4 = Companion_getInstance_30();
        var tmp18_safe_receiver = rmParameters;
        var tmp_5;
        if (tmp18_safe_receiver == null) {
          tmp_5 = null;
        } else {
          var tmp$ret$4;
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          var tmp$ret$3;
          // Inline function 'eu.fbk.st.cryptoac.view.components.custom.getFieldsFromParameters.<anonymous>' call
          tmp$ret$3 = tmp18_safe_receiver instanceof RMServiceRBACCryptoACParameters ? tmp18_safe_receiver : THROW_CCE();
          tmp$ret$4 = tmp$ret$3;
          tmp_5 = tmp$ret$4;
        }

        tmp_3 = tmp_4.y51(tmp_5);
        break;
      case 1:
        var tmp$ret$5;
        // Inline function 'kotlin.collections.listOf' call
        tmp$ret$5 = emptyList();

        tmp_3 = tmp$ret$5;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    fields.k(tmp_3);
    var tmp19_safe_receiver = mmParameters;
    var tmp20_elvis_lhs = tmp19_safe_receiver == null ? null : tmp19_safe_receiver.e4y();
    var mmType = tmp20_elvis_lhs == null ? props.mmTypeProp : tmp20_elvis_lhs;
    var tmp_6 = get_logger_1();
    tmp_6.h4r(getFieldsFromParameters$lambda_1(mmType));
    var tmp21_subject = mmType;
    var tmp0_0 = tmp21_subject.n4_1;
    var tmp_7;
    switch (tmp0_0) {
      case 0:
      case 1:
        var tmp_8 = Companion_getInstance_17();
        var tmp22_safe_receiver = mmParameters;
        var tmp_9;
        if (tmp22_safe_receiver == null) {
          tmp_9 = null;
        } else {
          var tmp$ret$7;
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          var tmp$ret$6;
          // Inline function 'eu.fbk.st.cryptoac.view.components.custom.getFieldsFromParameters.<anonymous>' call
          tmp$ret$6 = tmp22_safe_receiver instanceof MMServiceRBACMySQLParameters ? tmp22_safe_receiver : THROW_CCE();
          tmp$ret$7 = tmp$ret$6;
          tmp_9 = tmp$ret$7;
        }

        tmp_7 = tmp_8.o4y(tmp_9);
        break;
      case 2:
        var tmp_10 = Companion_getInstance_18();
        var tmp23_safe_receiver = mmParameters;
        var tmp_11;
        if (tmp23_safe_receiver == null) {
          tmp_11 = null;
        } else {
          var tmp$ret$9;
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          var tmp$ret$8;
          // Inline function 'eu.fbk.st.cryptoac.view.components.custom.getFieldsFromParameters.<anonymous>' call
          tmp$ret$8 = tmp23_safe_receiver instanceof MMServiceRedisParameters ? tmp23_safe_receiver : THROW_CCE();
          tmp$ret$9 = tmp$ret$8;
          tmp_11 = tmp$ret$9;
        }

        tmp_7 = tmp_10.y4y(tmp_11);
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    fields.k(tmp_7);
    var tmp24_safe_receiver = dmParameters;
    var tmp25_elvis_lhs = tmp24_safe_receiver == null ? null : tmp24_safe_receiver.k4x();
    var dmType = tmp25_elvis_lhs == null ? props.dmTypeProp : tmp25_elvis_lhs;
    var tmp_12 = get_logger_1();
    tmp_12.h4r(getFieldsFromParameters$lambda_2(dmType));
    var tmp26_subject = dmType;
    var tmp0_1 = tmp26_subject.n4_1;
    var tmp_13;
    switch (tmp0_1) {
      case 0:
        var tmp_14 = Companion_getInstance_14();
        var tmp27_safe_receiver = dmParameters;
        var tmp_15;
        if (tmp27_safe_receiver == null) {
          tmp_15 = null;
        } else {
          var tmp$ret$11;
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          var tmp$ret$10;
          // Inline function 'eu.fbk.st.cryptoac.view.components.custom.getFieldsFromParameters.<anonymous>' call
          tmp$ret$10 = tmp27_safe_receiver instanceof DMServiceCryptoACParameters ? tmp27_safe_receiver : THROW_CCE();
          tmp$ret$11 = tmp$ret$10;
          tmp_15 = tmp$ret$11;
        }

        tmp_13 = tmp_14.m4x(tmp_15);
        break;
      case 1:
        var tmp_16 = Companion_getInstance_15();
        var tmp28_safe_receiver = dmParameters;
        var tmp_17;
        if (tmp28_safe_receiver == null) {
          tmp_17 = null;
        } else {
          var tmp$ret$13;
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          var tmp$ret$12;
          // Inline function 'eu.fbk.st.cryptoac.view.components.custom.getFieldsFromParameters.<anonymous>' call
          tmp$ret$12 = tmp28_safe_receiver instanceof DMServiceMQTTParameters ? tmp28_safe_receiver : THROW_CCE();
          tmp$ret$13 = tmp$ret$12;
          tmp_17 = tmp$ret$13;
        }

        tmp_13 = tmp_16.v4x(tmp_17);
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    fields.k(tmp_13);
    var tmp29_safe_receiver = acParameters;
    var tmp30_elvis_lhs = tmp29_safe_receiver == null ? null : tmp29_safe_receiver.y4u();
    var acType = tmp30_elvis_lhs == null ? props.acTypeProp : tmp30_elvis_lhs;
    var tmp_18 = get_logger_1();
    tmp_18.h4r(getFieldsFromParameters$lambda_3(acType));
    var tmp31_subject = acType;
    var tmp0_2 = tmp31_subject.n4_1;
    var tmp_19;
    switch (tmp0_2) {
      case 2:
        var tmp_20 = Companion_getInstance_7();
        var tmp32_safe_receiver = acParameters;
        var tmp_21;
        if (tmp32_safe_receiver == null) {
          tmp_21 = null;
        } else {
          var tmp$ret$15;
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          var tmp$ret$14;
          // Inline function 'eu.fbk.st.cryptoac.view.components.custom.getFieldsFromParameters.<anonymous>' call
          tmp$ret$14 = tmp32_safe_receiver instanceof ACServiceRBACXACMLAuthzForceParameters ? tmp32_safe_receiver : THROW_CCE();
          tmp$ret$15 = tmp$ret$14;
          tmp_21 = tmp$ret$15;
        }

        tmp_19 = tmp_20.s4v(tmp_21);
        break;
      case 0:
        var tmp_22 = Companion_getInstance_6();
        var tmp33_safe_receiver = acParameters;
        var tmp_23;
        if (tmp33_safe_receiver == null) {
          tmp_23 = null;
        } else {
          var tmp$ret$17;
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          var tmp$ret$16;
          // Inline function 'eu.fbk.st.cryptoac.view.components.custom.getFieldsFromParameters.<anonymous>' call
          tmp$ret$16 = tmp33_safe_receiver instanceof ACServiceRBACOPAParameters ? tmp33_safe_receiver : THROW_CCE();
          tmp$ret$17 = tmp$ret$16;
          tmp_23 = tmp$ret$17;
        }

        tmp_19 = tmp_22.l4v(tmp_23);
        break;
      case 1:
        var tmp_24 = Companion_getInstance_5();
        var tmp34_safe_receiver = acParameters;
        var tmp_25;
        if (tmp34_safe_receiver == null) {
          tmp_25 = null;
        } else {
          var tmp$ret$19;
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          var tmp$ret$18;
          // Inline function 'eu.fbk.st.cryptoac.view.components.custom.getFieldsFromParameters.<anonymous>' call
          tmp$ret$18 = tmp34_safe_receiver instanceof ACServiceRBACDynSecParameters ? tmp34_safe_receiver : THROW_CCE();
          tmp$ret$19 = tmp$ret$18;
          tmp_25 = tmp$ret$19;
        }

        tmp_19 = tmp_24.b4v(tmp_25);
        break;
      case 3:
        var tmp$ret$20;
        // Inline function 'kotlin.collections.listOf' call
        tmp$ret$20 = emptyList();

        tmp_19 = tmp$ret$20;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    fields.k(tmp_19);
    return toList(fields);
  }
  function getStateFromProps_1(props, oldState) {
    oldState = oldState === VOID ? new CryptoACEditProfileFormState() : oldState;
    _init_properties_CryptoACEditProfileForm_kt__8s21a();
    var propsHash = calculateHashCode_0(props);
    if (oldState.w58_1 ? true : !(oldState.z58_1 === propsHash)) {
      var tmp = get_logger_1();
      tmp.h4r(getStateFromProps$lambda);
      oldState.z58_1 = propsHash;
      if (!(props.coreParametersProp == null)) {
        var tmp_0 = get_logger_1();
        tmp_0.h4r(getStateFromProps$lambda_0);
        var tmp0_safe_receiver = updateFieldsFromParameters(props, ensureNotNull(props.coreParametersProp), props.isCreatingNewProfileProp);
        if (tmp0_safe_receiver == null)
          null;
        else {
          var tmp$ret$0;
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          oldState.x58_1 = tmp0_safe_receiver;
          tmp$ret$0 = Unit_getInstance();
        }
      } else {
        var tmp_1 = get_logger_1();
        tmp_1.h4r(getStateFromProps$lambda_1);
        oldState.x58_1 = getFieldsFromParameters(props);
      }
    }
    oldState.w58_1 = false;
    return oldState.b59();
  }
  function logger$lambda_2() {
    _init_properties_CryptoACEditProfileForm_kt__8s21a();
    return Unit_getInstance();
  }
  function CryptoACEditProfileForm$lambda($this$FC, props) {
    _init_properties_CryptoACEditProfileForm_kt__8s21a();
    var state$delegate = useState(getStateFromProps_1(props));
    useEffect([props], CryptoACEditProfileForm$lambda$lambda(props, state$delegate));
    var tmp$ret$3;
    // Inline function 'react.dom.html.ReactHTML.div' call
    var tmp0__get_div__2k2o9m = ReactHTML_getInstance();
    var tmp$ret$2;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = 'div';
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    var tmp = tmp$ret$3;
    $this$FC.x4r(tmp, CryptoACEditProfileForm$lambda$lambda_0(props, state$delegate));
    return Unit_getInstance();
  }
  function invoke$lambda_5($state$delegate) {
    _init_properties_CryptoACEditProfileForm_kt__8s21a();
    var tmp$ret$2;
    // Inline function 'react.StateInstance.getValue' call
    var tmp1_getValue = getLocalDelegateReference('state', KMutableProperty0, true, function () {
      return THROW_ISE();
    });
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = $state$delegate;
    var tmp0_unsafeCast = tmp$ret$0[0];
    tmp$ret$1 = tmp0_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  }
  function invoke$lambda_6($state$delegate, value) {
    _init_properties_CryptoACEditProfileForm_kt__8s21a();
    var tmp1_setValue = getLocalDelegateReference('state', KMutableProperty0, true, function () {
      return THROW_ISE();
    });
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = $state$delegate;
    var tmp0_unsafeCast = tmp$ret$0[1];
    tmp$ret$1 = tmp0_unsafeCast;
    return tmp$ret$1(value);
  }
  function CryptoACEditProfileForm$lambda$lambda($props, $state$delegate) {
    return function ($this$useEffect) {
      invoke$lambda_6($state$delegate, getStateFromProps_1($props, invoke$lambda_5($state$delegate)));
      return Unit_getInstance();
    };
  }
  function CryptoACEditProfileForm$lambda$lambda$lambda$lambda$lambda$lambda(event) {
    _init_properties_CryptoACEditProfileForm_kt__8s21a();
    var tmp = event.target;
    if (tmp instanceof HTMLInputElement) {
      var tmp_0 = event.target;
      (tmp_0 instanceof HTMLInputElement ? tmp_0 : THROW_CCE()).value = '';
    }
    return Unit_getInstance();
  }
  function CryptoACEditProfileForm$lambda$lambda$lambda$lambda$lambda$lambda_0($this$invoke) {
    _init_properties_CryptoACEditProfileForm_kt__8s21a();
    return Unit_getInstance();
  }
  function CryptoACEditProfileForm$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda() {
    _init_properties_CryptoACEditProfileForm_kt__8s21a();
    return 'Received upload configuration file event';
  }
  function CryptoACEditProfileForm$lambda$lambda$lambda$lambda$lambda$lambda$lambda($props, $state$delegate) {
    return function (event) {
      var tmp = get_logger_1();
      tmp.h4r(CryptoACEditProfileForm$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda);
      var tmp_0 = invoke$lambda_5($state$delegate);
      var tmp$ret$1;
      // Inline function 'org.w3c.files.get' call
      var tmp_1 = event.target;
      var tmp0_get = ensureNotNull((tmp_1 instanceof HTMLInputElement ? tmp_1 : THROW_CCE()).files);
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = tmp0_get;
      tmp$ret$1 = tmp$ret$0[0];
      parseProfileFile($props, tmp_0, ensureNotNull(tmp$ret$1));
      invoke$lambda_6($state$delegate, invoke$lambda_5($state$delegate).b59());
      return Unit_getInstance();
    };
  }
  function CryptoACEditProfileForm$lambda$lambda$lambda$lambda$lambda$lambda_1($props, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.type = (/*union*/{button: 'button', checkbox: 'checkbox', color: 'color', date: 'date', datetimeLocal: 'datetime-local', email: 'email', file: 'file', hidden: 'hidden', image: 'image', month: 'month', number: 'number', password: 'password', radio: 'radio', range: 'range', reset: 'reset', search: 'search', submit: 'submit', tel: 'tel', text: 'text', time: 'time', url: 'url', week: 'week'}/*union*/).file;
      $this$invoke.accept = '.json';
      $this$invoke.hidden = true;
      $this$invoke.onChange = CryptoACEditProfileForm$lambda$lambda$lambda$lambda$lambda$lambda$lambda($props, $state$delegate);
      return Unit_getInstance();
    };
  }
  function CryptoACEditProfileForm$lambda$lambda$lambda$lambda$lambda($props, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.color = 'primary';
      $this$invoke.component = 'label';
      $this$invoke.onClick = CryptoACEditProfileForm$lambda$lambda$lambda$lambda$lambda$lambda;
      var tmp = FaCloudUploadAlt;
      $this$invoke.x4r(tmp, CryptoACEditProfileForm$lambda$lambda$lambda$lambda$lambda$lambda_0);
      var tmp$ret$3;
      // Inline function 'react.dom.html.ReactHTML.input' call
      var tmp0__get_input__prnny7 = ReactHTML_getInstance();
      var tmp$ret$2;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = 'input';
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp_0 = tmp$ret$3;
      $this$invoke.x4r(tmp_0, CryptoACEditProfileForm$lambda$lambda$lambda$lambda$lambda$lambda_1($props, $state$delegate));
      return Unit_getInstance();
    };
  }
  function CryptoACEditProfileForm$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($this$invoke) {
    _init_properties_CryptoACEditProfileForm_kt__8s21a();
    return Unit_getInstance();
  }
  function CryptoACEditProfileForm$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($this$invoke) {
    _init_properties_CryptoACEditProfileForm_kt__8s21a();
    return Unit_getInstance();
  }
  function CryptoACEditProfileForm$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($state$delegate) {
    return function ($this$createElement) {
      var tmp;
      if (!invoke$lambda_5($state$delegate).y58_1) {
        var tmp_0 = FaChevronDown;
        $this$createElement.o4r(tmp_0, CryptoACEditProfileForm$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0);
        tmp = Unit_getInstance();
      } else {
        var tmp_1 = FaChevronUp;
        $this$createElement.o4r(tmp_1, CryptoACEditProfileForm$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1);
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function CryptoACEditProfileForm$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($state$delegate) {
    return function (it) {
      invoke$lambda_6($state$delegate, invoke$lambda_5($state$delegate).b59(VOID, VOID, !invoke$lambda_5($state$delegate).y58_1));
      return Unit_getInstance();
    };
  }
  function CryptoACEditProfileForm$lambda$lambda$lambda$lambda$lambda$lambda_2($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.color = 'primary';
      $this$invoke.component = 'label';
      $this$invoke.size = 'small';
      $this$invoke.children = ensureNotNull(createElement(CryptoACEditProfileForm$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($state$delegate)));
      $this$invoke.onClick = CryptoACEditProfileForm$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($state$delegate);
      return Unit_getInstance();
    };
  }
  function CryptoACEditProfileForm$lambda$lambda$lambda$lambda$lambda_0($state$delegate) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$9;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$8;
      // Inline function 'js.core.jso' call
      var tmp$ret$7;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.components.custom.CryptoACEditProfileForm.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      tmp0_apply.display = (/*union*/{block: 'block', inline: 'inline', runIn: 'run-in', flex: 'flex', flow: 'flow', flowRoot: 'flow-root', grid: 'grid', ruby: 'ruby', table: 'table', rubyBase: 'ruby-base', rubyBaseContainer: 'ruby-base-container', rubyText: 'ruby-text', rubyTextContainer: 'ruby-text-container', tableCaption: 'table-caption', tableCell: 'table-cell', tableColumn: 'table-column', tableColumnGroup: 'table-column-group', tableFooterGroup: 'table-footer-group', tableHeaderGroup: 'table-header-group', tableRow: 'table-row', tableRowGroup: 'table-row-group', inlineBlock: 'inline-block', inlineFlex: 'inline-flex', inlineGrid: 'inline-grid', inlineListItem: 'inline-list-item', inlineTable: 'inline-table', contents: 'contents', listItem: 'list-item'}/*union*/).inline;
      tmp0_apply.float = (/*union*/{inlineEnd: 'inline-end', inlineStart: 'inline-start', left: 'left', right: 'right'}/*union*/).right;
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '7px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.marginTop = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '10px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      tmp0_apply.marginRight = tmp$ret$6;
      tmp$ret$7 = tmp0_apply;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = css(tmp$ret$8);
      tmp1_css.className = tmp$ret$9;
      var tmp = IconButton;
      $this$invoke.x4r(tmp, CryptoACEditProfileForm$lambda$lambda$lambda$lambda$lambda$lambda_2($state$delegate));
      return Unit_getInstance();
    };
  }
  function CryptoACEditProfileForm$lambda$lambda$lambda$lambda($props, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.variant = 'h6';
      $this$invoke.component = 'div';
      var tmp;
      if ($props.isCreatingNewProfileProp) {
        tmp = 'Create';
      } else {
        tmp = 'Edit';
      }
      $this$invoke.w4r(tmp + ' or Upload Profile');
      var tmp_0 = IconButton;
      $this$invoke.x4r(tmp_0, CryptoACEditProfileForm$lambda$lambda$lambda$lambda$lambda($props, $state$delegate));
      var tmp$ret$3;
      // Inline function 'react.dom.html.ReactHTML.div' call
      var tmp0__get_div__2k2o9m = ReactHTML_getInstance();
      var tmp$ret$2;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = 'div';
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp_1 = tmp$ret$3;
      $this$invoke.x4r(tmp_1, CryptoACEditProfileForm$lambda$lambda$lambda$lambda$lambda_0($state$delegate));
      return Unit_getInstance();
    };
  }
  function CryptoACEditProfileForm$lambda$lambda$lambda$lambda$lambda$lambda_3($props, $state$delegate) {
    return function (method, endpoint, values, _anonymous_parameter_3__qggqen) {
      submitEditProfileForm($props, method, endpoint, values);
      invoke$lambda_6($state$delegate, invoke$lambda_5($state$delegate).b59(VOID, VOID, false));
      return Unit_getInstance();
    };
  }
  function CryptoACEditProfileForm$lambda$lambda$lambda$lambda$lambda_1($props, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.acceptDisabledElementsProp = !$props.isCreatingNewProfileProp;
      $this$invoke.handleDisplayAlertProp = $props.handleDisplayAlertProp;
      $this$invoke.handleSubmitEventProp = CryptoACEditProfileForm$lambda$lambda$lambda$lambda$lambda$lambda_3($props, $state$delegate);
      var tmp;
      if ($props.isCreatingNewProfileProp) {
        tmp = Companion_getInstance().c21_1;
      } else {
        tmp = Companion_getInstance().e21_1;
      }
      $this$invoke.methodProp = tmp;
      $this$invoke.cryptoACFormFieldsProp = invoke$lambda_5($state$delegate).x58_1;
      $this$invoke.submitButtonTextProp = 'Edit Profile';
      $this$invoke.coreTypeProp = $props.coreTypeProp;
      API_getInstance();
      $this$invoke.endpointProp = '/v1/profile/{Core}/';
      return Unit_getInstance();
    };
  }
  function CryptoACEditProfileForm$lambda$lambda$lambda$lambda_0($state$delegate, $props) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$15;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$14;
      // Inline function 'js.core.jso' call
      var tmp$ret$13;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.components.custom.CryptoACEditProfileForm.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '10px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.marginTop = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '10px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      tmp0_apply.marginBottom = tmp$ret$6;
      var tmp$ret$9;
      // Inline function 'csstype.px' call
      var tmp$ret$8;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp2_unsafeCast = '10px';
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = tmp2_unsafeCast;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      tmp0_apply.marginRight = tmp$ret$9;
      var tmp$ret$12;
      // Inline function 'csstype.px' call
      var tmp$ret$11;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp3_unsafeCast = '30px';
      var tmp$ret$10;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$10 = tmp3_unsafeCast;
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = tmp$ret$11;
      tmp0_apply.marginLeft = tmp$ret$12;
      if (!invoke$lambda_5($state$delegate).y58_1) {
        tmp0_apply.display = (/*union*/{none: 'none'}/*union*/).none;
      }
      tmp$ret$13 = tmp0_apply;
      tmp$ret$14 = tmp$ret$13;
      tmp$ret$15 = css(tmp$ret$14);
      tmp1_css.className = tmp$ret$15;
      var tmp = get_CryptoACForm();
      $this$invoke.x4r(tmp, CryptoACEditProfileForm$lambda$lambda$lambda$lambda$lambda_1($props, $state$delegate));
      return Unit_getInstance();
    };
  }
  function CryptoACEditProfileForm$lambda$lambda$lambda($props, $state$delegate) {
    return function ($this$invoke) {
      var tmp = Typography;
      $this$invoke.x4r(tmp, CryptoACEditProfileForm$lambda$lambda$lambda$lambda($props, $state$delegate));
      var tmp$ret$3;
      // Inline function 'react.dom.html.ReactHTML.div' call
      var tmp0__get_div__2k2o9m = ReactHTML_getInstance();
      var tmp$ret$2;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = 'div';
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp_0 = tmp$ret$3;
      $this$invoke.x4r(tmp_0, CryptoACEditProfileForm$lambda$lambda$lambda$lambda_0($state$delegate, $props));
      return Unit_getInstance();
    };
  }
  function CryptoACEditProfileForm$lambda$lambda_0($props, $state$delegate) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$9;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$8;
      // Inline function 'js.core.jso' call
      var tmp$ret$7;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.components.custom.CryptoACEditProfileForm.<anonymous>.<anonymous>.<anonymous>' call
      tmp0_apply.textAlign = (/*union*/{center: 'center', end: 'end', justify: 'justify', left: 'left', matchParent: 'match-parent', right: 'right', start: 'start'}/*union*/).center;
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '10px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.paddingTop = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '10px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      tmp0_apply.paddingBottom = tmp$ret$6;
      tmp$ret$7 = tmp0_apply;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = css(tmp$ret$8);
      tmp1_css.className = tmp$ret$9;
      var tmp = Paper;
      $this$invoke.x4r(tmp, CryptoACEditProfileForm$lambda$lambda$lambda($props, $state$delegate));
      return Unit_getInstance();
    };
  }
  function parseProfileFile$lambda($reader, $props, $state) {
    return function (_anonymous_parameter_0__qggqh8) {
      var fileContent = toString_0($reader.result);
      var tmp$ret$2;
      // Inline function 'kotlinx.serialization.decodeFromString' call
      var tmp2_decodeFromString = get_myJson();
      var tmp$ret$1;
      // Inline function 'kotlinx.serialization.serializer' call
      var tmp1_serializer = tmp2_decodeFromString.w2j();
      var tmp$ret$0;
      // Inline function 'kotlinx.serialization.internal.cast' call
      var tmp0_cast = serializer_0(tmp1_serializer, createKType(getKClass(CoreParameters), arrayOf([]), false));
      tmp$ret$0 = isInterface(tmp0_cast, KSerializer) ? tmp0_cast : THROW_CCE();
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp2_decodeFromString.v2j(tmp$ret$1, fileContent);
      var parameters = tmp$ret$2;
      var tmp0_safe_receiver = updateFieldsFromParameters($props, parameters, $props.isCreatingNewProfileProp);
      var tmp;
      if (tmp0_safe_receiver == null) {
        tmp = null;
      } else {
        var tmp$ret$3;
        // Inline function 'kotlin.let' call
        // Inline function 'kotlin.contracts.contract' call
        $state.x58_1 = tmp0_safe_receiver;
        tmp$ret$3 = Unit_getInstance();
        tmp = Unit_getInstance();
      }
      return tmp;
    };
  }
  function parseProfileFile$lambda_0() {
    _init_properties_CryptoACEditProfileForm_kt__8s21a();
    return 'The user did not provide a .json file for the profile';
  }
  function updateFieldsFromParameters$lambda($coreType) {
    return function () {
      return 'Updating the fields of the edit profile form (core type is ' + $coreType + ')';
    };
  }
  function updateFieldsFromParameters$lambda_0() {
    _init_properties_CryptoACEditProfileForm_kt__8s21a();
    return 'Version number of profile file is 1';
  }
  function updateFieldsFromParameters$lambda_1($rmParameters, $props) {
    return function () {
      return 'RM parameters type is ' + $rmParameters.w51() + ' ' + ('(RM type in props is ' + $props.rmTypeProp);
    };
  }
  function updateFieldsFromParameters$lambda_2() {
    _init_properties_CryptoACEditProfileForm_kt__8s21a();
    return 'Forcing update of RM type';
  }
  function updateFieldsFromParameters$lambda_3() {
    _init_properties_CryptoACEditProfileForm_kt__8s21a();
    return 'No RM parameters were given';
  }
  function updateFieldsFromParameters$lambda_4($mmParameters, $props) {
    return function () {
      return 'MM parameters type is ' + $mmParameters.e4y() + ' ' + ('(MM type in props is ' + $props.mmTypeProp);
    };
  }
  function updateFieldsFromParameters$lambda_5() {
    _init_properties_CryptoACEditProfileForm_kt__8s21a();
    return 'Forcing update of MM type';
  }
  function updateFieldsFromParameters$lambda_6() {
    _init_properties_CryptoACEditProfileForm_kt__8s21a();
    return 'No MM parameters were given';
  }
  function updateFieldsFromParameters$lambda_7($dmParameters, $props) {
    return function () {
      return 'DM parameters type is ' + $dmParameters.k4x() + ' ' + ('(DM type in props is ' + $props.dmTypeProp);
    };
  }
  function updateFieldsFromParameters$lambda_8() {
    _init_properties_CryptoACEditProfileForm_kt__8s21a();
    return 'Forcing update of DM type';
  }
  function updateFieldsFromParameters$lambda_9() {
    _init_properties_CryptoACEditProfileForm_kt__8s21a();
    return 'No DM parameters were given';
  }
  function updateFieldsFromParameters$lambda_10($acParameters, $props) {
    return function () {
      return 'AC parameters type is ' + $acParameters.y4u() + ' ' + ('(AC type in props is ' + $props.acTypeProp);
    };
  }
  function updateFieldsFromParameters$lambda_11() {
    _init_properties_CryptoACEditProfileForm_kt__8s21a();
    return 'Forcing update of AC type';
  }
  function updateFieldsFromParameters$lambda_12() {
    _init_properties_CryptoACEditProfileForm_kt__8s21a();
    return 'No AC parameters were given';
  }
  function updateFieldsFromParameters$lambda_13() {
    _init_properties_CryptoACEditProfileForm_kt__8s21a();
    return 'NullPointerException, malformed .json profile file';
  }
  function updateFieldsFromParameters$lambda_14($e) {
    return function () {
      return $e;
    };
  }
  function updateFieldsFromParameters$lambda_15() {
    _init_properties_CryptoACEditProfileForm_kt__8s21a();
    return 'UnsupportedOperationException, .json profile file have different types than requested';
  }
  function updateFieldsFromParameters$lambda_16($e) {
    return function () {
      return $e;
    };
  }
  function submitEditProfileForm$lambda($method, $endpoint) {
    return function () {
      return 'Submitting CryptoAC edit profile form, method ' + $method + ', endpoint ' + $endpoint;
    };
  }
  function submitEditProfileForm$lambda_0($method) {
    return function () {
      return 'HTTP Method of edit profile form is neither Post nor Patch (it is ' + $method + ')';
    };
  }
  function submitEditProfileForm$slambda$lambda($status, $code) {
    return function () {
      return 'Response status is ' + $status + ', code is ' + $code;
    };
  }
  function submitEditProfileForm$slambda$lambda_0($status, $code) {
    return function () {
      return 'Response status is ' + $status + ', code is ' + $code;
    };
  }
  function submitEditProfileForm$slambda($props, $method, $endpoint, $parameters, resultContinuation) {
    this.k59_1 = $props;
    this.l59_1 = $method;
    this.m59_1 = $endpoint;
    this.n59_1 = $parameters;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(submitEditProfileForm$slambda).f1e = function ($this$launch, $completion) {
    var tmp = this.g1e($this$launch, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  };
  protoOf(submitEditProfileForm$slambda).si = function (p1, $completion) {
    return this.f1e((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(submitEditProfileForm$slambda).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 5;
            this.k59_1.handleChangeBackdropIsOpenProp(true);
            if (this.l59_1.equals(Companion_getInstance().c21_1)) {
              var tmp_0 = this;
              tmp_0.q59_1 = this.k59_1.httpClientProp;
              var tmp_1 = this;
              var tmp0_apply = new HttpRequestBuilder();
              url(tmp0_apply, this.m59_1);
              contentType(tmp0_apply, Application_getInstance().f1u_1);
              var tmp_2 = this.n59_1;
              var tmp0_setBody = tmp_2 instanceof CoreParameters ? tmp_2 : THROW_CCE();
              var tmp0_subject = tmp0_setBody;
              if (tmp0_subject == null) {
                tmp0_apply.z3h_1 = NullBody_getInstance();
                var tmp_3 = JsType_getInstance();
                var tmp_4 = getKClass(CoreParameters);
                var tmp_5;
                try {
                  tmp_5 = createKType(getKClass(CoreParameters), arrayOf([]), false);
                } catch ($p) {
                  var tmp_6;
                  if ($p instanceof Error) {
                    var cause = $p;
                    tmp_6 = null;
                  } else {
                    throw $p;
                  }
                  tmp_5 = tmp_6;
                }
                tmp0_apply.v3n(typeInfoImpl(tmp_3, tmp_4, tmp_5));
              } else {
                if (tmp0_subject instanceof OutgoingContent) {
                  tmp0_apply.z3h_1 = tmp0_setBody;
                  tmp0_apply.v3n(null);
                } else {
                  tmp0_apply.z3h_1 = tmp0_setBody;
                  var tmp_7 = JsType_getInstance();
                  var tmp_8 = getKClass(CoreParameters);
                  var tmp_9;
                  try {
                    tmp_9 = createKType(getKClass(CoreParameters), arrayOf([]), false);
                  } catch ($p) {
                    var tmp_10;
                    if ($p instanceof Error) {
                      var cause_0 = $p;
                      tmp_10 = null;
                    } else {
                      throw $p;
                    }
                    tmp_9 = tmp_10;
                  }
                  tmp0_apply.v3n(typeInfoImpl(tmp_7, tmp_8, tmp_9));
                }
              }
              tmp_1.r59_1 = tmp0_apply;
              this.r59_1.x3h_1 = Companion_getInstance().c21_1;
              this.xh_1 = 2;
              suspendResult = (new HttpStatement(this.r59_1, this.q59_1)).o4i(this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              var tmp_11 = this;
              tmp_11.s59_1 = this.k59_1.httpClientProp;
              var tmp_12 = this;
              var tmp3_apply = new HttpRequestBuilder();
              url(tmp3_apply, this.m59_1);
              contentType(tmp3_apply, Application_getInstance().f1u_1);
              var tmp_13 = this.n59_1;
              var tmp0_setBody_0 = tmp_13 instanceof CoreParameters ? tmp_13 : THROW_CCE();
              var tmp0_subject_0 = tmp0_setBody_0;
              if (tmp0_subject_0 == null) {
                tmp3_apply.z3h_1 = NullBody_getInstance();
                var tmp_14 = JsType_getInstance();
                var tmp_15 = getKClass(CoreParameters);
                var tmp_16;
                try {
                  tmp_16 = createKType(getKClass(CoreParameters), arrayOf([]), false);
                } catch ($p) {
                  var tmp_17;
                  if ($p instanceof Error) {
                    var cause_1 = $p;
                    tmp_17 = null;
                  } else {
                    throw $p;
                  }
                  tmp_16 = tmp_17;
                }
                tmp3_apply.v3n(typeInfoImpl(tmp_14, tmp_15, tmp_16));
              } else {
                if (tmp0_subject_0 instanceof OutgoingContent) {
                  tmp3_apply.z3h_1 = tmp0_setBody_0;
                  tmp3_apply.v3n(null);
                } else {
                  tmp3_apply.z3h_1 = tmp0_setBody_0;
                  var tmp_18 = JsType_getInstance();
                  var tmp_19 = getKClass(CoreParameters);
                  var tmp_20;
                  try {
                    tmp_20 = createKType(getKClass(CoreParameters), arrayOf([]), false);
                  } catch ($p) {
                    var tmp_21;
                    if ($p instanceof Error) {
                      var cause_2 = $p;
                      tmp_21 = null;
                    } else {
                      throw $p;
                    }
                    tmp_20 = tmp_21;
                  }
                  tmp3_apply.v3n(typeInfoImpl(tmp_18, tmp_19, tmp_20));
                }
              }
              tmp_12.t59_1 = tmp3_apply;
              this.t59_1.x3h_1 = Companion_getInstance().e21_1;
              this.xh_1 = 1;
              suspendResult = (new HttpStatement(this.t59_1, this.s59_1)).o4i(this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            }

            break;
          case 1:
            this.p59_1 = suspendResult;
            this.xh_1 = 3;
            continue $sm;
          case 2:
            this.p59_1 = suspendResult;
            this.xh_1 = 3;
            continue $sm;
          case 3:
            this.u59_1 = this.p59_1;
            this.xh_1 = 4;
            var tmp_22 = this.u59_1.e3l();
            var tmp_23 = JsType_getInstance();
            var tmp_24 = getKClass(OutcomeCode);
            var tmp_25;
            try {
              tmp_25 = createKType(getKClass(OutcomeCode), arrayOf([]), false);
            } catch ($p) {
              var tmp_26;
              if ($p instanceof Error) {
                var cause_3 = $p;
                tmp_26 = null;
              } else {
                throw $p;
              }
              tmp_25 = tmp_26;
            }

            suspendResult = tmp_22.h3k(typeInfoImpl(tmp_23, tmp_24, tmp_25), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 4:
            var code = suspendResult instanceof OutcomeCode ? suspendResult : THROW_CCE();
            var status = this.u59_1.j3k();
            this.k59_1.handleChangeBackdropIsOpenProp(false);
            if (status.equals(Companion_getInstance_2().v21_1)) {
              var tmp_27 = get_logger_1();
              tmp_27.h4r(submitEditProfileForm$slambda$lambda(status, code));
              this.k59_1.handleDisplayAlertProp(OutcomeCode_CODE_000_SUCCESS_getInstance(), CryptoACAlertSeverity_SUCCESS_getInstance());
              this.k59_1.handleProfileWasCreatedOrModifiedProp(this.k59_1.coreTypeProp);
            } else {
              var tmp_28 = get_logger_1();
              tmp_28.i4r(submitEditProfileForm$slambda$lambda_0(status, code));
              this.k59_1.handleDisplayAlertProp(code, CryptoACAlertSeverity_ERROR_getInstance());
            }

            return Unit_getInstance();
          case 5:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 5) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  protoOf(submitEditProfileForm$slambda).g1e = function ($this$launch, completion) {
    var i = new submitEditProfileForm$slambda(this.k59_1, this.l59_1, this.m59_1, this.n59_1, completion);
    i.o59_1 = $this$launch;
    return i;
  };
  function submitEditProfileForm$slambda_0($props, $method, $endpoint, $parameters, resultContinuation) {
    var i = new submitEditProfileForm$slambda($props, $method, $endpoint, $parameters, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.f1e($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function submitEditProfileForm$lambda_1() {
    _init_properties_CryptoACEditProfileForm_kt__8s21a();
    return 'NullPointerException: probably not all fields of the edit profile form were filled';
  }
  function submitEditProfileForm$lambda_2($e) {
    return function () {
      return 'Error during edit profile (' + $e.message + '), see console log for details';
    };
  }
  function getFieldsFromParameters$lambda($props) {
    return function () {
      return 'Getting profile fields from parameters (core type is ' + $props.coreTypeProp + ')';
    };
  }
  function getFieldsFromParameters$lambda_0($rmType) {
    return function () {
      return 'RM type to use is ' + $rmType;
    };
  }
  function getFieldsFromParameters$lambda_1($mmType) {
    return function () {
      return 'MM type to use is ' + $mmType;
    };
  }
  function getFieldsFromParameters$lambda_2($dmType) {
    return function () {
      return 'DM type to use is ' + $dmType;
    };
  }
  function getFieldsFromParameters$lambda_3($acType) {
    return function () {
      return 'AC type to use is ' + $acType;
    };
  }
  function getStateFromProps$lambda() {
    _init_properties_CryptoACEditProfileForm_kt__8s21a();
    return 'CryptoACEditProfileForm is getting updated';
  }
  function getStateFromProps$lambda_0() {
    _init_properties_CryptoACEditProfileForm_kt__8s21a();
    return 'Parameters were given, use them to update the fields';
  }
  function getStateFromProps$lambda_1() {
    _init_properties_CryptoACEditProfileForm_kt__8s21a();
    return 'Parameters were not given, rely on properties';
  }
  var properties_initialized_CryptoACEditProfileForm_kt_xziwi8;
  function _init_properties_CryptoACEditProfileForm_kt__8s21a() {
    if (properties_initialized_CryptoACEditProfileForm_kt_xziwi8) {
    } else {
      properties_initialized_CryptoACEditProfileForm_kt_xziwi8 = true;
      var tmp = KotlinLogging_getInstance();
      logger_2 = tmp.b4r(logger$lambda_2);
      CryptoACEditProfileForm = FC(CryptoACEditProfileForm$lambda);
    }
  }
  function get_logger_2() {
    _init_properties_CryptoACForm_kt__xz999j();
    return logger_3;
  }
  var logger_3;
  function get_CryptoACForm() {
    _init_properties_CryptoACForm_kt__xz999j();
    return CryptoACForm;
  }
  var CryptoACForm;
  function handleCryptoACFormSubmit(props, e, submitAndHandleCallback) {
    _init_properties_CryptoACForm_kt__xz999j();
    e.preventDefault();
    var tmp = get_logger_2();
    tmp.h4r(handleCryptoACFormSubmit$lambda);
    var tmp_0 = e.target;
    var form = tmp_0 instanceof HTMLFormElement ? tmp_0 : THROW_CCE();
    var values = HashMap_init_$Create$();
    var inductionVariable = 0;
    var last = form.elements.length;
    if (inductionVariable <= last)
      do {
        var i = inductionVariable;
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$3;
        // Inline function 'kotlin.apply' call
        var tmp0_apply = form.elements.item(i);
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'eu.fbk.st.cryptoac.view.components.custom.handleCryptoACFormSubmit.<anonymous>' call
        var tmp_1;
        if (tmp0_apply instanceof HTMLInputElement) {
          var tmp$ret$0;
          // Inline function 'kotlin.text.isNotBlank' call
          var tmp0_isNotBlank = tmp0_apply.value;
          tmp$ret$0 = !isBlank(tmp0_isNotBlank);
          tmp_1 = tmp$ret$0;
        } else {
          tmp_1 = false;
        }
        if (tmp_1) {
          var tmp0_subject = tmp0_apply.type;
          if (tmp0_subject === InputType_password_getInstance().toString()) {
            // Inline function 'kotlin.collections.set' call
            var tmp1_set = tmp0_apply.name;
            var tmp2_set = tmp0_apply.value;
            values.y2(tmp1_set, tmp2_set);
          } else {
            if (tmp0_subject === InputType_text_getInstance().toString()) {
              // Inline function 'kotlin.collections.set' call
              var tmp3_set = tmp0_apply.name;
              var tmp4_set = tmp0_apply.value;
              values.y2(tmp3_set, tmp4_set);
            } else {
              if (tmp0_subject === InputType_number_getInstance().toString()) {
                // Inline function 'kotlin.collections.set' call
                var tmp5_set = tmp0_apply.name;
                var tmp6_set = tmp0_apply.value;
                values.y2(tmp5_set, tmp6_set);
              } else {
                if (tmp0_subject === InputType_radio_getInstance().toString()) {
                  if (tmp0_apply.checked) {
                    // Inline function 'kotlin.collections.set' call
                    var tmp7_set = tmp0_apply.name;
                    var tmp8_set = tmp0_apply.value;
                    values.y2(tmp7_set, tmp8_set);
                  }
                } else {
                  var tmp$ret$2;
                  // Inline function 'kotlin.text.lowercase' call
                  var tmp9_lowercase = InputType_checkBox_getInstance().toString();
                  var tmp$ret$1;
                  // Inline function 'kotlin.js.asDynamic' call
                  tmp$ret$1 = tmp9_lowercase;
                  tmp$ret$2 = tmp$ret$1.toLowerCase();
                  if (tmp0_subject === tmp$ret$2) {
                    // Inline function 'kotlin.collections.set' call
                    var tmp10_set = split(tmp0_apply.value, [get_divider()]).j(1);
                    var tmp11_set = split(tmp0_apply.value, [get_divider()]).j(0);
                    values.y2(tmp10_set, tmp11_set);
                  } else {
                    console.log('TODO FIX');
                  }
                }
              }
            }
          }
        }
        tmp$ret$3 = tmp0_apply;
      }
       while (!(i === last));
    var files = HashMap_init_$Create$();
    var inductionVariable_0 = 0;
    var last_0 = form.elements.length;
    if (inductionVariable_0 <= last_0)
      do {
        var i_0 = inductionVariable_0;
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        var tmp$ret$6;
        // Inline function 'kotlin.apply' call
        var tmp1_apply = form.elements.item(i_0);
        // Inline function 'kotlin.contracts.contract' call
        // Inline function 'eu.fbk.st.cryptoac.view.components.custom.handleCryptoACFormSubmit.<anonymous>' call
        var tmp_2;
        if (tmp1_apply instanceof HTMLInputElement) {
          tmp_2 = tmp1_apply.type === InputType_file_getInstance().toString();
        } else {
          tmp_2 = false;
        }
        if (tmp_2) {
          var tmp$ret$5;
          // Inline function 'org.w3c.files.get' call
          var tmp0_get = ensureNotNull(tmp1_apply.files);
          var tmp$ret$4;
          // Inline function 'kotlin.js.asDynamic' call
          tmp$ret$4 = tmp0_get;
          tmp$ret$5 = tmp$ret$4[0];
          var file = tmp$ret$5;
          if (!(file == null)) {
            // Inline function 'kotlin.collections.set' call
            var tmp1_set_0 = tmp1_apply.name;
            files.y2(tmp1_set_0, file);
          }
        }
        tmp$ret$6 = tmp1_apply;
      }
       while (!(i_0 === last_0));
    var tmp_3 = get_logger_2();
    tmp_3.g4r(handleCryptoACFormSubmit$lambda_0(values, files));
    // Inline function 'kotlin.collections.forEach' call
    var tmp$ret$7;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$7 = values.o().f();
    var tmp0_iterator = tmp$ret$7;
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      // Inline function 'eu.fbk.st.cryptoac.view.components.custom.handleCryptoACFormSubmit.<anonymous>' call
      var tmp_4 = get_logger_2();
      tmp_4.g4r(handleCryptoACFormSubmit$lambda_1(element));
    }
    // Inline function 'kotlin.collections.forEach' call
    var tmp$ret$8;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$8 = files.o().f();
    var tmp0_iterator_0 = tmp$ret$8;
    while (tmp0_iterator_0.g()) {
      var element_0 = tmp0_iterator_0.h();
      // Inline function 'eu.fbk.st.cryptoac.view.components.custom.handleCryptoACFormSubmit.<anonymous>' call
      var tmp_5 = get_logger_2();
      tmp_5.g4r(handleCryptoACFormSubmit$lambda_2(element_0));
    }
    var collectedValues = values.i() + files.i() | 0;
    var expectedValues = {_v: 0};
    // Inline function 'kotlin.collections.forEach' call
    var tmp2_forEach = props.cryptoACFormFieldsProp;
    var tmp0_iterator_1 = tmp2_forEach.f();
    while (tmp0_iterator_1.g()) {
      var element_1 = tmp0_iterator_1.h();
      // Inline function 'eu.fbk.st.cryptoac.view.components.custom.handleCryptoACFormSubmit.<anonymous>' call
      expectedValues._v = expectedValues._v + element_1.i() | 0;
    }
    if (expectedValues._v === collectedValues) {
      var tmp_6 = MainScope();
      launch(tmp_6, VOID, VOID, handleCryptoACFormSubmit$slambda_0(props, submitAndHandleCallback, values, files, null));
    } else {
      var tmp_7 = get_logger_2();
      tmp_7.i4r(handleCryptoACFormSubmit$lambda_3(collectedValues, expectedValues));
      props.handleDisplayAlertProp(OutcomeCode_CODE_019_MISSING_PARAMETERS_getInstance(), CryptoACAlertSeverity_WARNING_getInstance());
    }
  }
  function CryptoACFormData(key, submitButtonText, icon, endpoint, method, coreType, cryptoACFormFields, submit, divider) {
    divider = divider === VOID ? false : divider;
    this.v59_1 = key;
    this.w59_1 = submitButtonText;
    this.x59_1 = icon;
    this.y59_1 = endpoint;
    this.z59_1 = method;
    this.a5a_1 = coreType;
    this.b5a_1 = cryptoACFormFields;
    this.c5a_1 = submit;
    this.d5a_1 = divider;
  }
  protoOf(CryptoACFormData).toString = function () {
    return 'CryptoACFormData(key=' + this.v59_1 + ', submitButtonText=' + this.w59_1 + ', icon=' + this.x59_1 + ', endpoint=' + this.y59_1 + ', method=' + this.z59_1 + ', coreType=' + this.a5a_1 + ', cryptoACFormFields=' + this.b5a_1 + ', submit=' + this.c5a_1 + ', divider=' + this.d5a_1 + ')';
  };
  protoOf(CryptoACFormData).hashCode = function () {
    var result = getStringHashCode(this.v59_1);
    result = imul(result, 31) + getStringHashCode(this.w59_1) | 0;
    result = imul(result, 31) + hashCode(this.x59_1) | 0;
    result = imul(result, 31) + getStringHashCode(this.y59_1) | 0;
    result = imul(result, 31) + this.z59_1.hashCode() | 0;
    result = imul(result, 31) + this.a5a_1.hashCode() | 0;
    result = imul(result, 31) + hashCode(this.b5a_1) | 0;
    result = imul(result, 31) + hashCode(this.c5a_1) | 0;
    result = imul(result, 31) + (this.d5a_1 | 0) | 0;
    return result;
  };
  protoOf(CryptoACFormData).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CryptoACFormData))
      return false;
    var tmp0_other_with_cast = other instanceof CryptoACFormData ? other : THROW_CCE();
    if (!(this.v59_1 === tmp0_other_with_cast.v59_1))
      return false;
    if (!(this.w59_1 === tmp0_other_with_cast.w59_1))
      return false;
    if (!equals(this.x59_1, tmp0_other_with_cast.x59_1))
      return false;
    if (!(this.y59_1 === tmp0_other_with_cast.y59_1))
      return false;
    if (!this.z59_1.equals(tmp0_other_with_cast.z59_1))
      return false;
    if (!this.a5a_1.equals(tmp0_other_with_cast.a5a_1))
      return false;
    if (!equals(this.b5a_1, tmp0_other_with_cast.b5a_1))
      return false;
    if (!equals(this.c5a_1, tmp0_other_with_cast.c5a_1))
      return false;
    if (!(this.d5a_1 === tmp0_other_with_cast.d5a_1))
      return false;
    return true;
  };
  function logger$lambda_3() {
    _init_properties_CryptoACForm_kt__xz999j();
    return Unit_getInstance();
  }
  function CryptoACForm$lambda($this$FC, props) {
    _init_properties_CryptoACForm_kt__xz999j();
    var tmp$ret$3;
    // Inline function 'react.dom.html.ReactHTML.form' call
    var tmp0__get_form__8ae7m5 = ReactHTML_getInstance();
    var tmp$ret$2;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = 'form';
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    var tmp = tmp$ret$3;
    $this$FC.x4r(tmp, CryptoACForm$lambda$lambda(props));
    return Unit_getInstance();
  }
  function CryptoACForm$lambda$lambda$lambda($props) {
    return function (event) {
      handleCryptoACFormSubmit($props, event, $props.handleSubmitEventProp);
      return Unit_getInstance();
    };
  }
  function CryptoACForm$lambda$lambda$lambda$lambda(it) {
    _init_properties_CryptoACForm_kt__xz999j();
    return it;
  }
  function CryptoACForm$lambda$lambda$lambda$lambda$lambda$lambda$lambda($element, $newValue) {
    return function () {
      return 'chosen new value for radio group ' + $element.s4s_1 + ': ' + $newValue;
    };
  }
  function CryptoACForm$lambda$lambda$lambda$lambda$lambda$lambda($element) {
    return function (event) {
      var tmp = event.target;
      var newValue = (tmp instanceof HTMLInputElement ? tmp : THROW_CCE()).value;
      var tmp_0 = get_logger_2();
      tmp_0.h4r(CryptoACForm$lambda$lambda$lambda$lambda$lambda$lambda$lambda($element, newValue));
      return true;
    };
  }
  function CryptoACForm$lambda$lambda$lambda$lambda$lambda($props, $element) {
    return function ($this$invoke) {
      $this$invoke.disabledProp = $props.acceptDisabledElementsProp ? $element.y4s_1 : false;
      $this$invoke.defaultValueProp = ensureNotNull($element.w4s_1);
      $this$invoke.nameProp = $element.s4s_1;
      $this$invoke.rowProp = true;
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp1_map = ensureNotNull($element.v4s_1);
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp1_map, 10));
      var tmp0_iterator = tmp1_map.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'eu.fbk.st.cryptoac.view.components.custom.CryptoACForm.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
        var tmp;
        if ($props.methodProp.equals(Companion_getInstance().f21_1)) {
          tmp = 'secondary';
        } else {
          tmp = 'primary';
        }
        tmp$ret$0 = new CryptoACRadioOption(item, item, tmp);
        tmp0_mapTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo;
      tmp$ret$2 = tmp$ret$1;
      $this$invoke.optionsProp = tmp$ret$2;
      $this$invoke.onChangeProp = CryptoACForm$lambda$lambda$lambda$lambda$lambda$lambda($element);
      return Unit_getInstance();
    };
  }
  function CryptoACForm$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda(it) {
    _init_properties_CryptoACForm_kt__xz999j();
    return Unit_getInstance();
  }
  function CryptoACForm$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($props, $element) {
    return function ($this$invoke) {
      $this$invoke.disabledProp = $props.acceptDisabledElementsProp ? $element.y4s_1 : false;
      $this$invoke.nameProp = $element.s4s_1;
      $this$invoke.idProp = $element.t4s_1;
      $this$invoke.labelProp = $element.t4s_1;
      $this$invoke.labelIdProp = $element.t4s_1 + '-label';
      $this$invoke.autoWidthProp = true;
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp1_map = values_10();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$_0(tmp1_map.length);
      var indexedObject = tmp1_map;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var item = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        // Inline function 'eu.fbk.st.cryptoac.view.components.custom.CryptoACForm.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
        tmp$ret$0 = item.toString();
        tmp0_mapTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo;
      tmp$ret$2 = tmp$ret$1;
      $this$invoke.optionsProp = tmp$ret$2;
      $this$invoke.defaultValueProp = ensureNotNull($element.w4s_1);
      $this$invoke.optionsProp = ensureNotNull($element.v4s_1);
      $this$invoke.onChangeProp = CryptoACForm$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda;
      return Unit_getInstance();
    };
  }
  function CryptoACForm$lambda$lambda$lambda$lambda$lambda$lambda_0($element, $props) {
    return function ($this$invoke) {
      var tmp;
      if (!($element.x4s_1 == null)) {
        $this$invoke.className = $element.x4s_1;
        tmp = Unit_getInstance();
      }
      $this$invoke.variant = 'standard';
      var tmp_0 = get_CryptoACSelect();
      $this$invoke.x4r(tmp_0, CryptoACForm$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($props, $element));
      return Unit_getInstance();
    };
  }
  function CryptoACForm$lambda$lambda$lambda$lambda$lambda_0($element, $props) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$12;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$11;
      // Inline function 'js.core.jso' call
      var tmp$ret$10;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.components.custom.CryptoACForm.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '10px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.marginBottom = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '10px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      tmp0_apply.marginTop = tmp$ret$6;
      var tmp$ret$9;
      // Inline function 'csstype.px' call
      var tmp$ret$8;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp2_unsafeCast = '20px';
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = tmp2_unsafeCast;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      tmp0_apply.marginRight = tmp$ret$9;
      tmp$ret$10 = tmp0_apply;
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = css(tmp$ret$11);
      tmp1_css.className = tmp$ret$12;
      var tmp = FormControl;
      $this$invoke.x4r(tmp, CryptoACForm$lambda$lambda$lambda$lambda$lambda$lambda_0($element, $props));
      return Unit_getInstance();
    };
  }
  function CryptoACForm$lambda$lambda$lambda$lambda$lambda$lambda_1($element, $props) {
    return function ($this$invoke) {
      var tmp;
      if (!($element.x4s_1 == null)) {
        $this$invoke.classNameProp = $element.x4s_1;
        tmp = Unit_getInstance();
      }
      var tmp_0;
      var tmp_1;
      var tmp$ret$0;
      // Inline function 'kotlin.text.isNullOrBlank' call
      var tmp0_isNullOrBlank = $element.w4s_1;
      // Inline function 'kotlin.contracts.contract' call
      tmp$ret$0 = tmp0_isNullOrBlank == null ? true : isBlank(tmp0_isNullOrBlank);
      if (tmp$ret$0) {
        tmp_1 = true;
      } else {
        tmp_1 = $element.w4s_1 === 'null';
      }
      if (tmp_1) {
        tmp_0 = '';
      } else {
        tmp_0 = $element.w4s_1;
      }
      $this$invoke.defaultValueProp = tmp_0;
      $this$invoke.disabledProp = $props.acceptDisabledElementsProp ? $element.y4s_1 : false;
      $this$invoke.nameProp = $element.s4s_1;
      $this$invoke.labelProp = $element.t4s_1;
      $this$invoke.typeProp = $element.u4s_1.toString();
      $this$invoke.variantProp = 'standard';
      var tmp_2;
      if ($props.methodProp.equals(Companion_getInstance().f21_1)) {
        tmp_2 = 'secondary';
      } else {
        tmp_2 = 'primary';
      }
      $this$invoke.colorProp = tmp_2;
      return Unit_getInstance();
    };
  }
  function CryptoACForm$lambda$lambda$lambda$lambda$lambda_1($element, $props) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$12;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$11;
      // Inline function 'js.core.jso' call
      var tmp$ret$10;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.components.custom.CryptoACForm.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '10px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.marginBottom = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '10px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      tmp0_apply.marginTop = tmp$ret$6;
      var tmp$ret$9;
      // Inline function 'csstype.px' call
      var tmp$ret$8;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp2_unsafeCast = '20px';
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = tmp2_unsafeCast;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      tmp0_apply.marginRight = tmp$ret$9;
      tmp$ret$10 = tmp0_apply;
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = css(tmp$ret$11);
      tmp1_css.className = tmp$ret$12;
      var tmp = get_CryptoACTextField();
      $this$invoke.x4r(tmp, CryptoACForm$lambda$lambda$lambda$lambda$lambda$lambda_1($element, $props));
      return Unit_getInstance();
    };
  }
  function CryptoACForm$lambda$lambda$lambda$lambda$lambda$lambda_2($props, $element) {
    return function ($this$invoke) {
      $this$invoke.disabledProp = $props.acceptDisabledElementsProp ? $element.y4s_1 : false;
      var tmp;
      var tmp_0;
      var tmp$ret$0;
      // Inline function 'kotlin.text.isNullOrBlank' call
      var tmp0_isNullOrBlank = $element.w4s_1;
      // Inline function 'kotlin.contracts.contract' call
      tmp$ret$0 = tmp0_isNullOrBlank == null ? true : isBlank(tmp0_isNullOrBlank);
      if (tmp$ret$0) {
        tmp_0 = true;
      } else {
        tmp_0 = $element.w4s_1 === 'null';
      }
      if (tmp_0) {
        tmp = 'false';
      } else {
        tmp = $element.w4s_1;
      }
      $this$invoke.defaultValueProp = tmp;
      $this$invoke.labelProp = $element.s4s_1;
      return Unit_getInstance();
    };
  }
  function CryptoACForm$lambda$lambda$lambda$lambda$lambda_2($props, $element) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$12;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$11;
      // Inline function 'js.core.jso' call
      var tmp$ret$10;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.components.custom.CryptoACForm.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '10px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.marginBottom = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '10px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      tmp0_apply.marginTop = tmp$ret$6;
      var tmp$ret$9;
      // Inline function 'csstype.px' call
      var tmp$ret$8;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp2_unsafeCast = '20px';
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = tmp2_unsafeCast;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      tmp0_apply.marginRight = tmp$ret$9;
      tmp$ret$10 = tmp0_apply;
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = css(tmp$ret$11);
      tmp1_css.className = tmp$ret$12;
      var tmp = get_CryptoACCheckbox();
      $this$invoke.x4r(tmp, CryptoACForm$lambda$lambda$lambda$lambda$lambda$lambda_2($props, $element));
      return Unit_getInstance();
    };
  }
  function CryptoACForm$lambda$lambda$lambda$lambda$lambda$lambda_3($this$invoke) {
    _init_properties_CryptoACForm_kt__xz999j();
    return Unit_getInstance();
  }
  function CryptoACForm$lambda$lambda$lambda$lambda$lambda$lambda_4($props, $element) {
    return function ($this$invoke) {
      $this$invoke.disabled = $props.acceptDisabledElementsProp ? $element.y4s_1 : false;
      $this$invoke.name = $element.s4s_1;
      $this$invoke.type = (/*union*/{button: 'button', checkbox: 'checkbox', color: 'color', date: 'date', datetimeLocal: 'datetime-local', email: 'email', file: 'file', hidden: 'hidden', image: 'image', month: 'month', number: 'number', password: 'password', radio: 'radio', range: 'range', reset: 'reset', search: 'search', submit: 'submit', tel: 'tel', text: 'text', time: 'time', url: 'url', week: 'week'}/*union*/).file;
      $this$invoke.hidden = true;
      return Unit_getInstance();
    };
  }
  function CryptoACForm$lambda$lambda$lambda$lambda$lambda_3($props, $element) {
    return function ($this$invoke) {
      $this$invoke.color = 'primary';
      $this$invoke.component = 'label';
      var tmp = FaCloudUploadAlt;
      $this$invoke.x4r(tmp, CryptoACForm$lambda$lambda$lambda$lambda$lambda$lambda_3);
      var tmp$ret$3;
      // Inline function 'react.dom.html.ReactHTML.input' call
      var tmp0__get_input__prnny7 = ReactHTML_getInstance();
      var tmp$ret$2;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = 'input';
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp_0 = tmp$ret$3;
      $this$invoke.x4r(tmp_0, CryptoACForm$lambda$lambda$lambda$lambda$lambda$lambda_4($props, $element));
      return Unit_getInstance();
    };
  }
  function CryptoACForm$lambda$lambda$lambda$lambda$lambda_4($element) {
    return function ($this$invoke) {
      $this$invoke.w4r($element.t4s_1);
      return Unit_getInstance();
    };
  }
  function CryptoACForm$lambda$lambda$lambda$lambda_0($currentSM, $element, $props) {
    return function ($this$invoke) {
      $this$invoke.item = true;
      $this$invoke.xs = 12;
      $this$invoke.sm = $currentSM;
      var tmp0_subject = $element.u4s_1;
      var tmp0 = tmp0_subject.n4_1;
      var tmp;
      switch (tmp0) {
        case 13:
          var tmp_0 = get_CryptoACRadioGroup();
          $this$invoke.x4r(tmp_0, CryptoACForm$lambda$lambda$lambda$lambda$lambda($props, $element));
          tmp = Unit_getInstance();
          break;
        case 23:
          var tmp$ret$3;
          // Inline function 'react.dom.html.ReactHTML.div' call
          var tmp0__get_div__2k2o9m = ReactHTML_getInstance();
          var tmp$ret$2;
          // Inline function 'react.IntrinsicType' call
          var tmp$ret$1;
          // Inline function 'kotlin.js.unsafeCast' call
          var tmp$ret$0;
          // Inline function 'kotlin.js.asDynamic' call
          tmp$ret$0 = 'div';
          tmp$ret$1 = tmp$ret$0;
          tmp$ret$2 = tmp$ret$1;
          tmp$ret$3 = tmp$ret$2;

          var tmp_1 = tmp$ret$3;
          $this$invoke.x4r(tmp_1, CryptoACForm$lambda$lambda$lambda$lambda$lambda_0($element, $props));
          tmp = Unit_getInstance();
          break;
        case 18:
        case 12:
        case 11:
          var tmp$ret$7;
          // Inline function 'react.dom.html.ReactHTML.div' call
          var tmp1__get_div__r5s89x = ReactHTML_getInstance();
          var tmp$ret$6;
          // Inline function 'react.IntrinsicType' call
          var tmp$ret$5;
          // Inline function 'kotlin.js.unsafeCast' call
          var tmp$ret$4;
          // Inline function 'kotlin.js.asDynamic' call
          tmp$ret$4 = 'div';
          tmp$ret$5 = tmp$ret$4;
          tmp$ret$6 = tmp$ret$5;
          tmp$ret$7 = tmp$ret$6;

          var tmp_2 = tmp$ret$7;
          $this$invoke.x4r(tmp_2, CryptoACForm$lambda$lambda$lambda$lambda$lambda_1($element, $props));
          tmp = Unit_getInstance();
          break;
        case 1:
          var tmp$ret$11;
          // Inline function 'react.dom.html.ReactHTML.div' call
          var tmp2__get_div__e5gx5o = ReactHTML_getInstance();
          var tmp$ret$10;
          // Inline function 'react.IntrinsicType' call
          var tmp$ret$9;
          // Inline function 'kotlin.js.unsafeCast' call
          var tmp$ret$8;
          // Inline function 'kotlin.js.asDynamic' call
          tmp$ret$8 = 'div';
          tmp$ret$9 = tmp$ret$8;
          tmp$ret$10 = tmp$ret$9;
          tmp$ret$11 = tmp$ret$10;

          var tmp_3 = tmp$ret$11;
          $this$invoke.x4r(tmp_3, CryptoACForm$lambda$lambda$lambda$lambda$lambda_2($props, $element));
          tmp = Unit_getInstance();
          break;
        case 7:
          var tmp_4 = IconButton;
          $this$invoke.x4r(tmp_4, CryptoACForm$lambda$lambda$lambda$lambda$lambda_3($props, $element));
          var tmp$ret$15;
          // Inline function 'react.dom.html.ReactHTML.span' call
          var tmp3__get_span__ew3wbo = ReactHTML_getInstance();
          var tmp$ret$14;
          // Inline function 'react.IntrinsicType' call
          var tmp$ret$13;
          // Inline function 'kotlin.js.unsafeCast' call
          var tmp$ret$12;
          // Inline function 'kotlin.js.asDynamic' call
          tmp$ret$12 = 'span';
          tmp$ret$13 = tmp$ret$12;
          tmp$ret$14 = tmp$ret$13;
          tmp$ret$15 = tmp$ret$14;

          var tmp_5 = tmp$ret$15;
          $this$invoke.x4r(tmp_5, CryptoACForm$lambda$lambda$lambda$lambda$lambda_4($element));
          tmp = Unit_getInstance();
          break;
        default:
          throw Exception_init_$Create$('TODO');
      }
      return Unit_getInstance();
    };
  }
  function CryptoACForm$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($props) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$6;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$5;
      // Inline function 'js.core.jso' call
      var tmp$ret$4;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.components.custom.CryptoACForm.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '5px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.marginRight = tmp$ret$3;
      tmp$ret$4 = tmp0_apply;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = css(tmp$ret$5);
      tmp1_css.className = tmp$ret$6;
      var tmp$ret$8;
      // Inline function 'kotlin.text.uppercase' call
      var tmp2_uppercase = $props.submitButtonTextProp;
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = tmp2_uppercase;
      tmp$ret$8 = tmp$ret$7.toUpperCase();
      $this$invoke.w4r(tmp$ret$8);
      return Unit_getInstance();
    };
  }
  function CryptoACForm$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2($this$invoke) {
    _init_properties_CryptoACForm_kt__xz999j();
    return Unit_getInstance();
  }
  function CryptoACForm$lambda$lambda$lambda$lambda$lambda$lambda_5($props) {
    return function ($this$invoke) {
      $this$invoke.type = InputType_submit_getInstance().toString();
      var tmp;
      if ($props.methodProp.equals(Companion_getInstance().f21_1)) {
        tmp = 'secondary';
      } else {
        tmp = 'primary';
      }
      $this$invoke.color = tmp;
      $this$invoke.variant = 'contained';
      var tmp$ret$3;
      // Inline function 'react.dom.html.ReactHTML.div' call
      var tmp0__get_div__2k2o9m = ReactHTML_getInstance();
      var tmp$ret$2;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = 'div';
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp_0 = tmp$ret$3;
      $this$invoke.x4r(tmp_0, CryptoACForm$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($props));
      var tmp_1 = FaPaperPlane;
      $this$invoke.x4r(tmp_1, CryptoACForm$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2);
      return Unit_getInstance();
    };
  }
  function CryptoACForm$lambda$lambda$lambda$lambda$lambda_5($props) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$9;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$8;
      // Inline function 'js.core.jso' call
      var tmp$ret$7;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.components.custom.CryptoACForm.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      tmp0_apply.textAlign = (/*union*/{center: 'center', end: 'end', justify: 'justify', left: 'left', matchParent: 'match-parent', right: 'right', start: 'start'}/*union*/).center;
      tmp0_apply.textAlign = (/*union*/{center: 'center', end: 'end', justify: 'justify', left: 'left', matchParent: 'match-parent', right: 'right', start: 'start'}/*union*/).center;
      tmp0_apply.alignItems = (/*union*/{center: 'center', end: 'end', flexEnd: 'flex-end', flexStart: 'flex-start', selfEnd: 'self-end', selfStart: 'self-start', start: 'start', baseline: 'baseline', normal: 'normal', stretch: 'stretch'}/*union*/).center;
      tmp0_apply.alignContent = (/*union*/{spaceAround: 'space-around', spaceBetween: 'space-between', spaceEvenly: 'space-evenly', stretch: 'stretch', center: 'center', end: 'end', flexEnd: 'flex-end', flexStart: 'flex-start', start: 'start', baseline: 'baseline', normal: 'normal'}/*union*/).center;
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '15px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.marginTop = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '15px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      tmp0_apply.marginRight = tmp$ret$6;
      tmp$ret$7 = tmp0_apply;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = css(tmp$ret$8);
      tmp1_css.className = tmp$ret$9;
      var tmp = Button_0;
      $this$invoke.x4r(tmp, CryptoACForm$lambda$lambda$lambda$lambda$lambda$lambda_5($props));
      return Unit_getInstance();
    };
  }
  function CryptoACForm$lambda$lambda$lambda$lambda_1($props) {
    return function ($this$invoke) {
      $this$invoke.item = true;
      $this$invoke.xs = 12;
      $this$invoke.sm = 12;
      var tmp$ret$3;
      // Inline function 'react.dom.html.ReactHTML.div' call
      var tmp0__get_div__2k2o9m = ReactHTML_getInstance();
      var tmp$ret$2;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = 'div';
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp = tmp$ret$3;
      $this$invoke.x4r(tmp, CryptoACForm$lambda$lambda$lambda$lambda$lambda_5($props));
      return Unit_getInstance();
    };
  }
  function CryptoACForm$lambda$lambda$lambda_0($props) {
    return function ($this$invoke) {
      $this$invoke.container = true;
      $this$invoke.spacing = 1;
      var tmp0_forEach = $props.cryptoACFormFieldsProp;
      var tmp0_iterator = tmp0_forEach.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        // Inline function 'eu.fbk.st.cryptoac.view.components.custom.CryptoACForm.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
        var tmp$ret$2;
        // Inline function 'kotlin.collections.map' call
        var tmp$ret$1;
        // Inline function 'kotlin.collections.mapTo' call
        var tmp0_mapTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(element, 10));
        var tmp0_iterator_0 = element.f();
        while (tmp0_iterator_0.g()) {
          var item = tmp0_iterator_0.h();
          var tmp$ret$0;
          // Inline function 'eu.fbk.st.cryptoac.view.components.custom.CryptoACForm.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
          tmp$ret$0 = item.s4s_1 + item.w4s_1;
          tmp0_mapTo.a(tmp$ret$0);
        }
        tmp$ret$1 = tmp0_mapTo;
        tmp$ret$2 = tmp$ret$1;
        var tmp = tmp$ret$2;
        $this$invoke.key = joinToString(tmp, VOID, VOID, VOID, VOID, VOID, CryptoACForm$lambda$lambda$lambda$lambda);
        var currentSM = 12 / element.i() | 0;
        // Inline function 'kotlin.collections.forEach' call
        var tmp0_iterator_1 = element.f();
        while (tmp0_iterator_1.g()) {
          var element_0 = tmp0_iterator_1.h();
          // Inline function 'eu.fbk.st.cryptoac.view.components.custom.CryptoACForm.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
          $this$invoke.key = element_0.s4s_1 + element_0.w4s_1;
          var tmp_0 = Grid;
          $this$invoke.x4r(tmp_0, CryptoACForm$lambda$lambda$lambda$lambda_0(currentSM, element_0, $props));
        }
      }
      var tmp_1 = Grid;
      $this$invoke.x4r(tmp_1, CryptoACForm$lambda$lambda$lambda$lambda_1($props));
      return Unit_getInstance();
    };
  }
  function CryptoACForm$lambda$lambda($props) {
    return function ($this$invoke) {
      $this$invoke.action = $props.endpointProp;
      $this$invoke.onSubmit = CryptoACForm$lambda$lambda$lambda($props);
      var tmp = Grid;
      $this$invoke.x4r(tmp, CryptoACForm$lambda$lambda$lambda_0($props));
      return Unit_getInstance();
    };
  }
  function handleCryptoACFormSubmit$lambda() {
    _init_properties_CryptoACForm_kt__xz999j();
    return 'Received form submit request, retrieving values';
  }
  function handleCryptoACFormSubmit$lambda_0($values, $files) {
    return function () {
      return 'Collected ' + $values.i() + ' values, ' + $files.i() + ' files: ';
    };
  }
  function handleCryptoACFormSubmit$lambda_1($element) {
    return function () {
      return 'key ' + $element.p() + ', value ' + $element.q();
    };
  }
  function handleCryptoACFormSubmit$lambda_2($element) {
    return function () {
      return 'resource name ' + $element.p();
    };
  }
  function handleCryptoACFormSubmit$slambda($props, $submitAndHandleCallback, $values, $files, resultContinuation) {
    this.m5a_1 = $props;
    this.n5a_1 = $submitAndHandleCallback;
    this.o5a_1 = $values;
    this.p5a_1 = $files;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(handleCryptoACFormSubmit$slambda).f1e = function ($this$launch, $completion) {
    var tmp = this.g1e($this$launch, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  };
  protoOf(handleCryptoACFormSubmit$slambda).si = function (p1, $completion) {
    return this.f1e((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(handleCryptoACFormSubmit$slambda).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        if (tmp === 0) {
          this.yh_1 = 1;
          var tmp_0;
          if (this.m5a_1.coreTypeProp == null) {
            tmp_0 = get_baseURL() + this.m5a_1.endpointProp;
          } else {
            var tmp_1 = get_baseURL();
            var tmp_2 = this.m5a_1.endpointProp;
            SERVER_getInstance();
            tmp_0 = tmp_1 + replace(tmp_2, '{' + 'Core' + '}', this.m5a_1.coreTypeProp.toString());
          }
          var actualEndpoint = tmp_0;
          this.n5a_1(this.m5a_1.methodProp, actualEndpoint, this.o5a_1, this.p5a_1);
          return Unit_getInstance();
        } else if (tmp === 1) {
          throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        throw e;
      }
     while (true);
  };
  protoOf(handleCryptoACFormSubmit$slambda).g1e = function ($this$launch, completion) {
    var i = new handleCryptoACFormSubmit$slambda(this.m5a_1, this.n5a_1, this.o5a_1, this.p5a_1, completion);
    i.q5a_1 = $this$launch;
    return i;
  };
  function handleCryptoACFormSubmit$slambda_0($props, $submitAndHandleCallback, $values, $files, resultContinuation) {
    var i = new handleCryptoACFormSubmit$slambda($props, $submitAndHandleCallback, $values, $files, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.f1e($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function handleCryptoACFormSubmit$lambda_3($collectedValues, $expectedValues) {
    return function () {
      return 'Not all values were given (collected ' + $collectedValues + ', expected ' + $expectedValues._v + '), canceling submit request';
    };
  }
  var properties_initialized_CryptoACForm_kt_w7f07r;
  function _init_properties_CryptoACForm_kt__xz999j() {
    if (properties_initialized_CryptoACForm_kt_w7f07r) {
    } else {
      properties_initialized_CryptoACForm_kt_w7f07r = true;
      var tmp = KotlinLogging_getInstance();
      logger_3 = tmp.b4r(logger$lambda_3);
      CryptoACForm = FC(CryptoACForm$lambda);
    }
  }
  function get_CryptoACPaper() {
    _init_properties_CryptoACPaper_kt__ynt9rr();
    return CryptoACPaper;
  }
  var CryptoACPaper;
  function CryptoACPaperState(collapsedState) {
    collapsedState = collapsedState === VOID ? false : collapsedState;
    this.r5a_1 = collapsedState;
  }
  protoOf(CryptoACPaperState).toString = function () {
    return 'CryptoACPaperState(collapsedState=' + this.r5a_1 + ')';
  };
  protoOf(CryptoACPaperState).hashCode = function () {
    return this.r5a_1 | 0;
  };
  protoOf(CryptoACPaperState).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CryptoACPaperState))
      return false;
    var tmp0_other_with_cast = other instanceof CryptoACPaperState ? other : THROW_CCE();
    if (!(this.r5a_1 === tmp0_other_with_cast.r5a_1))
      return false;
    return true;
  };
  function CryptoACPaper$lambda($this$FC, props) {
    _init_properties_CryptoACPaper_kt__ynt9rr();
    var state$delegate = useState(new CryptoACPaperState());
    var tmp = Paper;
    $this$FC.x4r(tmp, CryptoACPaper$lambda$lambda(props));
    return Unit_getInstance();
  }
  function CryptoACPaper$lambda$lambda$lambda($props) {
    return function ($this$invoke) {
      $this$invoke.style = $props.titleStyleProp;
      $this$invoke.variant = $props.titleVariantProp;
      $this$invoke.id = 'login';
      $this$invoke.component = 'div';
      $this$invoke.w4r($props.titleTextProp);
      return Unit_getInstance();
    };
  }
  function CryptoACPaper$lambda$lambda$lambda_0($props) {
    return function ($this$invoke) {
      $this$invoke.widthProp = $props.dividerWidthProp;
      var tmp$ret$2;
      // Inline function 'csstype.px' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '0px';
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = tmp0_unsafeCast;
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      $this$invoke.marginTopProp = tmp$ret$2;
      var tmp$ret$5;
      // Inline function 'csstype.px' call
      var tmp$ret$4;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '0px';
      var tmp$ret$3;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$3 = tmp1_unsafeCast;
      tmp$ret$4 = tmp$ret$3;
      tmp$ret$5 = tmp$ret$4;
      $this$invoke.marginBottomProp = tmp$ret$5;
      return Unit_getInstance();
    };
  }
  function CryptoACPaper$lambda$lambda($props) {
    return function ($this$invoke) {
      var tmp = Typography;
      $this$invoke.x4r(tmp, CryptoACPaper$lambda$lambda$lambda($props));
      var tmp_0;
      if ($props.setDividerProp) {
        var tmp_1 = get_CryptoACDivider();
        $this$invoke.x4r(tmp_1, CryptoACPaper$lambda$lambda$lambda_0($props));
        tmp_0 = Unit_getInstance();
      }
      $this$invoke.u4r($props.childProp);
      return Unit_getInstance();
    };
  }
  var properties_initialized_CryptoACPaper_kt_emloqv;
  function _init_properties_CryptoACPaper_kt__ynt9rr() {
    if (properties_initialized_CryptoACPaper_kt_emloqv) {
    } else {
      properties_initialized_CryptoACPaper_kt_emloqv = true;
      CryptoACPaper = FC(CryptoACPaper$lambda);
    }
  }
  function get_CryptoACRadioGroup() {
    _init_properties_CryptoACRadioGroup_kt__m90zaf();
    return CryptoACRadioGroup;
  }
  var CryptoACRadioGroup;
  function CryptoACRadioGroupState(valueState, changedByUserState, justMountedState) {
    valueState = valueState === VOID ? '' : valueState;
    changedByUserState = changedByUserState === VOID ? false : changedByUserState;
    justMountedState = justMountedState === VOID ? true : justMountedState;
    this.s5a_1 = valueState;
    this.t5a_1 = changedByUserState;
    this.u5a_1 = justMountedState;
  }
  protoOf(CryptoACRadioGroupState).u58 = function (valueState, changedByUserState, justMountedState) {
    return new CryptoACRadioGroupState(valueState, changedByUserState, justMountedState);
  };
  protoOf(CryptoACRadioGroupState).v5a = function (valueState, changedByUserState, justMountedState, $super) {
    valueState = valueState === VOID ? this.s5a_1 : valueState;
    changedByUserState = changedByUserState === VOID ? this.t5a_1 : changedByUserState;
    justMountedState = justMountedState === VOID ? this.u5a_1 : justMountedState;
    return $super === VOID ? this.u58(valueState, changedByUserState, justMountedState) : $super.u58.call(this, valueState, changedByUserState, justMountedState);
  };
  protoOf(CryptoACRadioGroupState).toString = function () {
    return 'CryptoACRadioGroupState(valueState=' + this.s5a_1 + ', changedByUserState=' + this.t5a_1 + ', justMountedState=' + this.u5a_1 + ')';
  };
  protoOf(CryptoACRadioGroupState).hashCode = function () {
    var result = getStringHashCode(this.s5a_1);
    result = imul(result, 31) + (this.t5a_1 | 0) | 0;
    result = imul(result, 31) + (this.u5a_1 | 0) | 0;
    return result;
  };
  protoOf(CryptoACRadioGroupState).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CryptoACRadioGroupState))
      return false;
    var tmp0_other_with_cast = other instanceof CryptoACRadioGroupState ? other : THROW_CCE();
    if (!(this.s5a_1 === tmp0_other_with_cast.s5a_1))
      return false;
    if (!(this.t5a_1 === tmp0_other_with_cast.t5a_1))
      return false;
    if (!(this.u5a_1 === tmp0_other_with_cast.u5a_1))
      return false;
    return true;
  };
  function getStateFromProps_2(props, oldState) {
    oldState = oldState === VOID ? new CryptoACRadioGroupState() : oldState;
    _init_properties_CryptoACRadioGroup_kt__m90zaf();
    if (oldState.u5a_1 ? true : !oldState.t5a_1) {
      oldState.s5a_1 = props.defaultValueProp;
    }
    oldState.t5a_1 = false;
    oldState.u5a_1 = false;
    return oldState.v5a();
  }
  function CryptoACRadioOption(label, name, color) {
    this.w5a_1 = label;
    this.x5a_1 = name;
    this.y5a_1 = color;
  }
  protoOf(CryptoACRadioOption).toString = function () {
    return 'CryptoACRadioOption(label=' + this.w5a_1 + ', name=' + this.x5a_1 + ', color=' + this.y5a_1 + ')';
  };
  protoOf(CryptoACRadioOption).hashCode = function () {
    var result = getStringHashCode(this.w5a_1);
    result = imul(result, 31) + getStringHashCode(this.x5a_1) | 0;
    result = imul(result, 31) + getStringHashCode(this.y5a_1) | 0;
    return result;
  };
  protoOf(CryptoACRadioOption).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CryptoACRadioOption))
      return false;
    var tmp0_other_with_cast = other instanceof CryptoACRadioOption ? other : THROW_CCE();
    if (!(this.w5a_1 === tmp0_other_with_cast.w5a_1))
      return false;
    if (!(this.x5a_1 === tmp0_other_with_cast.x5a_1))
      return false;
    if (!(this.y5a_1 === tmp0_other_with_cast.y5a_1))
      return false;
    return true;
  };
  function CryptoACRadioGroup$lambda($this$FC, props) {
    _init_properties_CryptoACRadioGroup_kt__m90zaf();
    var state$delegate = useState(getStateFromProps_2(props));
    useEffect([props], CryptoACRadioGroup$lambda$lambda(props, state$delegate));
    var tmp = RadioGroup;
    $this$FC.x4r(tmp, CryptoACRadioGroup$lambda$lambda_0(props, state$delegate));
    return Unit_getInstance();
  }
  function invoke$lambda_7($state$delegate) {
    _init_properties_CryptoACRadioGroup_kt__m90zaf();
    var tmp$ret$2;
    // Inline function 'react.StateInstance.getValue' call
    var tmp1_getValue = getLocalDelegateReference('state', KMutableProperty0, true, function () {
      return THROW_ISE();
    });
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = $state$delegate;
    var tmp0_unsafeCast = tmp$ret$0[0];
    tmp$ret$1 = tmp0_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  }
  function invoke$lambda_8($state$delegate, value) {
    _init_properties_CryptoACRadioGroup_kt__m90zaf();
    var tmp1_setValue = getLocalDelegateReference('state', KMutableProperty0, true, function () {
      return THROW_ISE();
    });
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = $state$delegate;
    var tmp0_unsafeCast = tmp$ret$0[1];
    tmp$ret$1 = tmp0_unsafeCast;
    return tmp$ret$1(value);
  }
  function CryptoACRadioGroup$lambda$lambda($props, $state$delegate) {
    return function ($this$useEffect) {
      invoke$lambda_8($state$delegate, getStateFromProps_2($props, invoke$lambda_7($state$delegate)));
      return Unit_getInstance();
    };
  }
  function CryptoACRadioGroup$lambda$lambda$lambda($props, $state$delegate) {
    return function (event) {
      var changeValue = false;
      var tmp;
      if (!equals($props.onChangeProp, undefined)) {
        changeValue = $props.onChangeProp(event);
        tmp = Unit_getInstance();
      }
      var tmp_0;
      if (changeValue) {
        var tmp0_$this = invoke$lambda_7($state$delegate);
        var tmp_1 = event.target;
        var tmp1_valueState = (tmp_1 instanceof HTMLInputElement ? tmp_1 : THROW_CCE()).value;
        invoke$lambda_8($state$delegate, tmp0_$this.v5a(tmp1_valueState, true));
        tmp_0 = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function CryptoACRadioGroup$lambda$lambda$lambda$lambda$lambda$lambda$lambda($props, $element, $state$delegate) {
    return function ($this$attrs) {
      $this$attrs.disabled = $props.disabledProp;
      $this$attrs.color = $element.y5a_1;
      $this$attrs.checked = invoke$lambda_7($state$delegate).s5a_1 === $element.x5a_1;
      $this$attrs.size = 'small';
      return Unit_getInstance();
    };
  }
  function CryptoACRadioGroup$lambda$lambda$lambda$lambda$lambda$lambda($props, $element, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.q4r(CryptoACRadioGroup$lambda$lambda$lambda$lambda$lambda$lambda$lambda($props, $element, $state$delegate));
      return Unit_getInstance();
    };
  }
  function CryptoACRadioGroup$lambda$lambda$lambda$lambda$lambda($props, $element, $state$delegate) {
    return function ($this$createElement) {
      var tmp = Radio;
      $this$createElement.o4r(tmp, CryptoACRadioGroup$lambda$lambda$lambda$lambda$lambda$lambda($props, $element, $state$delegate));
      return Unit_getInstance();
    };
  }
  function CryptoACRadioGroup$lambda$lambda$lambda$lambda($element, $props, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.label = $element.w5a_1;
      $this$invoke.value = $element.x5a_1;
      $this$invoke.control = ensureNotNull(createElement(CryptoACRadioGroup$lambda$lambda$lambda$lambda$lambda($props, $element, $state$delegate)));
      return Unit_getInstance();
    };
  }
  function CryptoACRadioGroup$lambda$lambda$lambda_0($props, $state$delegate) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$6;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$5;
      // Inline function 'js.core.jso' call
      var tmp$ret$4;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.components.custom.CryptoACRadioGroup.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      tmp0_apply.display = (/*union*/{block: 'block', inline: 'inline', runIn: 'run-in', flex: 'flex', flow: 'flow', flowRoot: 'flow-root', grid: 'grid', ruby: 'ruby', table: 'table', rubyBase: 'ruby-base', rubyBaseContainer: 'ruby-base-container', rubyText: 'ruby-text', rubyTextContainer: 'ruby-text-container', tableCaption: 'table-caption', tableCell: 'table-cell', tableColumn: 'table-column', tableColumnGroup: 'table-column-group', tableFooterGroup: 'table-footer-group', tableHeaderGroup: 'table-header-group', tableRow: 'table-row', tableRowGroup: 'table-row-group', inlineBlock: 'inline-block', inlineFlex: 'inline-flex', inlineGrid: 'inline-grid', inlineListItem: 'inline-list-item', inlineTable: 'inline-table', contents: 'contents', listItem: 'list-item'}/*union*/).block;
      var tmp$ret$3;
      // Inline function 'csstype.pct' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '100%';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.width = tmp$ret$3;
      tmp$ret$4 = tmp0_apply;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = css(tmp$ret$5);
      tmp1_css.className = tmp$ret$6;
      var tmp2_forEach = $props.optionsProp;
      var tmp0_iterator = tmp2_forEach.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        // Inline function 'eu.fbk.st.cryptoac.view.components.custom.CryptoACRadioGroup.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
        var tmp = FormControlLabel;
        $this$invoke.x4r(tmp, CryptoACRadioGroup$lambda$lambda$lambda$lambda(element, $props, $state$delegate));
      }
      var tmp_0;
      if ($props.optionsProp.l()) {
        $this$invoke.w4r('No option available');
        tmp_0 = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function CryptoACRadioGroup$lambda$lambda_0($props, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.value = invoke$lambda_7($state$delegate).s5a_1;
      $this$invoke.name = $props.nameProp;
      $this$invoke.row = $props.rowProp;
      $this$invoke.onChange = CryptoACRadioGroup$lambda$lambda$lambda($props, $state$delegate);
      var tmp$ret$3;
      // Inline function 'react.dom.html.ReactHTML.div' call
      var tmp0__get_div__2k2o9m = ReactHTML_getInstance();
      var tmp$ret$2;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = 'div';
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp = tmp$ret$3;
      $this$invoke.x4r(tmp, CryptoACRadioGroup$lambda$lambda$lambda_0($props, $state$delegate));
      return Unit_getInstance();
    };
  }
  var properties_initialized_CryptoACRadioGroup_kt_gyvgpj;
  function _init_properties_CryptoACRadioGroup_kt__m90zaf() {
    if (properties_initialized_CryptoACRadioGroup_kt_gyvgpj) {
    } else {
      properties_initialized_CryptoACRadioGroup_kt_gyvgpj = true;
      CryptoACRadioGroup = FC(CryptoACRadioGroup$lambda);
    }
  }
  function get_CryptoACScore() {
    _init_properties_CryptoACScore_kt__638dab();
    return CryptoACScore;
  }
  var CryptoACScore;
  function getWidth(props, bar) {
    _init_properties_CryptoACScore_kt__638dab();
    var percentage = numberToInt(getValueOfBar(props) * 100);
    var tmp;
    if (bar) {
      tmp = '' + percentage + '%';
    } else {
      tmp = '' + (100 - percentage | 0) + '%';
    }
    return tmp;
  }
  function getColor(props) {
    _init_properties_CryptoACScore_kt__638dab();
    return 'hsl(' + getValueOfBar(props) * 100 + ',100%,50%)';
  }
  function getValueOfBar(props) {
    _init_properties_CryptoACScore_kt__638dab();
    var valueOfBar = props.valueProp / (props.maxProp - props.minProp);
    if (valueOfBar === 0.0) {
      valueOfBar = 0.01;
    }
    if (valueOfBar === 1.0) {
      valueOfBar = 0.99;
    }
    return valueOfBar;
  }
  function CryptoACScore$lambda($this$FC, props) {
    _init_properties_CryptoACScore_kt__638dab();
    var tmp$ret$3;
    // Inline function 'react.dom.html.ReactHTML.div' call
    var tmp0__get_div__2k2o9m = ReactHTML_getInstance();
    var tmp$ret$2;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = 'div';
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    var tmp = tmp$ret$3;
    $this$FC.x4r(tmp, CryptoACScore$lambda$lambda(props));
    return Unit_getInstance();
  }
  function CryptoACScore$lambda$lambda$lambda($props) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$6;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$5;
      // Inline function 'js.core.jso' call
      var tmp$ret$4;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.components.custom.CryptoACScore.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '5px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.marginBottom = tmp$ret$3;
      tmp$ret$4 = tmp0_apply;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = css(tmp$ret$5);
      tmp1_css.className = tmp$ret$6;
      $this$invoke.w4r($props.labelProp);
      return Unit_getInstance();
    };
  }
  function CryptoACScore$lambda$lambda$lambda_0($props) {
    return function ($this$invoke) {
      $this$invoke.sx = JSON.parse(trimMargin('{\n                "padding":"0 0 0 0",\n                "height":"5px",\n                "width":"' + getWidth($props, true) + '",\n                "float":"left",\n                "span":2,\n                "background-color":"' + getColor($props) + '",\n                "border-radius":"25px 0 0 25px"\n            }'));
      return Unit_getInstance();
    };
  }
  function CryptoACScore$lambda$lambda$lambda_1($props) {
    return function ($this$invoke) {
      $this$invoke.sx = JSON.parse(trimMargin('{\n                "padding":"0 0 0 0",\n                "height":"5px",\n                "width":"' + getWidth($props, false) + '",\n                "float":"left",\n                "span":2,\n                "background-color":"black",\n                "border-radius":"0px 25px 25px 0px"\n            }'));
      return Unit_getInstance();
    };
  }
  function CryptoACScore$lambda$lambda($props) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$18;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$17;
      // Inline function 'js.core.jso' call
      var tmp$ret$16;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.components.custom.CryptoACScore.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$15;
      // Inline function 'csstype.Padding' call
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '0px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp5_Padding = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '20px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      var tmp6_Padding = tmp$ret$6;
      var tmp$ret$9;
      // Inline function 'csstype.px' call
      var tmp$ret$8;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp2_unsafeCast = '10px';
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = tmp2_unsafeCast;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      var tmp7_Padding = tmp$ret$9;
      var tmp$ret$12;
      // Inline function 'csstype.px' call
      var tmp$ret$11;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp3_unsafeCast = '20px';
      var tmp$ret$10;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$10 = tmp3_unsafeCast;
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = tmp$ret$11;
      var tmp8_Padding = tmp$ret$12;
      var tmp$ret$14;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp4_unsafeCast = '' + tmp5_Padding + ' ' + tmp6_Padding + ' ' + tmp7_Padding + ' ' + tmp8_Padding;
      var tmp$ret$13;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$13 = tmp4_unsafeCast;
      tmp$ret$14 = tmp$ret$13;
      tmp$ret$15 = tmp$ret$14;
      tmp0_apply.padding = tmp$ret$15;
      tmp$ret$16 = tmp0_apply;
      tmp$ret$17 = tmp$ret$16;
      tmp$ret$18 = css(tmp$ret$17);
      tmp1_css.className = tmp$ret$18;
      var tmp$ret$22;
      // Inline function 'react.dom.html.ReactHTML.p' call
      var tmp2__get_p__qh4lul = ReactHTML_getInstance();
      var tmp$ret$21;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$20;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$19;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$19 = 'p';
      tmp$ret$20 = tmp$ret$19;
      tmp$ret$21 = tmp$ret$20;
      tmp$ret$22 = tmp$ret$21;
      var tmp = tmp$ret$22;
      $this$invoke.x4r(tmp, CryptoACScore$lambda$lambda$lambda($props));
      var tmp_0 = Box;
      $this$invoke.x4r(tmp_0, CryptoACScore$lambda$lambda$lambda_0($props));
      var tmp_1 = Box;
      $this$invoke.x4r(tmp_1, CryptoACScore$lambda$lambda$lambda_1($props));
      return Unit_getInstance();
    };
  }
  var properties_initialized_CryptoACScore_kt_bw3133;
  function _init_properties_CryptoACScore_kt__638dab() {
    if (properties_initialized_CryptoACScore_kt_bw3133) {
    } else {
      properties_initialized_CryptoACScore_kt_bw3133 = true;
      CryptoACScore = FC(CryptoACScore$lambda);
    }
  }
  function get_CryptoACSelect() {
    _init_properties_CryptoACSelect_kt__sjcyht();
    return CryptoACSelect;
  }
  var CryptoACSelect;
  function CryptoACSelectState(valueState, changedByUserState, justMountedState) {
    valueState = valueState === VOID ? '' : valueState;
    changedByUserState = changedByUserState === VOID ? false : changedByUserState;
    justMountedState = justMountedState === VOID ? true : justMountedState;
    this.z5a_1 = valueState;
    this.a5b_1 = changedByUserState;
    this.b5b_1 = justMountedState;
  }
  protoOf(CryptoACSelectState).u58 = function (valueState, changedByUserState, justMountedState) {
    return new CryptoACSelectState(valueState, changedByUserState, justMountedState);
  };
  protoOf(CryptoACSelectState).c5b = function (valueState, changedByUserState, justMountedState, $super) {
    valueState = valueState === VOID ? this.z5a_1 : valueState;
    changedByUserState = changedByUserState === VOID ? this.a5b_1 : changedByUserState;
    justMountedState = justMountedState === VOID ? this.b5b_1 : justMountedState;
    return $super === VOID ? this.u58(valueState, changedByUserState, justMountedState) : $super.u58.call(this, valueState, changedByUserState, justMountedState);
  };
  protoOf(CryptoACSelectState).toString = function () {
    return 'CryptoACSelectState(valueState=' + this.z5a_1 + ', changedByUserState=' + this.a5b_1 + ', justMountedState=' + this.b5b_1 + ')';
  };
  protoOf(CryptoACSelectState).hashCode = function () {
    var result = getStringHashCode(this.z5a_1);
    result = imul(result, 31) + (this.a5b_1 | 0) | 0;
    result = imul(result, 31) + (this.b5b_1 | 0) | 0;
    return result;
  };
  protoOf(CryptoACSelectState).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CryptoACSelectState))
      return false;
    var tmp0_other_with_cast = other instanceof CryptoACSelectState ? other : THROW_CCE();
    if (!(this.z5a_1 === tmp0_other_with_cast.z5a_1))
      return false;
    if (!(this.a5b_1 === tmp0_other_with_cast.a5b_1))
      return false;
    if (!(this.b5b_1 === tmp0_other_with_cast.b5b_1))
      return false;
    return true;
  };
  function getStateFromProps_3(props, oldState) {
    oldState = oldState === VOID ? new CryptoACSelectState() : oldState;
    _init_properties_CryptoACSelect_kt__sjcyht();
    if (oldState.b5b_1 ? true : !oldState.a5b_1) {
      oldState.z5a_1 = props.defaultValueProp;
    }
    oldState.a5b_1 = false;
    oldState.b5b_1 = false;
    return oldState.c5b();
  }
  function CryptoACSelect$lambda($this$FC, props) {
    _init_properties_CryptoACSelect_kt__sjcyht();
    var state$delegate = useState(getStateFromProps_3(props));
    useEffect([props], CryptoACSelect$lambda$lambda(props, state$delegate));
    var tmp$ret$3;
    // Inline function 'react.dom.html.ReactHTML.div' call
    var tmp0__get_div__2k2o9m = ReactHTML_getInstance();
    var tmp$ret$2;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = 'div';
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    var tmp = tmp$ret$3;
    $this$FC.x4r(tmp, CryptoACSelect$lambda$lambda_0(props, state$delegate));
    return Unit_getInstance();
  }
  function invoke$lambda_9($state$delegate) {
    _init_properties_CryptoACSelect_kt__sjcyht();
    var tmp$ret$2;
    // Inline function 'react.StateInstance.getValue' call
    var tmp1_getValue = getLocalDelegateReference('state', KMutableProperty0, true, function () {
      return THROW_ISE();
    });
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = $state$delegate;
    var tmp0_unsafeCast = tmp$ret$0[0];
    tmp$ret$1 = tmp0_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  }
  function invoke$lambda_10($state$delegate, value) {
    _init_properties_CryptoACSelect_kt__sjcyht();
    var tmp1_setValue = getLocalDelegateReference('state', KMutableProperty0, true, function () {
      return THROW_ISE();
    });
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = $state$delegate;
    var tmp0_unsafeCast = tmp$ret$0[1];
    tmp$ret$1 = tmp0_unsafeCast;
    return tmp$ret$1(value);
  }
  function CryptoACSelect$lambda$lambda($props, $state$delegate) {
    return function ($this$useEffect) {
      invoke$lambda_10($state$delegate, getStateFromProps_3($props, invoke$lambda_9($state$delegate)));
      return Unit_getInstance();
    };
  }
  function CryptoACSelect$lambda$lambda$lambda($props) {
    return function ($this$invoke) {
      $this$invoke.id = $props.labelIdProp;
      $this$invoke.w4r($props.labelProp);
      return Unit_getInstance();
    };
  }
  function CryptoACSelect$lambda$lambda$lambda$lambda($props, $state$delegate) {
    return function (e) {
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = e;
      var tmp = tmp$ret$0.target.value;
      var newChoice = (!(tmp == null) ? typeof tmp === 'string' : false) ? tmp : THROW_CCE();
      $props.onChangeProp(newChoice);
      invoke$lambda_10($state$delegate, invoke$lambda_9($state$delegate).c5b(newChoice, true));
      return Unit_getInstance();
    };
  }
  function CryptoACSelect$lambda$lambda$lambda$lambda_0($this$invoke) {
    _init_properties_CryptoACSelect_kt__sjcyht();
    $this$invoke.value = 'Select';
    $this$invoke.w4r('Select');
    return Unit_getInstance();
  }
  function CryptoACSelect$lambda$lambda$lambda$lambda_1($element) {
    return function ($this$invoke) {
      $this$invoke.value = $element;
      $this$invoke.w4r($element);
      return Unit_getInstance();
    };
  }
  function CryptoACSelect$lambda$lambda$lambda_0($props, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.disabled = $props.disabledProp;
      $this$invoke.style = $props.selectStyleProp;
      $this$invoke.autoWidth = $props.autoWidthProp;
      $this$invoke.name = $props.nameProp;
      $this$invoke.id = $props.idProp;
      $this$invoke.inputProps = JSON.parse(trimMargin('{ "name":"' + $props.nameProp + '" }'));
      $this$invoke.labelId = $props.labelIdProp;
      $this$invoke.label = $props.labelProp;
      $this$invoke.value = invoke$lambda_9($state$delegate).z5a_1;
      $this$invoke.onChange = CryptoACSelect$lambda$lambda$lambda$lambda($props, $state$delegate);
      var tmp;
      if ($props.selectOptionProp) {
        var tmp_0 = MenuItem;
        $this$invoke.x4r(tmp_0, CryptoACSelect$lambda$lambda$lambda$lambda_0);
        tmp = Unit_getInstance();
      }
      var tmp0_forEach = $props.optionsProp;
      var tmp0_iterator = tmp0_forEach.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        // Inline function 'eu.fbk.st.cryptoac.view.components.custom.CryptoACSelect.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
        var tmp_1 = MenuItem;
        $this$invoke.x4r(tmp_1, CryptoACSelect$lambda$lambda$lambda$lambda_1(element));
      }
      return Unit_getInstance();
    };
  }
  function CryptoACSelect$lambda$lambda_0($props, $state$delegate) {
    return function ($this$invoke) {
      var tmp;
      if (!equals($props.labelIdProp, undefined) ? !equals($props.labelProp, undefined) : false) {
        var tmp_0 = InputLabel;
        $this$invoke.x4r(tmp_0, CryptoACSelect$lambda$lambda$lambda($props));
        tmp = Unit_getInstance();
      }
      var tmp_1 = Select;
      $this$invoke.x4r(tmp_1, CryptoACSelect$lambda$lambda$lambda_0($props, $state$delegate));
      return Unit_getInstance();
    };
  }
  var properties_initialized_CryptoACSelect_kt_60gswx;
  function _init_properties_CryptoACSelect_kt__sjcyht() {
    if (properties_initialized_CryptoACSelect_kt_60gswx) {
    } else {
      properties_initialized_CryptoACSelect_kt_60gswx = true;
      CryptoACSelect = FC(CryptoACSelect$lambda);
    }
  }
  function get_CryptoACSlider() {
    _init_properties_CryptoACSlider_kt__h5541w();
    return CryptoACSlider;
  }
  var CryptoACSlider;
  function CryptoACSliderState(valueState, valuesState, justMountedState) {
    valueState = valueState === VOID ? 0 : valueState;
    var tmp;
    if (valuesState === VOID) {
      var tmp$ret$2;
      var tmp$ret$2_0;
      // Inline function 'kotlin.arrayOf' call
      var tmp$ret$1;
      var tmp$ret$1_0;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      var tmp$ret$0_0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = [];
      tmp$ret$0_0 = Unit_getInstance();
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$1_0 = Unit_getInstance();
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$2_0 = Unit_getInstance();
      tmp = tmp$ret$2;
    } else {
      tmp = valuesState;
    }
    valuesState = tmp;
    justMountedState = justMountedState === VOID ? true : justMountedState;
    this.d5b_1 = valueState;
    this.e5b_1 = valuesState;
    this.f5b_1 = justMountedState;
  }
  protoOf(CryptoACSliderState).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CryptoACSliderState))
      return false;
    if (!(this.d5b_1 === other.d5b_1))
      return false;
    if (!contentEquals_0(this.e5b_1, other.e5b_1))
      return false;
    return this.f5b_1 === other.f5b_1;
  };
  protoOf(CryptoACSliderState).hashCode = function () {
    var result = this.d5b_1;
    result = imul(31, result) + contentHashCode_0(this.e5b_1) | 0;
    result = imul(31, result) + (this.f5b_1 | 0) | 0;
    return result;
  };
  protoOf(CryptoACSliderState).g5b = function (valueState, valuesState, justMountedState) {
    return new CryptoACSliderState(valueState, valuesState, justMountedState);
  };
  protoOf(CryptoACSliderState).h5b = function (valueState, valuesState, justMountedState, $super) {
    valueState = valueState === VOID ? this.d5b_1 : valueState;
    valuesState = valuesState === VOID ? this.e5b_1 : valuesState;
    justMountedState = justMountedState === VOID ? this.f5b_1 : justMountedState;
    return $super === VOID ? this.g5b(valueState, valuesState, justMountedState) : $super.g5b.call(this, valueState, valuesState, justMountedState);
  };
  protoOf(CryptoACSliderState).toString = function () {
    return 'CryptoACSliderState(valueState=' + this.d5b_1 + ', valuesState=' + toString_0(this.e5b_1) + ', justMountedState=' + this.f5b_1 + ')';
  };
  function getStateFromProps_4(props, oldState) {
    oldState = oldState === VOID ? new CryptoACSliderState() : oldState;
    _init_properties_CryptoACSlider_kt__h5541w();
    if (oldState.f5b_1) {
      if (props.rangeProps) {
        oldState.e5b_1 = props.defaultValuesProps;
      }
      if (!props.rangeProps) {
        oldState.d5b_1 = props.defaultValueProps;
      }
    }
    return oldState.h5b();
  }
  function CryptoACSlider$lambda($this$FC, props) {
    _init_properties_CryptoACSlider_kt__h5541w();
    var state$delegate = useState(getStateFromProps_4(props));
    useEffect([props], CryptoACSlider$lambda$lambda(props, state$delegate));
    var tmp$ret$3;
    // Inline function 'react.dom.html.ReactHTML.div' call
    var tmp0__get_div__2k2o9m = ReactHTML_getInstance();
    var tmp$ret$2;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = 'div';
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    var tmp = tmp$ret$3;
    $this$FC.x4r(tmp, CryptoACSlider$lambda$lambda_0(props, state$delegate));
    return Unit_getInstance();
  }
  function invoke$lambda_11($state$delegate) {
    _init_properties_CryptoACSlider_kt__h5541w();
    var tmp$ret$2;
    // Inline function 'react.StateInstance.getValue' call
    var tmp1_getValue = getLocalDelegateReference('state', KMutableProperty0, true, function () {
      return THROW_ISE();
    });
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = $state$delegate;
    var tmp0_unsafeCast = tmp$ret$0[0];
    tmp$ret$1 = tmp0_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  }
  function invoke$lambda_12($state$delegate, value) {
    _init_properties_CryptoACSlider_kt__h5541w();
    var tmp1_setValue = getLocalDelegateReference('state', KMutableProperty0, true, function () {
      return THROW_ISE();
    });
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = $state$delegate;
    var tmp0_unsafeCast = tmp$ret$0[1];
    tmp$ret$1 = tmp0_unsafeCast;
    return tmp$ret$1(value);
  }
  function CryptoACSlider$lambda$lambda($props, $state$delegate) {
    return function ($this$useEffect) {
      invoke$lambda_12($state$delegate, getStateFromProps_4($props, invoke$lambda_11($state$delegate)));
      return Unit_getInstance();
    };
  }
  function CryptoACSlider$lambda$lambda$lambda($props) {
    return function ($this$invoke) {
      $this$invoke.w4r($props.labelProps);
      return Unit_getInstance();
    };
  }
  function CryptoACSlider$lambda$lambda$lambda$lambda$lambda($props, $state$delegate) {
    return function (_anonymous_parameter_0__qggqh8, newValue) {
      var tmp;
      if ($props.rangeProps) {
        var tmp_0 = invoke$lambda_11($state$delegate);
        tmp = tmp_0.h5b(VOID, isArray(newValue) ? newValue : THROW_CCE());
      } else {
        var tmp_1 = invoke$lambda_11($state$delegate);
        tmp = tmp_1.h5b(typeof newValue === 'number' ? newValue : THROW_CCE());
      }
      invoke$lambda_12($state$delegate, tmp);
      var tmp_2;
      if (!equals($props.onChangeProps, undefined)) {
        tmp_2 = $props.onChangeProps(newValue);
      }
      return Unit_getInstance();
    };
  }
  function CryptoACSlider$lambda$lambda$lambda$lambda($props, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.min = $props.minProps;
      $this$invoke.max = $props.maxProps;
      var tmp;
      if ($props.rangeProps) {
        tmp = invoke$lambda_11($state$delegate).e5b_1;
      } else {
        tmp = invoke$lambda_11($state$delegate).d5b_1;
      }
      $this$invoke.value = tmp;
      $this$invoke.color = $props.colorProps;
      $this$invoke.valueLabelDisplay = 'auto';
      $this$invoke.onChange = CryptoACSlider$lambda$lambda$lambda$lambda$lambda($props, $state$delegate);
      return Unit_getInstance();
    };
  }
  function CryptoACSlider$lambda$lambda$lambda_0($props, $state$delegate) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$12;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$11;
      // Inline function 'js.core.jso' call
      var tmp$ret$10;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.components.custom.CryptoACSlider.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$9;
      // Inline function 'csstype.Padding' call
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '20px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp3_Padding = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '20px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      var tmp4_Padding = tmp$ret$6;
      var tmp$ret$8;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp2_unsafeCast = '' + tmp3_Padding + ' ' + tmp4_Padding;
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = tmp2_unsafeCast;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      tmp0_apply.padding = tmp$ret$9;
      tmp$ret$10 = tmp0_apply;
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = css(tmp$ret$11);
      tmp1_css.className = tmp$ret$12;
      var tmp = Slider;
      $this$invoke.x4r(tmp, CryptoACSlider$lambda$lambda$lambda$lambda($props, $state$delegate));
      return Unit_getInstance();
    };
  }
  function CryptoACSlider$lambda$lambda_0($props, $state$delegate) {
    return function ($this$invoke) {
      var tmp;
      if (!equals($props.labelProps, undefined)) {
        var tmp$ret$3;
        // Inline function 'react.dom.html.ReactHTML.p' call
        var tmp0__get_p__f88lgb = ReactHTML_getInstance();
        var tmp$ret$2;
        // Inline function 'react.IntrinsicType' call
        var tmp$ret$1;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp$ret$0;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$0 = 'p';
        tmp$ret$1 = tmp$ret$0;
        tmp$ret$2 = tmp$ret$1;
        tmp$ret$3 = tmp$ret$2;
        var tmp_0 = tmp$ret$3;
        $this$invoke.x4r(tmp_0, CryptoACSlider$lambda$lambda$lambda($props));
        tmp = Unit_getInstance();
      }
      var tmp$ret$7;
      // Inline function 'react.dom.html.ReactHTML.div' call
      var tmp1__get_div__r5s89x = ReactHTML_getInstance();
      var tmp$ret$6;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = 'div';
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      tmp$ret$7 = tmp$ret$6;
      var tmp_1 = tmp$ret$7;
      $this$invoke.x4r(tmp_1, CryptoACSlider$lambda$lambda$lambda_0($props, $state$delegate));
      return Unit_getInstance();
    };
  }
  var properties_initialized_CryptoACSlider_kt_97i8pm;
  function _init_properties_CryptoACSlider_kt__h5541w() {
    if (properties_initialized_CryptoACSlider_kt_97i8pm) {
    } else {
      properties_initialized_CryptoACSlider_kt_97i8pm = true;
      CryptoACSlider = FC(CryptoACSlider$lambda);
    }
  }
  function get_CryptoACTextField() {
    _init_properties_CryptoACTextField_kt__npntdk();
    return CryptoACTextField;
  }
  var CryptoACTextField;
  function CryptoACTextFieldState(valueState, changedByUserState, justMountedState) {
    valueState = valueState === VOID ? '' : valueState;
    changedByUserState = changedByUserState === VOID ? false : changedByUserState;
    justMountedState = justMountedState === VOID ? true : justMountedState;
    this.i5b_1 = valueState;
    this.j5b_1 = changedByUserState;
    this.k5b_1 = justMountedState;
  }
  protoOf(CryptoACTextFieldState).u58 = function (valueState, changedByUserState, justMountedState) {
    return new CryptoACTextFieldState(valueState, changedByUserState, justMountedState);
  };
  protoOf(CryptoACTextFieldState).l5b = function (valueState, changedByUserState, justMountedState, $super) {
    valueState = valueState === VOID ? this.i5b_1 : valueState;
    changedByUserState = changedByUserState === VOID ? this.j5b_1 : changedByUserState;
    justMountedState = justMountedState === VOID ? this.k5b_1 : justMountedState;
    return $super === VOID ? this.u58(valueState, changedByUserState, justMountedState) : $super.u58.call(this, valueState, changedByUserState, justMountedState);
  };
  protoOf(CryptoACTextFieldState).toString = function () {
    return 'CryptoACTextFieldState(valueState=' + this.i5b_1 + ', changedByUserState=' + this.j5b_1 + ', justMountedState=' + this.k5b_1 + ')';
  };
  protoOf(CryptoACTextFieldState).hashCode = function () {
    var result = getStringHashCode(this.i5b_1);
    result = imul(result, 31) + (this.j5b_1 | 0) | 0;
    result = imul(result, 31) + (this.k5b_1 | 0) | 0;
    return result;
  };
  protoOf(CryptoACTextFieldState).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CryptoACTextFieldState))
      return false;
    var tmp0_other_with_cast = other instanceof CryptoACTextFieldState ? other : THROW_CCE();
    if (!(this.i5b_1 === tmp0_other_with_cast.i5b_1))
      return false;
    if (!(this.j5b_1 === tmp0_other_with_cast.j5b_1))
      return false;
    if (!(this.k5b_1 === tmp0_other_with_cast.k5b_1))
      return false;
    return true;
  };
  function getStateFromProps_5(props, oldState) {
    oldState = oldState === VOID ? new CryptoACTextFieldState() : oldState;
    _init_properties_CryptoACTextField_kt__npntdk();
    if (oldState.k5b_1 ? true : !oldState.j5b_1) {
      oldState.i5b_1 = props.defaultValueProp;
    }
    oldState.j5b_1 = false;
    oldState.k5b_1 = false;
    return oldState.l5b();
  }
  function CryptoACTextField$lambda($this$FC, props) {
    _init_properties_CryptoACTextField_kt__npntdk();
    var state$delegate = useState(getStateFromProps_5(props));
    useEffect([props], CryptoACTextField$lambda$lambda(props, state$delegate));
    var tmp = TextField;
    $this$FC.x4r(tmp, CryptoACTextField$lambda$lambda_0(props, state$delegate));
    return Unit_getInstance();
  }
  function invoke$lambda_13($state$delegate) {
    _init_properties_CryptoACTextField_kt__npntdk();
    var tmp$ret$2;
    // Inline function 'react.StateInstance.getValue' call
    var tmp1_getValue = getLocalDelegateReference('state', KMutableProperty0, true, function () {
      return THROW_ISE();
    });
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = $state$delegate;
    var tmp0_unsafeCast = tmp$ret$0[0];
    tmp$ret$1 = tmp0_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  }
  function invoke$lambda_14($state$delegate, value) {
    _init_properties_CryptoACTextField_kt__npntdk();
    var tmp1_setValue = getLocalDelegateReference('state', KMutableProperty0, true, function () {
      return THROW_ISE();
    });
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = $state$delegate;
    var tmp0_unsafeCast = tmp$ret$0[1];
    tmp$ret$1 = tmp0_unsafeCast;
    return tmp$ret$1(value);
  }
  function CryptoACTextField$lambda$lambda($props, $state$delegate) {
    return function ($this$useEffect) {
      invoke$lambda_14($state$delegate, getStateFromProps_5($props, invoke$lambda_13($state$delegate)));
      return Unit_getInstance();
    };
  }
  function CryptoACTextField$lambda$lambda$lambda($props, $state$delegate) {
    return function (event) {
      var tmp = event.target;
      var newValue = (tmp instanceof HTMLInputElement ? tmp : THROW_CCE()).value;
      var tmp_0;
      if (!equals($props.onChangeProp, undefined)) {
        tmp_0 = $props.onChangeProp(newValue);
      }
      invoke$lambda_14($state$delegate, invoke$lambda_13($state$delegate).l5b(newValue, true));
      return Unit_getInstance();
    };
  }
  function CryptoACTextField$lambda$lambda_0($props, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.className = $props.classNameProp;
      $this$invoke.value = invoke$lambda_13($state$delegate).i5b_1;
      $this$invoke.name = $props.nameProp;
      $this$invoke.label = $props.labelProp;
      $this$invoke.type = $props.typeProp;
      $this$invoke.variant = $props.variantProp;
      $this$invoke.color = $props.colorProp;
      $this$invoke.autoComplete = 'off';
      $this$invoke.required = true;
      $this$invoke.disabled = $props.disabledProp;
      $this$invoke.onChange = CryptoACTextField$lambda$lambda$lambda($props, $state$delegate);
      return Unit_getInstance();
    };
  }
  var properties_initialized_CryptoACTextField_kt_s7a8nu;
  function _init_properties_CryptoACTextField_kt__npntdk() {
    if (properties_initialized_CryptoACTextField_kt_s7a8nu) {
    } else {
      properties_initialized_CryptoACTextField_kt_s7a8nu = true;
      CryptoACTextField = FC(CryptoACTextField$lambda);
    }
  }
  function get_CryptoACTable() {
    _init_properties_CryptoACTable_kt__35kjk7();
    return CryptoACTable;
  }
  var CryptoACTable;
  function CryptoACTableState(rowsPerPageState, pageState) {
    rowsPerPageState = rowsPerPageState === VOID ? 10 : rowsPerPageState;
    pageState = pageState === VOID ? 0 : pageState;
    this.m5b_1 = rowsPerPageState;
    this.n5b_1 = pageState;
  }
  protoOf(CryptoACTableState).o5b = function (rowsPerPageState, pageState) {
    return new CryptoACTableState(rowsPerPageState, pageState);
  };
  protoOf(CryptoACTableState).p5b = function (rowsPerPageState, pageState, $super) {
    rowsPerPageState = rowsPerPageState === VOID ? this.m5b_1 : rowsPerPageState;
    pageState = pageState === VOID ? this.n5b_1 : pageState;
    return $super === VOID ? this.o5b(rowsPerPageState, pageState) : $super.o5b.call(this, rowsPerPageState, pageState);
  };
  protoOf(CryptoACTableState).toString = function () {
    return 'CryptoACTableState(rowsPerPageState=' + this.m5b_1 + ', pageState=' + this.n5b_1 + ')';
  };
  protoOf(CryptoACTableState).hashCode = function () {
    var result = this.m5b_1;
    result = imul(result, 31) + this.n5b_1 | 0;
    return result;
  };
  protoOf(CryptoACTableState).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CryptoACTableState))
      return false;
    var tmp0_other_with_cast = other instanceof CryptoACTableState ? other : THROW_CCE();
    if (!(this.m5b_1 === tmp0_other_with_cast.m5b_1))
      return false;
    if (!(this.n5b_1 === tmp0_other_with_cast.n5b_1))
      return false;
    return true;
  };
  function fromIndex(rowsPerPageState, pageState, elementsPropSize) {
    _init_properties_CryptoACTable_kt__35kjk7();
    var fromIndex = imul(rowsPerPageState, pageState);
    var tmp;
    if (fromIndex >= elementsPropSize) {
      tmp = elementsPropSize;
    } else {
      var tmp_0;
      if (fromIndex < 0) {
        tmp_0 = 0;
      } else {
        tmp_0 = fromIndex;
      }
      tmp = tmp_0;
    }
    return tmp;
  }
  function toIndex(rowsPerPageState, pageState, elementsPropSize) {
    _init_properties_CryptoACTable_kt__35kjk7();
    var toIndex = fromIndex(rowsPerPageState, pageState, elementsPropSize) + rowsPerPageState | 0;
    var tmp;
    if (toIndex >= elementsPropSize) {
      tmp = elementsPropSize;
    } else {
      tmp = toIndex;
    }
    return tmp;
  }
  function CryptoACTable$lambda($this$FC, props) {
    _init_properties_CryptoACTable_kt__35kjk7();
    var state$delegate = useState(new CryptoACTableState());
    var tmp = Paper;
    $this$FC.x4r(tmp, CryptoACTable$lambda$lambda(props, state$delegate));
    return Unit_getInstance();
  }
  function invoke$lambda_15($state$delegate) {
    _init_properties_CryptoACTable_kt__35kjk7();
    var tmp$ret$2;
    // Inline function 'react.StateInstance.getValue' call
    var tmp1_getValue = getLocalDelegateReference('state', KMutableProperty0, true, function () {
      return THROW_ISE();
    });
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = $state$delegate;
    var tmp0_unsafeCast = tmp$ret$0[0];
    tmp$ret$1 = tmp0_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  }
  function invoke$lambda_16($state$delegate, value) {
    _init_properties_CryptoACTable_kt__35kjk7();
    var tmp1_setValue = getLocalDelegateReference('state', KMutableProperty0, true, function () {
      return THROW_ISE();
    });
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = $state$delegate;
    var tmp0_unsafeCast = tmp$ret$0[1];
    tmp$ret$1 = tmp0_unsafeCast;
    return tmp$ret$1(value);
  }
  function CryptoACTable$lambda$lambda$lambda$lambda($props) {
    return function ($this$invoke) {
      $this$invoke.variant = 'h6';
      $this$invoke.id = 'tableTitle';
      $this$invoke.component = 'div';
      $this$invoke.w4r($props.titleProp);
      return Unit_getInstance();
    };
  }
  function CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda($props) {
    return function (event) {
      $props.onCloseProp(event);
      return Unit_getInstance();
    };
  }
  function CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($this$invoke) {
    _init_properties_CryptoACTable_kt__35kjk7();
    return Unit_getInstance();
  }
  function CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda$lambda($props) {
    return function ($this$invoke) {
      $this$invoke.size = 'small';
      $this$invoke.label = 'close';
      $this$invoke.onClick = CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda($props);
      var tmp = FaTimes;
      $this$invoke.x4r(tmp, CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0);
      return Unit_getInstance();
    };
  }
  function CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda($props) {
    return function ($this$invoke) {
      $this$invoke.title = 'Close';
      var tmp = IconButton;
      $this$invoke.x4r(tmp, CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda$lambda($props));
      return Unit_getInstance();
    };
  }
  function CryptoACTable$lambda$lambda$lambda$lambda$lambda($props) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$6;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$5;
      // Inline function 'js.core.jso' call
      var tmp$ret$4;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.components.custom.table.CryptoACTable.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '5px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.marginLeft = tmp$ret$3;
      tmp0_apply.float = (/*union*/{inlineEnd: 'inline-end', inlineStart: 'inline-start', left: 'left', right: 'right'}/*union*/).left;
      tmp$ret$4 = tmp0_apply;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = css(tmp$ret$5);
      tmp1_css.className = tmp$ret$6;
      var tmp = Tooltip;
      $this$invoke.x4r(tmp, CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda($props));
      return Unit_getInstance();
    };
  }
  function CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($props) {
    return function (it) {
      var csv = StringBuilder_init_$Create$();
      var prefix = '';
      var tmp0_forEach = $props.tableColumnsProp;
      var indexedObject = tmp0_forEach;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var element = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'eu.fbk.st.cryptoac.view.components.custom.table.CryptoACTable.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
        csv.h7(prefix);
        prefix = ',';
        csv.h7(element.q5b_1);
      }
      csv.h7('%0A');
      var tmp1_forEach = $props.elementsProp;
      var tmp0_iterator = tmp1_forEach.f();
      while (tmp0_iterator.g()) {
        var element_0 = tmp0_iterator.h();
        // Inline function 'eu.fbk.st.cryptoac.view.components.custom.table.CryptoACTable.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
        prefix = '';
        // Inline function 'kotlin.collections.forEach' call
        var indexedObject_0 = element_0;
        var inductionVariable_0 = 0;
        var last_0 = indexedObject_0.length;
        while (inductionVariable_0 < last_0) {
          var element_1 = indexedObject_0[inductionVariable_0];
          inductionVariable_0 = inductionVariable_0 + 1 | 0;
          // Inline function 'eu.fbk.st.cryptoac.view.components.custom.table.CryptoACTable.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
          csv.h7(prefix);
          prefix = ',';
          csv.h7(element_1);
        }
        csv.h7('%0A');
      }
      var element_2 = document.createElement('a');
      element_2.setAttribute('href', 'data:text/csv;charset=utf-8,' + csv);
      element_2.setAttribute('download', $props.titleProp + '.csv');
      element_2.setAttribute('display', 'none');
      document.body.appendChild(element_2);
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = element_2;
      tmp$ret$0.click();
      document.body.removeChild(element_2);
      return Unit_getInstance();
    };
  }
  function CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2($this$invoke) {
    _init_properties_CryptoACTable_kt__35kjk7();
    return Unit_getInstance();
  }
  function CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($props) {
    return function ($this$invoke) {
      $this$invoke.size = 'small';
      $this$invoke.label = 'download data';
      $this$invoke.onClick = CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($props);
      var tmp = FaDownload;
      $this$invoke.x4r(tmp, CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2);
      return Unit_getInstance();
    };
  }
  function CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda_0($props) {
    return function ($this$invoke) {
      $this$invoke.title = 'Download as CSV';
      var tmp = IconButton;
      $this$invoke.x4r(tmp, CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($props));
      return Unit_getInstance();
    };
  }
  function CryptoACTable$lambda$lambda$lambda$lambda$lambda_0($props) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$6;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$5;
      // Inline function 'js.core.jso' call
      var tmp$ret$4;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.components.custom.table.CryptoACTable.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '5px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.marginLeft = tmp$ret$3;
      tmp0_apply.float = (/*union*/{inlineEnd: 'inline-end', inlineStart: 'inline-start', left: 'left', right: 'right'}/*union*/).left;
      tmp$ret$4 = tmp0_apply;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = css(tmp$ret$5);
      tmp1_css.className = tmp$ret$6;
      var tmp = Tooltip;
      $this$invoke.x4r(tmp, CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda_0($props));
      return Unit_getInstance();
    };
  }
  function CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_3($props) {
    return function (event) {
      $props.onRefreshProp(event);
      return Unit_getInstance();
    };
  }
  function CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_4($this$invoke) {
    _init_properties_CryptoACTable_kt__35kjk7();
    return Unit_getInstance();
  }
  function CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($props) {
    return function ($this$invoke) {
      $this$invoke.size = 'small';
      $this$invoke.label = 'refresh';
      $this$invoke.onClick = CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_3($props);
      var tmp = FaUndoAlt;
      $this$invoke.x4r(tmp, CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_4);
      return Unit_getInstance();
    };
  }
  function CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda_1($props) {
    return function ($this$invoke) {
      $this$invoke.title = 'Refresh';
      var tmp = IconButton;
      $this$invoke.x4r(tmp, CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($props));
      return Unit_getInstance();
    };
  }
  function CryptoACTable$lambda$lambda$lambda$lambda$lambda_1($props) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$6;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$5;
      // Inline function 'js.core.jso' call
      var tmp$ret$4;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.components.custom.table.CryptoACTable.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '5px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.marginLeft = tmp$ret$3;
      tmp0_apply.float = (/*union*/{inlineEnd: 'inline-end', inlineStart: 'inline-start', left: 'left', right: 'right'}/*union*/).left;
      tmp$ret$4 = tmp0_apply;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = css(tmp$ret$5);
      tmp1_css.className = tmp$ret$6;
      var tmp = Tooltip;
      $this$invoke.x4r(tmp, CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda_1($props));
      return Unit_getInstance();
    };
  }
  function CryptoACTable$lambda$lambda$lambda$lambda_0($props) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$6;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$5;
      // Inline function 'js.core.jso' call
      var tmp$ret$4;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.components.custom.table.CryptoACTable.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      tmp0_apply.marginLeft = (/*union*/{auto: 'auto'}/*union*/).auto;
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '0px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.marginRight = tmp$ret$3;
      tmp$ret$4 = tmp0_apply;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = css(tmp$ret$5);
      tmp1_css.className = tmp$ret$6;
      var tmp;
      if (!equals($props.onCloseProp, undefined)) {
        var tmp$ret$10;
        // Inline function 'react.dom.html.ReactHTML.div' call
        var tmp2__get_div__e5gx5o = ReactHTML_getInstance();
        var tmp$ret$9;
        // Inline function 'react.IntrinsicType' call
        var tmp$ret$8;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp$ret$7;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$7 = 'div';
        tmp$ret$8 = tmp$ret$7;
        tmp$ret$9 = tmp$ret$8;
        tmp$ret$10 = tmp$ret$9;
        var tmp_0 = tmp$ret$10;
        $this$invoke.x4r(tmp_0, CryptoACTable$lambda$lambda$lambda$lambda$lambda($props));
        tmp = Unit_getInstance();
      }
      var tmp$ret$14;
      // Inline function 'react.dom.html.ReactHTML.div' call
      var tmp3__get_div__fkdzdv = ReactHTML_getInstance();
      var tmp$ret$13;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$12;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$11;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$11 = 'div';
      tmp$ret$12 = tmp$ret$11;
      tmp$ret$13 = tmp$ret$12;
      tmp$ret$14 = tmp$ret$13;
      var tmp_1 = tmp$ret$14;
      $this$invoke.x4r(tmp_1, CryptoACTable$lambda$lambda$lambda$lambda$lambda_0($props));
      var tmp$ret$18;
      // Inline function 'react.dom.html.ReactHTML.div' call
      var tmp4__get_div__pqv61q = ReactHTML_getInstance();
      var tmp$ret$17;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$16;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$15;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$15 = 'div';
      tmp$ret$16 = tmp$ret$15;
      tmp$ret$17 = tmp$ret$16;
      tmp$ret$18 = tmp$ret$17;
      var tmp_2 = tmp$ret$18;
      $this$invoke.x4r(tmp_2, CryptoACTable$lambda$lambda$lambda$lambda$lambda_1($props));
      return Unit_getInstance();
    };
  }
  function CryptoACTable$lambda$lambda$lambda($props) {
    return function ($this$invoke) {
      var tmp = Typography;
      $this$invoke.x4r(tmp, CryptoACTable$lambda$lambda$lambda$lambda($props));
      var tmp$ret$3;
      // Inline function 'react.dom.html.ReactHTML.div' call
      var tmp0__get_div__2k2o9m = ReactHTML_getInstance();
      var tmp$ret$2;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = 'div';
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp_0 = tmp$ret$3;
      $this$invoke.x4r(tmp_0, CryptoACTable$lambda$lambda$lambda$lambda_0($props));
      return Unit_getInstance();
    };
  }
  function CryptoACTable$lambda$lambda$lambda$lambda$lambda_2($this$invoke) {
    _init_properties_CryptoACTable_kt__35kjk7();
    // Inline function 'emotion.react.css' call
    var tmp1_css = $this$invoke;
    var tmp$ret$15;
    // Inline function 'emotion.css.ClassName' call
    var tmp$ret$14;
    // Inline function 'js.core.jso' call
    var tmp$ret$13;
    // Inline function 'kotlin.apply' call
    var tmp$ret$0;
    // Inline function 'js.core.jso' call
    tmp$ret$0 = {};
    var tmp0_apply = tmp$ret$0;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'eu.fbk.st.cryptoac.view.components.custom.table.CryptoACTable.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
    var tmp$ret$3;
    // Inline function 'csstype.url' call
    var tmp$ret$2;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = 'url(blackhole.svg)';
    var tmp$ret$1;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$1 = tmp0_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    tmp0_apply.backgroundImage = tmp$ret$3;
    tmp0_apply.backgroundRepeat = (/*union*/{noRepeat: 'no-repeat', repeat: 'repeat', repeatX: 'repeat-x', repeatY: 'repeat-y', round: 'round', space: 'space'}/*union*/).noRepeat;
    tmp0_apply.backgroundPositionX = (/*union*/{center: 'center', left: 'left', right: 'right', xEnd: 'x-end', xStart: 'x-start'}/*union*/).center;
    tmp0_apply.backgroundPositionY = (/*union*/{bottom: 'bottom', center: 'center', top: 'top', yEnd: 'y-end', yStart: 'y-start'}/*union*/).center;
    var tmp$ret$6;
    // Inline function 'csstype.px' call
    var tmp$ret$5;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp1_unsafeCast = '150px';
    var tmp$ret$4;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$4 = tmp1_unsafeCast;
    tmp$ret$5 = tmp$ret$4;
    tmp$ret$6 = tmp$ret$5;
    tmp0_apply.backgroundSize = tmp$ret$6;
    var tmp$ret$9;
    // Inline function 'csstype.px' call
    var tmp$ret$8;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp2_unsafeCast = '75px';
    var tmp$ret$7;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$7 = tmp2_unsafeCast;
    tmp$ret$8 = tmp$ret$7;
    tmp$ret$9 = tmp$ret$8;
    tmp0_apply.lineHeight = tmp$ret$9;
    tmp0_apply.textAlign = (/*union*/{center: 'center', end: 'end', justify: 'justify', left: 'left', matchParent: 'match-parent', right: 'right', start: 'start'}/*union*/).center;
    var tmp$ret$12;
    // Inline function 'csstype.pct' call
    var tmp$ret$11;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp3_unsafeCast = '90%';
    var tmp$ret$10;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$10 = tmp3_unsafeCast;
    tmp$ret$11 = tmp$ret$10;
    tmp$ret$12 = tmp$ret$11;
    tmp0_apply.height = tmp$ret$12;
    tmp$ret$13 = tmp0_apply;
    tmp$ret$14 = tmp$ret$13;
    tmp$ret$15 = css(tmp$ret$14);
    tmp1_css.className = tmp$ret$15;
    var tmp$ret$19;
    // Inline function 'react.dom.html.ReactHTML.p' call
    var tmp2__get_p__qh4lul = ReactHTML_getInstance();
    var tmp$ret$18;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$17;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$16;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$16 = 'p';
    tmp$ret$17 = tmp$ret$16;
    tmp$ret$18 = tmp$ret$17;
    tmp$ret$19 = tmp$ret$18;
    var tmp = tmp$ret$19;
    $this$invoke.x4r(tmp, CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda_2);
    return Unit_getInstance();
  }
  function CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda_2($this$invoke) {
    _init_properties_CryptoACTable_kt__35kjk7();
    $this$invoke.w4r('No items in this table yet');
    return Unit_getInstance();
  }
  function CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_5($element) {
    return function ($this$invoke) {
      $this$invoke.key = $element.q5b_1;
      $this$invoke.align = 'center';
      $this$invoke.w4r($element.r5b_1);
      return Unit_getInstance();
    };
  }
  function CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2($props) {
    return function ($this$invoke) {
      var tmp0_forEach = $props.tableColumnsProp;
      var indexedObject = tmp0_forEach;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var element = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'eu.fbk.st.cryptoac.view.components.custom.table.CryptoACTable.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
        var tmp = TableCell;
        $this$invoke.x4r(tmp, CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_5(element));
      }
      return Unit_getInstance();
    };
  }
  function CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda_3($props) {
    return function ($this$invoke) {
      var tmp = TableRow;
      $this$invoke.x4r(tmp, CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2($props));
      return Unit_getInstance();
    };
  }
  function CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_6($props, $element) {
    return function (_anonymous_parameter_0__qggqh8) {
      $props.onElementClickProp($element);
      return Unit_getInstance();
    };
  }
  function CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_7($element) {
    return function ($this$invoke) {
      $this$invoke.align = 'center';
      $this$invoke.w4r($element);
      return Unit_getInstance();
    };
  }
  function CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda$lambda_3($element, $props) {
    return function ($this$invoke) {
      $this$invoke.key = joinToString_0($element, '');
      $this$invoke.hover = true;
      $this$invoke.selected = false;
      $this$invoke.onClick = CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_6($props, $element);
      var indexedObject = $element;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var element = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'eu.fbk.st.cryptoac.view.components.custom.table.CryptoACTable.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
        var tmp = TableCell;
        $this$invoke.x4r(tmp, CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_7(element));
      }
      return Unit_getInstance();
    };
  }
  function CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda_4($props, $state$delegate) {
    return function ($this$invoke) {
      var tmp0_forEach = $props.elementsProp.g2(fromIndex(invoke$lambda_15($state$delegate).m5b_1, invoke$lambda_15($state$delegate).n5b_1, $props.elementsProp.i()), toIndex(invoke$lambda_15($state$delegate).m5b_1, invoke$lambda_15($state$delegate).n5b_1, $props.elementsProp.i()));
      var tmp0_iterator = tmp0_forEach.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        // Inline function 'eu.fbk.st.cryptoac.view.components.custom.table.CryptoACTable.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
        var tmp = TableRow;
        $this$invoke.x4r(tmp, CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda$lambda_3(element, $props));
      }
      return Unit_getInstance();
    };
  }
  function CryptoACTable$lambda$lambda$lambda$lambda$lambda_3($props, $state$delegate) {
    return function ($this$invoke) {
      var tmp = TableHead;
      $this$invoke.x4r(tmp, CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda_3($props));
      var tmp_0 = TableBody;
      $this$invoke.x4r(tmp_0, CryptoACTable$lambda$lambda$lambda$lambda$lambda$lambda_4($props, $state$delegate));
      return Unit_getInstance();
    };
  }
  function CryptoACTable$lambda$lambda$lambda$lambda_1($props, $state$delegate) {
    return function ($this$invoke) {
      var tmp;
      if ($props.elementsProp.l()) {
        var tmp$ret$3;
        // Inline function 'react.dom.html.ReactHTML.div' call
        var tmp0__get_div__2k2o9m = ReactHTML_getInstance();
        var tmp$ret$2;
        // Inline function 'react.IntrinsicType' call
        var tmp$ret$1;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp$ret$0;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$0 = 'div';
        tmp$ret$1 = tmp$ret$0;
        tmp$ret$2 = tmp$ret$1;
        tmp$ret$3 = tmp$ret$2;
        var tmp_0 = tmp$ret$3;
        $this$invoke.x4r(tmp_0, CryptoACTable$lambda$lambda$lambda$lambda$lambda_2);
        tmp = Unit_getInstance();
      } else {
        var tmp_1 = Table;
        $this$invoke.x4r(tmp_1, CryptoACTable$lambda$lambda$lambda$lambda$lambda_3($props, $state$delegate));
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function CryptoACTable$lambda$lambda$lambda_0($props, $state$delegate) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$12;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$11;
      // Inline function 'js.core.jso' call
      var tmp$ret$10;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.components.custom.table.CryptoACTable.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '330px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.height = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '5px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      tmp0_apply.paddingLeft = tmp$ret$6;
      var tmp$ret$9;
      // Inline function 'csstype.px' call
      var tmp$ret$8;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp2_unsafeCast = '5px';
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = tmp2_unsafeCast;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      tmp0_apply.paddingRight = tmp$ret$9;
      tmp$ret$10 = tmp0_apply;
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = css(tmp$ret$11);
      tmp1_css.className = tmp$ret$12;
      var tmp = TableContainer;
      $this$invoke.x4r(tmp, CryptoACTable$lambda$lambda$lambda$lambda_1($props, $state$delegate));
      return Unit_getInstance();
    };
  }
  function CryptoACTable$lambda$lambda$lambda$lambda_2($state$delegate) {
    return function (_anonymous_parameter_0__qggqh8, newPage) {
      invoke$lambda_16($state$delegate, invoke$lambda_15($state$delegate).p5b(VOID, newPage));
      return Unit_getInstance();
    };
  }
  function CryptoACTable$lambda$lambda$lambda$lambda_3($state$delegate) {
    return function (event) {
      var tmp0_$this = invoke$lambda_15($state$delegate);
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      var tmp0_asDynamic = event.target;
      tmp$ret$0 = tmp0_asDynamic;
      var tmp = tmp$ret$0.value;
      var tmp1_rowsPerPageState = (!(tmp == null) ? typeof tmp === 'number' : false) ? tmp : THROW_CCE();
      invoke$lambda_16($state$delegate, tmp0_$this.o5b(tmp1_rowsPerPageState, 0));
      return Unit_getInstance();
    };
  }
  function CryptoACTable$lambda$lambda$lambda_1($props, $state$delegate) {
    return function ($this$invoke) {
      var tmp$ret$2;
      // Inline function 'kotlin.arrayOf' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = [5, 10, 25, 50];
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      $this$invoke.rowsPerPageOptions = tmp$ret$2;
      $this$invoke.component = 'div';
      $this$invoke.count = $props.elementsProp.i();
      $this$invoke.rowsPerPage = invoke$lambda_15($state$delegate).m5b_1;
      $this$invoke.page = invoke$lambda_15($state$delegate).n5b_1;
      $this$invoke.labelRowsPerPage = 'Rows:';
      $this$invoke.onChangePage = CryptoACTable$lambda$lambda$lambda$lambda_2($state$delegate);
      $this$invoke.onChangeRowsPerPage = CryptoACTable$lambda$lambda$lambda$lambda_3($state$delegate);
      return Unit_getInstance();
    };
  }
  function CryptoACTable$lambda$lambda($props, $state$delegate) {
    return function ($this$invoke) {
      var tmp = Toolbar;
      $this$invoke.x4r(tmp, CryptoACTable$lambda$lambda$lambda($props));
      var tmp$ret$3;
      // Inline function 'react.dom.html.ReactHTML.div' call
      var tmp0__get_div__2k2o9m = ReactHTML_getInstance();
      var tmp$ret$2;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = 'div';
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp_0 = tmp$ret$3;
      $this$invoke.x4r(tmp_0, CryptoACTable$lambda$lambda$lambda_0($props, $state$delegate));
      var tmp_1 = TablePagination;
      $this$invoke.x4r(tmp_1, CryptoACTable$lambda$lambda$lambda_1($props, $state$delegate));
      return Unit_getInstance();
    };
  }
  var properties_initialized_CryptoACTable_kt_io4z5n;
  function _init_properties_CryptoACTable_kt__35kjk7() {
    if (properties_initialized_CryptoACTable_kt_io4z5n) {
    } else {
      properties_initialized_CryptoACTable_kt_io4z5n = true;
      CryptoACTable = FC(CryptoACTable$lambda);
    }
  }
  function get_userColumns() {
    _init_properties_CryptoACTableColumn_kt__377h7z();
    return userColumns;
  }
  var userColumns;
  function get_roleColumns() {
    _init_properties_CryptoACTableColumn_kt__377h7z();
    return roleColumns;
  }
  var roleColumns;
  function get_resourceColumns() {
    _init_properties_CryptoACTableColumn_kt__377h7z();
    return resourceColumns;
  }
  var resourceColumns;
  function get_assignmentColumns() {
    _init_properties_CryptoACTableColumn_kt__377h7z();
    return assignmentColumns;
  }
  var assignmentColumns;
  function get_permissionColumns() {
    _init_properties_CryptoACTableColumn_kt__377h7z();
    return permissionColumns;
  }
  var permissionColumns;
  function get_mqttMessagesColumns() {
    _init_properties_CryptoACTableColumn_kt__377h7z();
    return mqttMessagesColumns;
  }
  var mqttMessagesColumns;
  function CryptoACTableColumn(field, headerName, description, type, flex, resizable) {
    type = type === VOID ? 'string' : type;
    flex = flex === VOID ? 1 : flex;
    resizable = resizable === VOID ? false : resizable;
    this.q5b_1 = field;
    this.r5b_1 = headerName;
    this.s5b_1 = description;
    this.t5b_1 = type;
    this.u5b_1 = flex;
    this.v5b_1 = resizable;
  }
  protoOf(CryptoACTableColumn).toString = function () {
    return 'CryptoACTableColumn(field=' + this.q5b_1 + ', headerName=' + this.r5b_1 + ', description=' + this.s5b_1 + ', type=' + this.t5b_1 + ', flex=' + this.u5b_1 + ', resizable=' + this.v5b_1 + ')';
  };
  protoOf(CryptoACTableColumn).hashCode = function () {
    var result = getStringHashCode(this.q5b_1);
    result = imul(result, 31) + getStringHashCode(this.r5b_1) | 0;
    result = imul(result, 31) + getStringHashCode(this.s5b_1) | 0;
    result = imul(result, 31) + getStringHashCode(this.t5b_1) | 0;
    result = imul(result, 31) + this.u5b_1 | 0;
    result = imul(result, 31) + (this.v5b_1 | 0) | 0;
    return result;
  };
  protoOf(CryptoACTableColumn).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CryptoACTableColumn))
      return false;
    var tmp0_other_with_cast = other instanceof CryptoACTableColumn ? other : THROW_CCE();
    if (!(this.q5b_1 === tmp0_other_with_cast.q5b_1))
      return false;
    if (!(this.r5b_1 === tmp0_other_with_cast.r5b_1))
      return false;
    if (!(this.s5b_1 === tmp0_other_with_cast.s5b_1))
      return false;
    if (!(this.t5b_1 === tmp0_other_with_cast.t5b_1))
      return false;
    if (!(this.u5b_1 === tmp0_other_with_cast.u5b_1))
      return false;
    if (!(this.v5b_1 === tmp0_other_with_cast.v5b_1))
      return false;
    return true;
  };
  var properties_initialized_CryptoACTableColumn_kt_b8ywy7;
  function _init_properties_CryptoACTableColumn_kt__377h7z() {
    if (properties_initialized_CryptoACTableColumn_kt_b8ywy7) {
    } else {
      properties_initialized_CryptoACTableColumn_kt_b8ywy7 = true;
      var tmp$ret$2;
      // Inline function 'kotlin.arrayOf' call
      var tmp0_arrayOf = [new CryptoACTableColumn('name', 'Name', 'The name of the user'), new CryptoACTableColumn('status', 'Status', 'The current status of the user (INCOMPLETE, OPERATIONAL or DELETED)'), new CryptoACTableColumn('isAdmin', 'Admin', 'Whether the user has administrative privileges', 'boolean'), new CryptoACTableColumn('token', 'Token', 'The token of the user')];
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = tmp0_arrayOf;
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      userColumns = tmp$ret$2;
      var tmp$ret$2_0;
      // Inline function 'kotlin.arrayOf' call
      var tmp0_arrayOf_0 = [new CryptoACTableColumn('name', 'Name', 'The name of the role'), new CryptoACTableColumn('status', 'Status', 'The current status of the role (OPERATIONAL or DELETED)'), new CryptoACTableColumn('token', 'Token', 'The token of the role')];
      var tmp$ret$1_0;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0_0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0_0 = tmp0_arrayOf_0;
      tmp$ret$1_0 = tmp$ret$0_0;
      tmp$ret$2_0 = tmp$ret$1_0;
      roleColumns = tmp$ret$2_0;
      var tmp$ret$2_1;
      // Inline function 'kotlin.arrayOf' call
      var tmp0_arrayOf_1 = [new CryptoACTableColumn('name', 'Name', 'The name of the file'), new CryptoACTableColumn('status', 'Status', 'The current status of the file (OPERATIONAL or DELETED)'), new CryptoACTableColumn('versionNumber', '#', 'The version number of the file', 'number'), new CryptoACTableColumn('token', 'Token', 'The token of the file'), new CryptoACTableColumn('enforcement', 'Enforcement', 'The access control enforcement of the file')];
      var tmp$ret$1_1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0_1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0_1 = tmp0_arrayOf_1;
      tmp$ret$1_1 = tmp$ret$0_1;
      tmp$ret$2_1 = tmp$ret$1_1;
      resourceColumns = tmp$ret$2_1;
      var tmp$ret$2_2;
      // Inline function 'kotlin.arrayOf' call
      var tmp0_arrayOf_2 = [new CryptoACTableColumn('username', 'Username', 'The name of the user'), new CryptoACTableColumn('role name', 'Role Name', 'The name of the role'), new CryptoACTableColumn('versionNumber', '#', 'The version number of the role', 'number')];
      var tmp$ret$1_2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0_2;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0_2 = tmp0_arrayOf_2;
      tmp$ret$1_2 = tmp$ret$0_2;
      tmp$ret$2_2 = tmp$ret$1_2;
      assignmentColumns = tmp$ret$2_2;
      var tmp$ret$2_3;
      // Inline function 'kotlin.arrayOf' call
      var tmp0_arrayOf_3 = [new CryptoACTableColumn('role name', 'Role Name', 'The name of the role'), new CryptoACTableColumn('resource name', 'resource name', 'The name of the file'), new CryptoACTableColumn('fileVersionNumber', '#', 'The version number of the key', 'number'), new CryptoACTableColumn('permission', 'Permission', 'The permission assigned (either Read or ReadWrite)')];
      var tmp$ret$1_3;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0_3;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0_3 = tmp0_arrayOf_3;
      tmp$ret$1_3 = tmp$ret$0_3;
      tmp$ret$2_3 = tmp$ret$1_3;
      permissionColumns = tmp$ret$2_3;
      var tmp$ret$2_4;
      // Inline function 'kotlin.arrayOf' call
      var tmp0_arrayOf_4 = [new CryptoACTableColumn('message', 'Message', 'A message sent in the topic')];
      var tmp$ret$1_4;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0_4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0_4 = tmp0_arrayOf_4;
      tmp$ret$1_4 = tmp$ret$0_4;
      tmp$ret$2_4 = tmp$ret$1_4;
      mqttMessagesColumns = tmp$ret$2_4;
    }
  }
  function CryptoACTableData(elements, columns, title) {
    this.w5b_1 = elements;
    this.x5b_1 = columns;
    this.y5b_1 = title;
  }
  protoOf(CryptoACTableData).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof CryptoACTableData))
      return false;
    if (!equals(this.w5b_1, other.w5b_1))
      return false;
    if (!contentEquals_0(this.x5b_1, other.x5b_1))
      return false;
    return this.y5b_1 === other.y5b_1;
  };
  protoOf(CryptoACTableData).hashCode = function () {
    var result = hashCode(this.w5b_1);
    result = imul(31, result) + contentHashCode_0(this.x5b_1) | 0;
    result = imul(31, result) + getStringHashCode(this.y5b_1) | 0;
    return result;
  };
  protoOf(CryptoACTableData).toString = function () {
    return 'CryptoACTableData(elements=' + this.w5b_1 + ', columns=' + toString_0(this.x5b_1) + ', title=' + this.y5b_1 + ')';
  };
  function get_Dashboard() {
    _init_properties_Dashboard_kt__my4hia();
    return Dashboard;
  }
  var Dashboard;
  function Dashboard$lambda($this$FC, props) {
    _init_properties_Dashboard_kt__my4hia();
    var parameters = props.coreParametersProp;
    var tmp = get_CryptoACEditProfileForm();
    $this$FC.x4r(tmp, Dashboard$lambda$lambda(props, parameters));
    var tmp0_subject = props.coreTypeProp;
    var tmp0 = tmp0_subject.n4_1;
    switch (tmp0) {
      case 0:
        var tmp_0 = get_RBACCryptoACDashboard();
        $this$FC.x4r(tmp_0, Dashboard$lambda$lambda_0(props));
        ;
        break;
      case 1:
        var tmp_1 = get_RBACMQTTDashboard();
        $this$FC.x4r(tmp_1, Dashboard$lambda$lambda_1(props));
        ;
        break;
      case 2:
        // Inline function 'kotlin.TODO' call

        throw new NotImplementedError();
      case 3:
        // Inline function 'kotlin.TODO' call

        throw new NotImplementedError();
    }
    return Unit_getInstance();
  }
  function Dashboard$lambda$lambda$lambda($props) {
    return function (coreType) {
      $props.handleProfileWasCreatedOrModifiedProp(coreType);
      return Unit_getInstance();
    };
  }
  function Dashboard$lambda$lambda($props, $parameters) {
    return function ($this$invoke) {
      $this$invoke.handleProfileWasCreatedOrModifiedProp = Dashboard$lambda$lambda$lambda($props);
      $this$invoke.handleChangeBackdropIsOpenProp = $props.handleChangeBackdropIsOpenProp;
      $this$invoke.handleDisplayAlertProp = $props.handleDisplayAlertProp;
      $this$invoke.coreParametersProp = $parameters;
      $this$invoke.httpClientProp = $props.httpClientProp;
      $this$invoke.isCreatingNewProfileProp = false;
      $this$invoke.handleChangeCoreTypeProp = null;
      $this$invoke.handleChangeRMTypeProp = null;
      $this$invoke.handleChangeMMTypeProp = null;
      $this$invoke.handleChangeDMTypeProp = null;
      $this$invoke.handleChangeACTypeProp = null;
      $this$invoke.usernameProp = $props.usernameProp;
      $this$invoke.coreTypeProp = $parameters.z4v();
      var tmp0_subject = $parameters.z4v();
      var tmp0 = tmp0_subject.n4_1;
      var tmp;
      switch (tmp0) {
        case 0:
          if ($parameters instanceof CoreParametersRBAC)
            $parameters;
          else
            THROW_CCE();
          ;
          var tmp1_safe_receiver = $parameters.c4w();
          var tmp2_elvis_lhs = tmp1_safe_receiver == null ? null : tmp1_safe_receiver.w51();
          $this$invoke.rmTypeProp = tmp2_elvis_lhs == null ? RMType_NONE_getInstance() : tmp2_elvis_lhs;
          $this$invoke.mmTypeProp = $parameters.d4w().e4y();
          $this$invoke.dmTypeProp = $parameters.e4w().k4x();
          var tmp3_safe_receiver = $parameters.f4w();
          var tmp4_elvis_lhs = tmp3_safe_receiver == null ? null : tmp3_safe_receiver.y4u();
          $this$invoke.acTypeProp = tmp4_elvis_lhs == null ? ACType_NONE_getInstance() : tmp4_elvis_lhs;
          tmp = Unit_getInstance();
          break;
        case 1:
          if ($parameters instanceof CoreParametersRBAC)
            $parameters;
          else
            THROW_CCE();
          ;
          $this$invoke.rmTypeProp = RMType_NONE_getInstance();
          $this$invoke.mmTypeProp = $parameters.d4w().e4y();
          $this$invoke.dmTypeProp = $parameters.e4w().k4x();
          var tmp5_safe_receiver = $parameters.f4w();
          var tmp6_elvis_lhs = tmp5_safe_receiver == null ? null : tmp5_safe_receiver.y4u();
          $this$invoke.acTypeProp = tmp6_elvis_lhs == null ? ACType_NONE_getInstance() : tmp6_elvis_lhs;
          tmp = Unit_getInstance();
          break;
        case 2:
          throw new NotImplementedError();
        case 3:
          throw new NotImplementedError();
      }
      return Unit_getInstance();
    };
  }
  function Dashboard$lambda$lambda_0($props) {
    return function ($this$invoke) {
      $this$invoke.handleChangeBackdropIsOpenProp = $props.handleChangeBackdropIsOpenProp;
      $this$invoke.handleDisplayAlertProp = $props.handleDisplayAlertProp;
      $this$invoke.userIsAdminProp = $props.coreParametersProp.k25().u51_1;
      $this$invoke.httpClientProp = $props.httpClientProp;
      $this$invoke.coreTypeProp = $props.coreTypeProp;
      return Unit_getInstance();
    };
  }
  function Dashboard$lambda$lambda_1($props) {
    return function ($this$invoke) {
      $this$invoke.handleChangeBackdropIsOpenProp = $props.handleChangeBackdropIsOpenProp;
      $this$invoke.handleDisplayAlertProp = $props.handleDisplayAlertProp;
      $this$invoke.userIsAdminProp = $props.coreParametersProp.k25().u51_1;
      $this$invoke.httpClientProp = $props.httpClientProp;
      $this$invoke.coreTypeProp = $props.coreTypeProp;
      $this$invoke.topicsProp = $props.tablesProp;
      return Unit_getInstance();
    };
  }
  var properties_initialized_Dashboard_kt_h6osak;
  function _init_properties_Dashboard_kt__my4hia() {
    if (properties_initialized_Dashboard_kt_h6osak) {
    } else {
      properties_initialized_Dashboard_kt_h6osak = true;
      Dashboard = FC(Dashboard$lambda);
    }
  }
  var logger_4;
  function get_RBACCryptoACDashboard() {
    _init_properties_RBACCryptoACDashboard_kt__o5fp3n();
    return RBACCryptoACDashboard;
  }
  var RBACCryptoACDashboard;
  function RBACCryptoACDashboardState(usersState, rolesState, resourcesState, assignmentsState, permissionsState, openedTablesState) {
    var tmp;
    if (usersState === VOID) {
      var tmp$ret$0;
      var tmp$ret$0_0;
      // Inline function 'kotlin.collections.listOf' call
      tmp$ret$0 = emptyList();
      tmp$ret$0_0 = Unit_getInstance();
      tmp = tmp$ret$0;
    } else {
      tmp = usersState;
    }
    usersState = tmp;
    var tmp_0;
    if (rolesState === VOID) {
      var tmp$ret$0_1;
      var tmp$ret$1;
      // Inline function 'kotlin.collections.listOf' call
      tmp$ret$0_1 = emptyList();
      tmp$ret$1 = Unit_getInstance();
      tmp_0 = tmp$ret$0_1;
    } else {
      tmp_0 = rolesState;
    }
    rolesState = tmp_0;
    var tmp_1;
    if (resourcesState === VOID) {
      var tmp$ret$0_2;
      var tmp$ret$2;
      // Inline function 'kotlin.collections.listOf' call
      tmp$ret$0_2 = emptyList();
      tmp$ret$2 = Unit_getInstance();
      tmp_1 = tmp$ret$0_2;
    } else {
      tmp_1 = resourcesState;
    }
    resourcesState = tmp_1;
    var tmp_2;
    if (assignmentsState === VOID) {
      var tmp$ret$0_3;
      var tmp$ret$3;
      // Inline function 'kotlin.collections.listOf' call
      tmp$ret$0_3 = emptyList();
      tmp$ret$3 = Unit_getInstance();
      tmp_2 = tmp$ret$0_3;
    } else {
      tmp_2 = assignmentsState;
    }
    assignmentsState = tmp_2;
    var tmp_3;
    if (permissionsState === VOID) {
      var tmp$ret$0_4;
      var tmp$ret$4;
      // Inline function 'kotlin.collections.listOf' call
      tmp$ret$0_4 = emptyList();
      tmp$ret$4 = Unit_getInstance();
      tmp_3 = tmp$ret$0_4;
    } else {
      tmp_3 = permissionsState;
    }
    permissionsState = tmp_3;
    var tmp_4;
    if (openedTablesState === VOID) {
      var tmp$ret$0_5;
      var tmp$ret$5;
      // Inline function 'kotlin.collections.mutableListOf' call
      tmp$ret$0_5 = ArrayList_init_$Create$();
      tmp$ret$5 = Unit_getInstance();
      tmp_4 = tmp$ret$0_5;
    } else {
      tmp_4 = openedTablesState;
    }
    openedTablesState = tmp_4;
    this.z5b_1 = usersState;
    this.a5c_1 = rolesState;
    this.b5c_1 = resourcesState;
    this.c5c_1 = assignmentsState;
    this.d5c_1 = permissionsState;
    this.e5c_1 = openedTablesState;
  }
  protoOf(RBACCryptoACDashboardState).f5c = function (_set____db54di) {
    this.z5b_1 = _set____db54di;
  };
  protoOf(RBACCryptoACDashboardState).g5c = function () {
    return this.z5b_1;
  };
  protoOf(RBACCryptoACDashboardState).h5c = function (_set____db54di) {
    this.a5c_1 = _set____db54di;
  };
  protoOf(RBACCryptoACDashboardState).i5c = function () {
    return this.a5c_1;
  };
  protoOf(RBACCryptoACDashboardState).j5c = function (_set____db54di) {
    this.b5c_1 = _set____db54di;
  };
  protoOf(RBACCryptoACDashboardState).k5c = function () {
    return this.b5c_1;
  };
  protoOf(RBACCryptoACDashboardState).l5c = function (_set____db54di) {
    this.c5c_1 = _set____db54di;
  };
  protoOf(RBACCryptoACDashboardState).m5c = function () {
    return this.c5c_1;
  };
  protoOf(RBACCryptoACDashboardState).n5c = function (_set____db54di) {
    this.d5c_1 = _set____db54di;
  };
  protoOf(RBACCryptoACDashboardState).o5c = function () {
    return this.d5c_1;
  };
  protoOf(RBACCryptoACDashboardState).p5c = function (_set____db54di) {
    this.e5c_1 = _set____db54di;
  };
  protoOf(RBACCryptoACDashboardState).q5c = function () {
    return this.e5c_1;
  };
  protoOf(RBACCryptoACDashboardState).r5c = function (usersState, rolesState, resourcesState, assignmentsState, permissionsState, openedTablesState) {
    return new RBACCryptoACDashboardState(usersState, rolesState, resourcesState, assignmentsState, permissionsState, openedTablesState);
  };
  protoOf(RBACCryptoACDashboardState).s5c = function (usersState, rolesState, resourcesState, assignmentsState, permissionsState, openedTablesState, $super) {
    usersState = usersState === VOID ? this.z5b_1 : usersState;
    rolesState = rolesState === VOID ? this.a5c_1 : rolesState;
    resourcesState = resourcesState === VOID ? this.b5c_1 : resourcesState;
    assignmentsState = assignmentsState === VOID ? this.c5c_1 : assignmentsState;
    permissionsState = permissionsState === VOID ? this.d5c_1 : permissionsState;
    openedTablesState = openedTablesState === VOID ? this.e5c_1 : openedTablesState;
    return $super === VOID ? this.r5c(usersState, rolesState, resourcesState, assignmentsState, permissionsState, openedTablesState) : $super.r5c.call(this, usersState, rolesState, resourcesState, assignmentsState, permissionsState, openedTablesState);
  };
  protoOf(RBACCryptoACDashboardState).toString = function () {
    return 'RBACCryptoACDashboardState(usersState=' + this.z5b_1 + ', rolesState=' + this.a5c_1 + ', resourcesState=' + this.b5c_1 + ', assignmentsState=' + this.c5c_1 + ', permissionsState=' + this.d5c_1 + ', openedTablesState=' + this.e5c_1 + ')';
  };
  protoOf(RBACCryptoACDashboardState).hashCode = function () {
    var result = hashCode(this.z5b_1);
    result = imul(result, 31) + hashCode(this.a5c_1) | 0;
    result = imul(result, 31) + hashCode(this.b5c_1) | 0;
    result = imul(result, 31) + hashCode(this.c5c_1) | 0;
    result = imul(result, 31) + hashCode(this.d5c_1) | 0;
    result = imul(result, 31) + hashCode(this.e5c_1) | 0;
    return result;
  };
  protoOf(RBACCryptoACDashboardState).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof RBACCryptoACDashboardState))
      return false;
    var tmp0_other_with_cast = other instanceof RBACCryptoACDashboardState ? other : THROW_CCE();
    if (!equals(this.z5b_1, tmp0_other_with_cast.z5b_1))
      return false;
    if (!equals(this.a5c_1, tmp0_other_with_cast.a5c_1))
      return false;
    if (!equals(this.b5c_1, tmp0_other_with_cast.b5c_1))
      return false;
    if (!equals(this.c5c_1, tmp0_other_with_cast.c5c_1))
      return false;
    if (!equals(this.d5c_1, tmp0_other_with_cast.d5c_1))
      return false;
    if (!equals(this.e5c_1, tmp0_other_with_cast.e5c_1))
      return false;
    return true;
  };
  defineProp(protoOf(RBACCryptoACDashboardState), 'usersState', function () {
    return this.g5c();
  }, function (value) {
    this.f5c(value);
  });
  defineProp(protoOf(RBACCryptoACDashboardState), 'rolesState', function () {
    return this.i5c();
  }, function (value) {
    this.h5c(value);
  });
  defineProp(protoOf(RBACCryptoACDashboardState), 'resourcesState', function () {
    return this.k5c();
  }, function (value) {
    this.j5c(value);
  });
  defineProp(protoOf(RBACCryptoACDashboardState), 'assignmentsState', function () {
    return this.m5c();
  }, function (value) {
    this.l5c(value);
  });
  defineProp(protoOf(RBACCryptoACDashboardState), 'permissionsState', function () {
    return this.o5c();
  }, function (value) {
    this.n5c(value);
  });
  defineProp(protoOf(RBACCryptoACDashboardState), 'openedTablesState', function () {
    return this.q5c();
  }, function (value) {
    this.p5c(value);
  });
  function logger$lambda_4() {
    _init_properties_RBACCryptoACDashboard_kt__o5fp3n();
    return Unit_getInstance();
  }
  function RBACCryptoACDashboard$lambda($this$FC, props) {
    _init_properties_RBACCryptoACDashboard_kt__o5fp3n();
    var state$delegate = useState(new RBACCryptoACDashboardState());
    var tmp = MainScope();
    launch(tmp, VOID, VOID, RBACCryptoACDashboard$lambda$slambda_0(props, state$delegate, null));
    var tmp$ret$3;
    // Inline function 'react.dom.html.ReactHTML.div' call
    var tmp0__get_div__2k2o9m = ReactHTML_getInstance();
    var tmp$ret$2;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = 'div';
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    var tmp_0 = tmp$ret$3;
    $this$FC.x4r(tmp_0, RBACCryptoACDashboard$lambda$lambda(props, state$delegate));
    return Unit_getInstance();
  }
  function invoke$lambda_17($state$delegate) {
    _init_properties_RBACCryptoACDashboard_kt__o5fp3n();
    var tmp$ret$2;
    // Inline function 'react.StateInstance.getValue' call
    var tmp1_getValue = getLocalDelegateReference('state', KMutableProperty0, true, function () {
      return THROW_ISE();
    });
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = $state$delegate;
    var tmp0_unsafeCast = tmp$ret$0[0];
    tmp$ret$1 = tmp0_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  }
  function invoke$lambda_18($state$delegate, value) {
    _init_properties_RBACCryptoACDashboard_kt__o5fp3n();
    var tmp1_setValue = getLocalDelegateReference('state', KMutableProperty0, true, function () {
      return THROW_ISE();
    });
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = $state$delegate;
    var tmp0_unsafeCast = tmp$ret$0[1];
    tmp$ret$1 = tmp0_unsafeCast;
    return tmp$ret$1(value);
  }
  function RBACCryptoACDashboard$lambda$slambda($props, $state$delegate, resultContinuation) {
    this.b5d_1 = $props;
    this.c5d_1 = $state$delegate;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(RBACCryptoACDashboard$lambda$slambda).f1e = function ($this$launch, $completion) {
    var tmp = this.g1e($this$launch, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  };
  protoOf(RBACCryptoACDashboard$lambda$slambda).si = function (p1, $completion) {
    return this.f1e((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(RBACCryptoACDashboard$lambda$slambda).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 10;
            var tmp_0 = this;
            tmp_0.e5d_1 = emptyList();
            var tmp_1 = this;
            tmp_1.f5d_1 = emptyList();
            var tmp_2 = this;
            tmp_2.g5d_1 = emptyList();
            var tmp_3 = this;
            tmp_3.h5d_1 = emptyList();
            this.xh_1 = 1;
            suspendResult = getAssignments(this.b5d_1, VOID, VOID, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.i5d_1 = suspendResult;
            if (!(this.i5d_1 == null)) {
              this.xh_1 = 2;
              suspendResult = getPermissions(this.b5d_1, VOID, VOID, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.xh_1 = 9;
              continue $sm;
            }

            break;
          case 2:
            this.h5d_1 = suspendResult;
            if (!(this.h5d_1 == null) ? this.b5d_1.userIsAdminProp : false) {
              this.xh_1 = 3;
              suspendResult = getUsers(this.b5d_1, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.xh_1 = 8;
              continue $sm;
            }

            break;
          case 3:
            this.e5d_1 = suspendResult;
            if (!(this.e5d_1 == null)) {
              this.xh_1 = 4;
              suspendResult = getRoles(this.b5d_1, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.xh_1 = 7;
              continue $sm;
            }

            break;
          case 4:
            this.f5d_1 = suspendResult;
            if (!(this.f5d_1 == null)) {
              this.xh_1 = 5;
              suspendResult = getResources(this.b5d_1, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.xh_1 = 6;
              continue $sm;
            }

            break;
          case 5:
            this.g5d_1 = suspendResult;
            this.xh_1 = 6;
            continue $sm;
          case 6:
            this.xh_1 = 7;
            continue $sm;
          case 7:
            this.xh_1 = 8;
            continue $sm;
          case 8:
            this.xh_1 = 9;
            continue $sm;
          case 9:
            if (this.b5d_1.userIsAdminProp ? !(this.e5d_1 == null) : false) {
              invoke$lambda_17(this.c5d_1).z5b_1 = this.e5d_1;
            }

            if (this.b5d_1.userIsAdminProp ? !(this.f5d_1 == null) : false) {
              invoke$lambda_17(this.c5d_1).a5c_1 = this.f5d_1;
            }

            if (this.b5d_1.userIsAdminProp ? !(this.g5d_1 == null) : false) {
              invoke$lambda_17(this.c5d_1).b5c_1 = this.g5d_1;
            }

            if (!(this.i5d_1 == null)) {
              invoke$lambda_17(this.c5d_1).c5c_1 = this.i5d_1;
            }

            if (!(this.h5d_1 == null)) {
              invoke$lambda_17(this.c5d_1).d5c_1 = this.h5d_1;
            }

            invoke$lambda_18(this.c5d_1, invoke$lambda_17(this.c5d_1).s5c());
            return Unit_getInstance();
          case 10:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 10) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  protoOf(RBACCryptoACDashboard$lambda$slambda).g1e = function ($this$launch, completion) {
    var i = new RBACCryptoACDashboard$lambda$slambda(this.b5d_1, this.c5d_1, completion);
    i.d5d_1 = $this$launch;
    return i;
  };
  function RBACCryptoACDashboard$lambda$slambda_0($props, $state$delegate, resultContinuation) {
    var i = new RBACCryptoACDashboard$lambda$slambda($props, $state$delegate, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.f1e($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda($props, $state$delegate, resultContinuation) {
    this.r5d_1 = $props;
    this.s5d_1 = $state$delegate;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda).f1e = function ($this$launch, $completion) {
    var tmp = this.g1e($this$launch, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  };
  protoOf(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda).si = function (p1, $completion) {
    return this.f1e((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 2;
            this.xh_1 = 1;
            suspendResult = getUsers(this.r5d_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var fetchedUsers = suspendResult;
            if (!(fetchedUsers == null)) {
              invoke$lambda_18(this.s5d_1, invoke$lambda_17(this.s5d_1).s5c(fetchedUsers));
            }

            return Unit_getInstance();
          case 2:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 2) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  protoOf(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda).g1e = function ($this$launch, completion) {
    var i = new RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda(this.r5d_1, this.s5d_1, completion);
    i.t5d_1 = $this$launch;
    return i;
  };
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_0($props, $state$delegate, resultContinuation) {
    var i = new RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda($props, $state$delegate, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.f1e($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda($props, $state$delegate) {
    return function (it) {
      var tmp = MainScope();
      launch(tmp, VOID, VOID, RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_0($props, $state$delegate, null));
      return Unit_getInstance();
    };
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_1($it, $props, $state$delegate, resultContinuation) {
    this.c5e_1 = $it;
    this.d5e_1 = $props;
    this.e5e_1 = $state$delegate;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_1).f1e = function ($this$launch, $completion) {
    var tmp = this.g1e($this$launch, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  };
  protoOf(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_1).si = function (p1, $completion) {
    return this.f1e((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_1).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 2;
            this.g5e_1 = first_0(this.c5e_1);
            this.xh_1 = 1;
            suspendResult = getAssignments(this.d5e_1, this.g5e_1, VOID, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var result = suspendResult;
            var tmp_0;
            if (!(result == null)) {
              tmp_0 = !result.l();
            } else {
              tmp_0 = false;
            }

            if (tmp_0) {
              invoke$lambda_17(this.e5e_1).e5c_1.a(new CryptoACTableData(result, get_assignmentColumns(), 'Assignments of user ' + this.g5e_1));
              invoke$lambda_18(this.e5e_1, invoke$lambda_17(this.e5e_1).s5c());
            } else {
              this.d5e_1.handleDisplayAlertProp(OutcomeCode_CODE_007_ROLETUPLE_NOT_FOUND_getInstance(), CryptoACAlertSeverity_INFO_getInstance());
            }

            return Unit_getInstance();
          case 2:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 2) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  protoOf(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_1).g1e = function ($this$launch, completion) {
    var i = new RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_1(this.c5e_1, this.d5e_1, this.e5e_1, completion);
    i.f5e_1 = $this$launch;
    return i;
  };
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_2($it, $props, $state$delegate, resultContinuation) {
    var i = new RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_1($it, $props, $state$delegate, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.f1e($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda_0($props, $state$delegate) {
    return function (it) {
      var tmp = MainScope();
      launch(tmp, VOID, VOID, RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_2(it, $props, $state$delegate, null));
      return Unit_getInstance();
    };
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda($state$delegate, $props) {
    return function ($this$invoke) {
      $this$invoke.elementsProp = invoke$lambda_17($state$delegate).z5b_1;
      $this$invoke.tableColumnsProp = get_userColumns();
      $this$invoke.titleProp = 'Users';
      $this$invoke.onRefreshProp = RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda($props, $state$delegate);
      $this$invoke.onElementClickProp = RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda_0($props, $state$delegate);
      return Unit_getInstance();
    };
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda($state$delegate, $props) {
    return function ($this$invoke) {
      $this$invoke.item = true;
      $this$invoke.xs = 12;
      $this$invoke.sm = 4;
      var tmp = get_CryptoACTable();
      $this$invoke.x4r(tmp, RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda($state$delegate, $props));
      return Unit_getInstance();
    };
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_3($props, $state$delegate, resultContinuation) {
    this.p5e_1 = $props;
    this.q5e_1 = $state$delegate;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_3).f1e = function ($this$launch, $completion) {
    var tmp = this.g1e($this$launch, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  };
  protoOf(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_3).si = function (p1, $completion) {
    return this.f1e((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_3).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 2;
            this.xh_1 = 1;
            suspendResult = getRoles(this.p5e_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var fetchedRoles = suspendResult;
            if (!(fetchedRoles == null)) {
              invoke$lambda_18(this.q5e_1, invoke$lambda_17(this.q5e_1).s5c(VOID, fetchedRoles));
            }

            return Unit_getInstance();
          case 2:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 2) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  protoOf(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_3).g1e = function ($this$launch, completion) {
    var i = new RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_3(this.p5e_1, this.q5e_1, completion);
    i.r5e_1 = $this$launch;
    return i;
  };
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_4($props, $state$delegate, resultContinuation) {
    var i = new RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_3($props, $state$delegate, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.f1e($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda_1($props, $state$delegate) {
    return function (it) {
      var tmp = MainScope();
      launch(tmp, VOID, VOID, RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_4($props, $state$delegate, null));
      return Unit_getInstance();
    };
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_5($it, $props, $state$delegate, resultContinuation) {
    this.a5f_1 = $it;
    this.b5f_1 = $props;
    this.c5f_1 = $state$delegate;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_5).f1e = function ($this$launch, $completion) {
    var tmp = this.g1e($this$launch, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  };
  protoOf(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_5).si = function (p1, $completion) {
    return this.f1e((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_5).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 3;
            this.e5f_1 = first_0(this.a5f_1);
            this.xh_1 = 1;
            suspendResult = getAssignments(this.b5f_1, VOID, this.e5f_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.f5f_1 = suspendResult;
            this.xh_1 = 2;
            suspendResult = getPermissions(this.b5f_1, this.e5f_1, VOID, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            var permissions = suspendResult;
            var tmp_0;
            if (!(this.f5f_1 == null)) {
              tmp_0 = !this.f5f_1.l();
            } else {
              tmp_0 = false;
            }

            if (tmp_0) {
              invoke$lambda_17(this.c5f_1).e5c_1.a(new CryptoACTableData(this.f5f_1, get_assignmentColumns(), 'Assignments of role ' + this.e5f_1));
              invoke$lambda_18(this.c5f_1, invoke$lambda_17(this.c5f_1).s5c());
            } else {
              this.b5f_1.handleDisplayAlertProp(OutcomeCode_CODE_007_ROLETUPLE_NOT_FOUND_getInstance(), CryptoACAlertSeverity_INFO_getInstance());
            }

            var tmp_1;
            if (!(permissions == null)) {
              tmp_1 = !permissions.l();
            } else {
              tmp_1 = false;
            }

            if (tmp_1) {
              invoke$lambda_17(this.c5f_1).e5c_1.a(new CryptoACTableData(permissions, get_permissionColumns(), 'Permissions of role ' + this.e5f_1));
              invoke$lambda_18(this.c5f_1, invoke$lambda_17(this.c5f_1).s5c());
            } else {
              this.b5f_1.handleDisplayAlertProp(OutcomeCode_CODE_008_PERMISSIONTUPLE_NOT_FOUND_getInstance(), CryptoACAlertSeverity_INFO_getInstance());
            }

            return Unit_getInstance();
          case 3:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 3) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  protoOf(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_5).g1e = function ($this$launch, completion) {
    var i = new RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_5(this.a5f_1, this.b5f_1, this.c5f_1, completion);
    i.d5f_1 = $this$launch;
    return i;
  };
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_6($it, $props, $state$delegate, resultContinuation) {
    var i = new RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_5($it, $props, $state$delegate, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.f1e($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda_2($props, $state$delegate) {
    return function (it) {
      var tmp = MainScope();
      launch(tmp, VOID, VOID, RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_6(it, $props, $state$delegate, null));
      return Unit_getInstance();
    };
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda_0($state$delegate, $props) {
    return function ($this$invoke) {
      $this$invoke.elementsProp = invoke$lambda_17($state$delegate).a5c_1;
      $this$invoke.tableColumnsProp = get_roleColumns();
      $this$invoke.titleProp = 'Roles';
      $this$invoke.onRefreshProp = RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda_1($props, $state$delegate);
      $this$invoke.onElementClickProp = RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda_2($props, $state$delegate);
      return Unit_getInstance();
    };
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda_0($state$delegate, $props) {
    return function ($this$invoke) {
      $this$invoke.item = true;
      $this$invoke.xs = 12;
      $this$invoke.sm = 4;
      var tmp = get_CryptoACTable();
      $this$invoke.x4r(tmp, RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda_0($state$delegate, $props));
      return Unit_getInstance();
    };
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_7($props, $state$delegate, resultContinuation) {
    this.o5f_1 = $props;
    this.p5f_1 = $state$delegate;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_7).f1e = function ($this$launch, $completion) {
    var tmp = this.g1e($this$launch, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  };
  protoOf(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_7).si = function (p1, $completion) {
    return this.f1e((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_7).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 2;
            this.xh_1 = 1;
            suspendResult = getResources(this.o5f_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var fetchedResources = suspendResult;
            if (!(fetchedResources == null)) {
              invoke$lambda_18(this.p5f_1, invoke$lambda_17(this.p5f_1).s5c(VOID, VOID, fetchedResources));
            }

            return Unit_getInstance();
          case 2:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 2) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  protoOf(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_7).g1e = function ($this$launch, completion) {
    var i = new RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_7(this.o5f_1, this.p5f_1, completion);
    i.q5f_1 = $this$launch;
    return i;
  };
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_8($props, $state$delegate, resultContinuation) {
    var i = new RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_7($props, $state$delegate, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.f1e($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda_3($props, $state$delegate) {
    return function (it) {
      var tmp = MainScope();
      launch(tmp, VOID, VOID, RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_8($props, $state$delegate, null));
      return Unit_getInstance();
    };
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_9($it, $props, $state$delegate, resultContinuation) {
    this.z5f_1 = $it;
    this.a5g_1 = $props;
    this.b5g_1 = $state$delegate;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_9).f1e = function ($this$launch, $completion) {
    var tmp = this.g1e($this$launch, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  };
  protoOf(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_9).si = function (p1, $completion) {
    return this.f1e((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_9).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 2;
            this.d5g_1 = first_0(this.z5f_1);
            this.xh_1 = 1;
            suspendResult = getPermissions(this.a5g_1, VOID, this.d5g_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var permissions = suspendResult;
            var tmp_0;
            if (!(permissions == null)) {
              tmp_0 = !permissions.l();
            } else {
              tmp_0 = false;
            }

            if (tmp_0) {
              invoke$lambda_17(this.b5g_1).e5c_1.a(new CryptoACTableData(permissions, get_permissionColumns(), 'Permissions for resource ' + this.d5g_1));
              invoke$lambda_18(this.b5g_1, invoke$lambda_17(this.b5g_1).s5c());
            } else {
              this.a5g_1.handleDisplayAlertProp(OutcomeCode_CODE_008_PERMISSIONTUPLE_NOT_FOUND_getInstance(), CryptoACAlertSeverity_INFO_getInstance());
            }

            return Unit_getInstance();
          case 2:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 2) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  protoOf(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_9).g1e = function ($this$launch, completion) {
    var i = new RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_9(this.z5f_1, this.a5g_1, this.b5g_1, completion);
    i.c5g_1 = $this$launch;
    return i;
  };
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_10($it, $props, $state$delegate, resultContinuation) {
    var i = new RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_9($it, $props, $state$delegate, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.f1e($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda_4($props, $state$delegate) {
    return function (it) {
      var tmp = MainScope();
      launch(tmp, VOID, VOID, RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_10(it, $props, $state$delegate, null));
      return Unit_getInstance();
    };
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda_1($state$delegate, $props) {
    return function ($this$invoke) {
      $this$invoke.elementsProp = invoke$lambda_17($state$delegate).b5c_1;
      $this$invoke.tableColumnsProp = get_resourceColumns();
      $this$invoke.titleProp = 'Files';
      $this$invoke.onRefreshProp = RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda_3($props, $state$delegate);
      $this$invoke.onElementClickProp = RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda_4($props, $state$delegate);
      return Unit_getInstance();
    };
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda_1($state$delegate, $props) {
    return function ($this$invoke) {
      $this$invoke.item = true;
      $this$invoke.xs = 12;
      $this$invoke.sm = 4;
      var tmp = get_CryptoACTable();
      $this$invoke.x4r(tmp, RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda_1($state$delegate, $props));
      return Unit_getInstance();
    };
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda($state$delegate, $props) {
    return function ($this$invoke) {
      $this$invoke.container = true;
      $this$invoke.spacing = 1;
      var tmp = Grid;
      $this$invoke.x4r(tmp, RBACCryptoACDashboard$lambda$lambda$lambda$lambda($state$delegate, $props));
      var tmp_0 = Grid;
      $this$invoke.x4r(tmp_0, RBACCryptoACDashboard$lambda$lambda$lambda$lambda_0($state$delegate, $props));
      var tmp_1 = Grid;
      $this$invoke.x4r(tmp_1, RBACCryptoACDashboard$lambda$lambda$lambda$lambda_1($state$delegate, $props));
      return Unit_getInstance();
    };
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_11($props, $state$delegate, resultContinuation) {
    this.m5g_1 = $props;
    this.n5g_1 = $state$delegate;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_11).f1e = function ($this$launch, $completion) {
    var tmp = this.g1e($this$launch, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  };
  protoOf(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_11).si = function (p1, $completion) {
    return this.f1e((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_11).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 2;
            this.xh_1 = 1;
            suspendResult = getAssignments(this.m5g_1, VOID, VOID, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var fetchedAssignments = suspendResult;
            if (!(fetchedAssignments == null)) {
              invoke$lambda_18(this.n5g_1, invoke$lambda_17(this.n5g_1).s5c(VOID, VOID, VOID, fetchedAssignments));
            }

            return Unit_getInstance();
          case 2:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 2) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  protoOf(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_11).g1e = function ($this$launch, completion) {
    var i = new RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_11(this.m5g_1, this.n5g_1, completion);
    i.o5g_1 = $this$launch;
    return i;
  };
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_12($props, $state$delegate, resultContinuation) {
    var i = new RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_11($props, $state$delegate, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.f1e($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda_5($props, $state$delegate) {
    return function (it) {
      var tmp = MainScope();
      launch(tmp, VOID, VOID, RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_12($props, $state$delegate, null));
      return Unit_getInstance();
    };
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda_6($props) {
    return function (it) {
      $props.handleDisplayAlertProp(OutcomeCode_CODE_050_FUNCTIONALITY_UNDER_CONSTRUCTION_getInstance(), CryptoACAlertSeverity_INFO_getInstance());
      return Unit_getInstance();
    };
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda_2($state$delegate, $props) {
    return function ($this$invoke) {
      $this$invoke.elementsProp = invoke$lambda_17($state$delegate).c5c_1;
      $this$invoke.tableColumnsProp = get_assignmentColumns();
      $this$invoke.titleProp = 'User-Role Assignments';
      $this$invoke.onRefreshProp = RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda_5($props, $state$delegate);
      $this$invoke.onElementClickProp = RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda_6($props);
      return Unit_getInstance();
    };
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda_2($state$delegate, $props) {
    return function ($this$invoke) {
      $this$invoke.item = true;
      $this$invoke.xs = 12;
      $this$invoke.sm = 6;
      var tmp = get_CryptoACTable();
      $this$invoke.x4r(tmp, RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda_2($state$delegate, $props));
      return Unit_getInstance();
    };
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_13($props, $state$delegate, resultContinuation) {
    this.x5g_1 = $props;
    this.y5g_1 = $state$delegate;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_13).f1e = function ($this$launch, $completion) {
    var tmp = this.g1e($this$launch, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  };
  protoOf(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_13).si = function (p1, $completion) {
    return this.f1e((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_13).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 2;
            this.xh_1 = 1;
            suspendResult = getPermissions(this.x5g_1, VOID, VOID, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var fetchedPermissions = suspendResult;
            if (!(fetchedPermissions == null)) {
              invoke$lambda_18(this.y5g_1, invoke$lambda_17(this.y5g_1).s5c(VOID, VOID, VOID, VOID, fetchedPermissions));
            }

            return Unit_getInstance();
          case 2:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 2) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  protoOf(RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_13).g1e = function ($this$launch, completion) {
    var i = new RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_13(this.x5g_1, this.y5g_1, completion);
    i.z5g_1 = $this$launch;
    return i;
  };
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_14($props, $state$delegate, resultContinuation) {
    var i = new RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_13($props, $state$delegate, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.f1e($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda_7($props, $state$delegate) {
    return function (it) {
      var tmp = MainScope();
      launch(tmp, VOID, VOID, RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_14($props, $state$delegate, null));
      return Unit_getInstance();
    };
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda_8($props) {
    return function (it) {
      $props.handleDisplayAlertProp(OutcomeCode_CODE_050_FUNCTIONALITY_UNDER_CONSTRUCTION_getInstance(), CryptoACAlertSeverity_INFO_getInstance());
      return Unit_getInstance();
    };
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda_3($state$delegate, $props) {
    return function ($this$invoke) {
      $this$invoke.elementsProp = invoke$lambda_17($state$delegate).d5c_1;
      $this$invoke.tableColumnsProp = get_permissionColumns();
      $this$invoke.titleProp = 'Role-File Permissions';
      $this$invoke.onRefreshProp = RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda_7($props, $state$delegate);
      $this$invoke.onElementClickProp = RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda_8($props);
      return Unit_getInstance();
    };
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda_3($state$delegate, $props) {
    return function ($this$invoke) {
      $this$invoke.item = true;
      $this$invoke.xs = 12;
      $this$invoke.sm = 6;
      var tmp = get_CryptoACTable();
      $this$invoke.x4r(tmp, RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda_3($state$delegate, $props));
      return Unit_getInstance();
    };
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda_0($state$delegate, $props) {
    return function ($this$invoke) {
      $this$invoke.container = true;
      $this$invoke.spacing = 1;
      var tmp = Grid;
      $this$invoke.x4r(tmp, RBACCryptoACDashboard$lambda$lambda$lambda$lambda_2($state$delegate, $props));
      var tmp_0 = Grid;
      $this$invoke.x4r(tmp_0, RBACCryptoACDashboard$lambda$lambda$lambda$lambda_3($state$delegate, $props));
      return Unit_getInstance();
    };
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda_9($cryptoACTableData, $state$delegate) {
    return function (it) {
      invoke$lambda_17($state$delegate).e5c_1.ma($cryptoACTableData);
      invoke$lambda_18($state$delegate, invoke$lambda_17($state$delegate).s5c());
      return Unit_getInstance();
    };
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda_4($cryptoACTableData, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.elementsProp = $cryptoACTableData.w5b_1;
      $this$invoke.tableColumnsProp = $cryptoACTableData.x5b_1;
      $this$invoke.titleProp = $cryptoACTableData.y5b_1;
      $this$invoke.onCloseProp = RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda$lambda_9($cryptoACTableData, $state$delegate);
      return Unit_getInstance();
    };
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda$lambda_4($element, $cryptoACTableData, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.item = true;
      $this$invoke.xs = $element;
      $this$invoke.sm = $element;
      var tmp = get_CryptoACTable();
      $this$invoke.x4r(tmp, RBACCryptoACDashboard$lambda$lambda$lambda$lambda$lambda_4($cryptoACTableData, $state$delegate));
      return Unit_getInstance();
    };
  }
  function RBACCryptoACDashboard$lambda$lambda$lambda_1($element, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.container = true;
      $this$invoke.spacing = 1;
      var numberOfTables = getNumberOfItemsFromSpan($element);
      var inductionVariable = 0;
      var tmp;
      if (inductionVariable < numberOfTables) {
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var cryptoACTableData = invoke$lambda_17($state$delegate).e5c_1.j(i);
          var tmp_0 = Grid;
          $this$invoke.x4r(tmp_0, RBACCryptoACDashboard$lambda$lambda$lambda$lambda_4($element, cryptoACTableData, $state$delegate));
        }
         while (inductionVariable < numberOfTables);
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function RBACCryptoACDashboard$lambda$lambda($props, $state$delegate) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$12;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$11;
      // Inline function 'js.core.jso' call
      var tmp$ret$10;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.dashboard.RBACCryptoACDashboard.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '10px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.marginTop = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '10px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      tmp0_apply.marginBottom = tmp$ret$6;
      var tmp$ret$9;
      // Inline function 'csstype.px' call
      var tmp$ret$8;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp2_unsafeCast = '500px';
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = tmp2_unsafeCast;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      tmp0_apply.maxHeight = tmp$ret$9;
      tmp$ret$10 = tmp0_apply;
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = css(tmp$ret$11);
      tmp1_css.className = tmp$ret$12;
      var tmp;
      if ($props.userIsAdminProp) {
        var tmp_0 = Grid;
        $this$invoke.x4r(tmp_0, RBACCryptoACDashboard$lambda$lambda$lambda($state$delegate, $props));
        tmp = Unit_getInstance();
      }
      var tmp_1 = Grid;
      $this$invoke.x4r(tmp_1, RBACCryptoACDashboard$lambda$lambda$lambda_0($state$delegate, $props));
      var tmp2_forEach = getColumnsForTables(invoke$lambda_17($state$delegate).e5c_1.i());
      var tmp0_iterator = tmp2_forEach.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        // Inline function 'eu.fbk.st.cryptoac.view.content.dashboard.RBACCryptoACDashboard.<anonymous>.<anonymous>.<anonymous>' call
        var tmp_2 = Grid;
        $this$invoke.x4r(tmp_2, RBACCryptoACDashboard$lambda$lambda$lambda_1(element, $state$delegate));
      }
      return Unit_getInstance();
    };
  }
  var properties_initialized_RBACCryptoACDashboard_kt_34g8k1;
  function _init_properties_RBACCryptoACDashboard_kt__o5fp3n() {
    if (properties_initialized_RBACCryptoACDashboard_kt_34g8k1) {
    } else {
      properties_initialized_RBACCryptoACDashboard_kt_34g8k1 = true;
      var tmp = KotlinLogging_getInstance();
      logger_4 = tmp.b4r(logger$lambda_4);
      RBACCryptoACDashboard = FC(RBACCryptoACDashboard$lambda);
    }
  }
  function get_logger_3() {
    _init_properties_RBACDashboard_kt__7bshyo();
    return logger_5;
  }
  var logger_5;
  function getUsers(props, $completion) {
    var tmp = get_baseURL();
    API_getInstance();
    API_getInstance();
    var actualEndpoint = tmp + '/v1/CryptoAC/' + replace('users/{Core}/', '{Core}', props.coreTypeProp.toString());
    var tmp0 = getElements(props, actualEndpoint, OutcomeCode_CODE_004_USER_NOT_FOUND_getInstance(), RBACElementType_USER_getInstance(), $completion);
    return tmp0;
  }
  function getRoles(props, $completion) {
    var tmp = get_baseURL();
    API_getInstance();
    API_getInstance();
    var actualEndpoint = tmp + '/v1/CryptoAC/' + replace('roles/{Core}/', '{Core}', props.coreTypeProp.toString());
    var tmp0 = getElements(props, actualEndpoint, OutcomeCode_CODE_005_ROLE_NOT_FOUND_getInstance(), RBACElementType_ROLE_getInstance(), $completion);
    return tmp0;
  }
  function getResources(props, $completion) {
    var tmp = get_baseURL();
    API_getInstance();
    API_getInstance();
    var actualEndpoint = tmp + '/v1/CryptoAC/' + replace('resources/{Core}/', '{Core}', props.coreTypeProp.toString());
    var tmp0 = getElements(props, actualEndpoint, OutcomeCode_CODE_006_RESOURCE_NOT_FOUND_getInstance(), RBACElementType_RESOURCE_getInstance(), $completion);
    return tmp0;
  }
  function getAssignments(props, username, roleName, $completion) {
    username = username === VOID ? null : username;
    roleName = roleName === VOID ? null : roleName;
    var tmp = get_baseURL();
    API_getInstance();
    API_getInstance();
    var tmp_0 = tmp + '/v1/CryptoAC/' + replace('assignments/{Core}/', '{Core}', props.coreTypeProp.toString()) + '?';
    var tmp_1;
    if (!(username == null)) {
      SERVER_getInstance();
      tmp_1 = 'Username' + '=' + username;
    } else {
      tmp_1 = '';
    }
    var tmp_2 = tmp_0 + tmp_1;
    var tmp_3;
    if (!(roleName == null)) {
      SERVER_getInstance();
      tmp_3 = 'Role_Name' + '=' + roleName;
    } else {
      tmp_3 = '';
    }
    var actualEndpoint = tmp_2 + tmp_3;
    var tmp0 = getElements(props, actualEndpoint, OutcomeCode_CODE_007_ROLETUPLE_NOT_FOUND_getInstance(), RBACElementType_ROLETUPLE_getInstance(), $completion);
    return tmp0;
  }
  function getPermissions(props, roleName, resourceName, $completion) {
    roleName = roleName === VOID ? null : roleName;
    resourceName = resourceName === VOID ? null : resourceName;
    var tmp = get_baseURL();
    API_getInstance();
    API_getInstance();
    var tmp_0 = tmp + '/v1/CryptoAC/' + replace('permissions/{Core}/', '{Core}', props.coreTypeProp.toString()) + '?';
    var tmp_1;
    if (!(roleName == null)) {
      SERVER_getInstance();
      tmp_1 = 'Role_Name' + '=' + roleName;
    } else {
      tmp_1 = '';
    }
    var tmp_2 = tmp_0 + tmp_1;
    var tmp_3;
    if (!(resourceName == null)) {
      SERVER_getInstance();
      tmp_3 = 'Resource_Name' + '=' + resourceName;
    } else {
      tmp_3 = '';
    }
    var actualEndpoint = tmp_2 + tmp_3;
    var tmp0 = getElements(props, actualEndpoint, OutcomeCode_CODE_008_PERMISSIONTUPLE_NOT_FOUND_getInstance(), RBACElementType_PERMISSIONTUPLE_getInstance(), $completion);
    return tmp0;
  }
  function getElements(props, endpoint, errorCode, type, $completion) {
    var tmp = new $getElementsCOROUTINE$7(props, endpoint, errorCode, type, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  }
  function getColumnsForTables(numberOfTables) {
    _init_properties_RBACDashboard_kt__7bshyo();
    var tablesLeft = numberOfTables;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp$ret$0 = ArrayList_init_$Create$();
    var columnsForRow = tmp$ret$0;
    while (tablesLeft > 0) {
      var tmp0_subject = tablesLeft;
      var tmp;
      switch (tmp0_subject) {
        case 1:
          columnsForRow.a(12);
          ;
          tmp = 0;
          break;
        case 2:
          columnsForRow.a(6);
          ;
          tmp = 0;
          break;
        default:
          columnsForRow.a(4);
          ;
          tmp = tablesLeft - 3 | 0;
          break;
      }
      tablesLeft = tmp;
    }
    return columnsForRow;
  }
  function getNumberOfItemsFromSpan(span) {
    _init_properties_RBACDashboard_kt__7bshyo();
    var tmp0_subject = span;
    switch (tmp0_subject) {
      case 12:
        return 1;
      case 6:
        return 2;
      default:
        return 3;
    }
  }
  function logger$lambda_5() {
    _init_properties_RBACDashboard_kt__7bshyo();
    return Unit_getInstance();
  }
  function getElements$lambda($type) {
    return function () {
      return 'Getting the list of elements of type ' + $type;
    };
  }
  function getElements$lambda_0($endpoint) {
    return function () {
      return 'Sending get request to ' + $endpoint;
    };
  }
  function getElements$lambda_1() {
    _init_properties_RBACDashboard_kt__7bshyo();
    return 'CryptoAC is unreachable';
  }
  function getElements$lambda_2($e) {
    return function () {
      return 'Error during HTTP request (' + $e.message + '), see console log for details';
    };
  }
  function getElements$lambda_3($type) {
    return function () {
      return 'Got 0 elements of type ' + $type;
    };
  }
  function getElements$lambda_4($type, $outcomeCode) {
    return function () {
      return 'Error while getting elements of type ' + $type + ': ' + $outcomeCode;
    };
  }
  function $getElementsCOROUTINE$7(props, endpoint, errorCode, type, resultContinuation) {
    CoroutineImpl.call(this, resultContinuation);
    this.i5h_1 = props;
    this.j5h_1 = endpoint;
    this.k5h_1 = errorCode;
    this.l5h_1 = type;
  }
  protoOf($getElementsCOROUTINE$7).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 15;
            var tmp_0 = get_logger_3();
            tmp_0.h4r(getElements$lambda(this.l5h_1));
            var tmp_1 = get_logger_3();
            tmp_1.h4r(getElements$lambda_0(this.j5h_1));
            this.i5h_1.handleChangeBackdropIsOpenProp(true);
            this.xh_1 = 1;
            continue $sm;
          case 1:
            this.yh_1 = 4;
            this.yh_1 = 3;
            var tmp_2 = this;
            tmp_2.n5h_1 = this.i5h_1.httpClientProp;
            var tmp_3 = this;
            var tmp0_apply = new HttpRequestBuilder();
            url(tmp0_apply, this.j5h_1);
            ;
            tmp_3.o5h_1 = tmp0_apply;
            this.o5h_1.x3h_1 = Companion_getInstance().b21_1;
            this.xh_1 = 2;
            suspendResult = (new HttpStatement(this.o5h_1, this.n5h_1)).o4i(this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            this.m5h_1 = suspendResult;
            this.yh_1 = 15;
            this.xh_1 = 5;
            continue $sm;
          case 3:
            this.yh_1 = 4;
            var tmp_4 = this.ai_1;
            if (tmp_4 instanceof Error_0) {
              this.p5h_1 = this.ai_1;
              var tmp_5 = this;
              if (this.p5h_1.message === 'Fail to fetch') {
                var tmp_6 = get_logger_3();
                tmp_6.j4r(getElements$lambda_1);
                this.i5h_1.handleDisplayAlertProp(OutcomeCode_CODE_046_CRYPTOAC_CONNECTION_TIMEOUT_getInstance(), CryptoACAlertSeverity_ERROR_getInstance());
              } else {
                var tmp_7 = get_logger_3();
                tmp_7.j4r(getElements$lambda_2(this.p5h_1));
                console.log(this.p5h_1);
                this.i5h_1.handleDisplayAlertProp(OutcomeCode_CODE_049_UNEXPECTED_getInstance(), CryptoACAlertSeverity_ERROR_getInstance());
              }
              tmp_5.m5h_1 = null;
              this.yh_1 = 15;
              this.xh_1 = 5;
              continue $sm;
            } else {
              throw this.ai_1;
            }

            break;
          case 4:
            this.yh_1 = 15;
            this.q5h_1 = this.ai_1;
            this.i5h_1.handleChangeBackdropIsOpenProp(false);
            throw this.q5h_1;
          case 5:
            this.r5h_1 = this.m5h_1;
            this.i5h_1.handleChangeBackdropIsOpenProp(false);
            this.s5h_1 = this.r5h_1;
            if (!(this.s5h_1 == null)) {
              if (this.s5h_1.j3k().equals(Companion_getInstance_2().v21_1)) {
                this.v5h_1 = this.l5h_1;
                this.w5h_1 = this.v5h_1.n4_1;
                if (this.w5h_1 === 0) {
                  var tmp_8 = this;
                  tmp_8.y5h_1 = get_myJson();
                  this.xh_1 = 11;
                  suspendResult = bodyAsText(this.s5h_1, VOID, this);
                  if (suspendResult === get_COROUTINE_SUSPENDED()) {
                    return suspendResult;
                  }
                  continue $sm;
                } else {
                  if (this.w5h_1 === 1) {
                    var tmp_9 = this;
                    tmp_9.z5h_1 = get_myJson();
                    this.xh_1 = 10;
                    suspendResult = bodyAsText(this.s5h_1, VOID, this);
                    if (suspendResult === get_COROUTINE_SUSPENDED()) {
                      return suspendResult;
                    }
                    continue $sm;
                  } else {
                    if (this.w5h_1 === 2) {
                      var tmp_10 = this;
                      tmp_10.a5i_1 = get_myJson();
                      this.xh_1 = 9;
                      suspendResult = bodyAsText(this.s5h_1, VOID, this);
                      if (suspendResult === get_COROUTINE_SUSPENDED()) {
                        return suspendResult;
                      }
                      continue $sm;
                    } else {
                      if (this.w5h_1 === 3) {
                        var tmp_11 = this;
                        tmp_11.b5i_1 = get_myJson();
                        this.xh_1 = 8;
                        suspendResult = bodyAsText(this.s5h_1, VOID, this);
                        if (suspendResult === get_COROUTINE_SUSPENDED()) {
                          return suspendResult;
                        }
                        continue $sm;
                      } else {
                        if (this.w5h_1 === 4) {
                          var tmp_12 = this;
                          tmp_12.c5i_1 = get_myJson();
                          this.xh_1 = 7;
                          suspendResult = bodyAsText(this.s5h_1, VOID, this);
                          if (suspendResult === get_COROUTINE_SUSPENDED()) {
                            return suspendResult;
                          }
                          continue $sm;
                        } else {
                          var tmp_13 = this;
                          noWhenBranchMatchedException();
                        }
                      }
                    }
                  }
                }
              } else {
                this.xh_1 = 6;
                suspendResult = bodyAsText(this.s5h_1, VOID, this);
                if (suspendResult === get_COROUTINE_SUSPENDED()) {
                  return suspendResult;
                }
                continue $sm;
              }
            } else {
              var tmp_14 = this;
              tmp_14.t5h_1 = null;
              this.xh_1 = 14;
              continue $sm;
            }

            break;
          case 6:
            var text = suspendResult;
            var tmp30_decodeFromString = get_myJson();
            var tmp29_serializer = tmp30_decodeFromString.w2j();
            var tmp28_cast = serializer_0(tmp29_serializer, createKType(getKClass(OutcomeCode), arrayOf([]), false));
            var outcomeCode = tmp30_decodeFromString.v2j(isInterface(tmp28_cast, KSerializer) ? tmp28_cast : THROW_CCE(), text);
            var tmp_15 = this;
            var tmp_16;
            if (outcomeCode.equals(this.k5h_1)) {
              var tmp_17 = get_logger_3();
              tmp_17.h4r(getElements$lambda_3(this.l5h_1));
              tmp_16 = emptyList();
            } else {
              var tmp_18 = get_logger_3();
              tmp_18.i4r(getElements$lambda_4(this.l5h_1, outcomeCode));
              this.i5h_1.handleDisplayAlertProp(outcomeCode, CryptoACAlertSeverity_ERROR_getInstance());
              tmp_16 = null;
            }

            tmp_15.u5h_1 = tmp_16;
            this.xh_1 = 13;
            continue $sm;
          case 7:
            var tmp26_decodeFromString = suspendResult;
            var tmp24_serializer = this.c5i_1.w2j();
            var tmp23_cast = serializer_0(tmp24_serializer, createKType(getKClass(HashSet), arrayOf([createInvariantKTypeProjection(createKType(getKClass(PermissionTuple), arrayOf([]), false))]), false));
            var permissions = this.c5i_1.v2j(isInterface(tmp23_cast, KSerializer) ? tmp23_cast : THROW_CCE(), tmp26_decodeFromString);
            var tmp_19 = this;
            var tmp27_mapTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(permissions, 10));
            var tmp0_iterator = permissions.f();
            while (tmp0_iterator.g()) {
              var item = tmp0_iterator.h();
              tmp27_mapTo.a(item.vb());
            }

            tmp_19.x5h_1 = tmp27_mapTo;
            this.xh_1 = 12;
            continue $sm;
          case 8:
            var tmp21_decodeFromString = suspendResult;
            var tmp19_serializer = this.b5i_1.w2j();
            var tmp18_cast = serializer_0(tmp19_serializer, createKType(getKClass(HashSet), arrayOf([createInvariantKTypeProjection(createKType(getKClass(RoleTuple), arrayOf([]), false))]), false));
            var assignments = this.b5i_1.v2j(isInterface(tmp18_cast, KSerializer) ? tmp18_cast : THROW_CCE(), tmp21_decodeFromString);
            var tmp_20 = this;
            var tmp22_mapTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(assignments, 10));
            var tmp0_iterator_0 = assignments.f();
            while (tmp0_iterator_0.g()) {
              var item_0 = tmp0_iterator_0.h();
              tmp22_mapTo.a(item_0.vb());
            }

            tmp_20.x5h_1 = tmp22_mapTo;
            this.xh_1 = 12;
            continue $sm;
          case 9:
            var tmp16_decodeFromString = suspendResult;
            var tmp14_serializer = this.a5i_1.w2j();
            var tmp13_cast = serializer_0(tmp14_serializer, createKType(getKClass(HashSet), arrayOf([createInvariantKTypeProjection(createKType(getKClass(Resource), arrayOf([]), false))]), false));
            var resources = this.a5i_1.v2j(isInterface(tmp13_cast, KSerializer) ? tmp13_cast : THROW_CCE(), tmp16_decodeFromString);
            var tmp_21 = this;
            var tmp17_mapTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(resources, 10));
            var tmp0_iterator_1 = resources.f();
            while (tmp0_iterator_1.g()) {
              var item_1 = tmp0_iterator_1.h();
              tmp17_mapTo.a(item_1.vb());
            }

            tmp_21.x5h_1 = tmp17_mapTo;
            this.xh_1 = 12;
            continue $sm;
          case 10:
            var tmp11_decodeFromString = suspendResult;
            var tmp9_serializer = this.z5h_1.w2j();
            var tmp8_cast = serializer_0(tmp9_serializer, createKType(getKClass(HashSet), arrayOf([createInvariantKTypeProjection(createKType(getKClass(Role), arrayOf([]), false))]), false));
            var roles = this.z5h_1.v2j(isInterface(tmp8_cast, KSerializer) ? tmp8_cast : THROW_CCE(), tmp11_decodeFromString);
            var tmp_22 = this;
            var tmp12_mapTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(roles, 10));
            var tmp0_iterator_2 = roles.f();
            while (tmp0_iterator_2.g()) {
              var item_2 = tmp0_iterator_2.h();
              tmp12_mapTo.a(item_2.vb());
            }

            tmp_22.x5h_1 = tmp12_mapTo;
            this.xh_1 = 12;
            continue $sm;
          case 11:
            var tmp6_decodeFromString = suspendResult;
            var tmp4_serializer = this.y5h_1.w2j();
            var tmp3_cast = serializer_0(tmp4_serializer, createKType(getKClass(HashSet), arrayOf([createInvariantKTypeProjection(createKType(getKClass(User), arrayOf([]), false))]), false));
            var users = this.y5h_1.v2j(isInterface(tmp3_cast, KSerializer) ? tmp3_cast : THROW_CCE(), tmp6_decodeFromString);
            var tmp_23 = this;
            var tmp7_mapTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(users, 10));
            var tmp0_iterator_3 = users.f();
            while (tmp0_iterator_3.g()) {
              var item_3 = tmp0_iterator_3.h();
              tmp7_mapTo.a(item_3.vb());
            }

            tmp_23.x5h_1 = tmp7_mapTo;
            this.xh_1 = 12;
            continue $sm;
          case 12:
            this.u5h_1 = this.x5h_1;
            this.xh_1 = 13;
            continue $sm;
          case 13:
            this.t5h_1 = this.u5h_1;
            this.xh_1 = 14;
            continue $sm;
          case 14:
            return this.t5h_1;
          case 15:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 15) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  var properties_initialized_RBACDashboard_kt_7cjoc2;
  function _init_properties_RBACDashboard_kt__7bshyo() {
    if (properties_initialized_RBACDashboard_kt_7cjoc2) {
    } else {
      properties_initialized_RBACDashboard_kt_7cjoc2 = true;
      var tmp = KotlinLogging_getInstance();
      logger_5 = tmp.b4r(logger$lambda_5);
    }
  }
  function get_logger_4() {
    _init_properties_RBACMQTTDashboard_kt__xx9atw();
    return logger_6;
  }
  var logger_6;
  function get_RBACMQTTDashboard() {
    _init_properties_RBACMQTTDashboard_kt__xx9atw();
    return RBACMQTTDashboard;
  }
  var RBACMQTTDashboard;
  function MQTTDashboardState(usersState, rolesState, resourcesState, assignmentsState, permissionsState, openedTablesState, mqttMessagesState, wssState) {
    var tmp;
    if (usersState === VOID) {
      var tmp$ret$0;
      var tmp$ret$0_0;
      // Inline function 'kotlin.collections.listOf' call
      tmp$ret$0 = emptyList();
      tmp$ret$0_0 = Unit_getInstance();
      tmp = tmp$ret$0;
    } else {
      tmp = usersState;
    }
    usersState = tmp;
    var tmp_0;
    if (rolesState === VOID) {
      var tmp$ret$0_1;
      var tmp$ret$1;
      // Inline function 'kotlin.collections.listOf' call
      tmp$ret$0_1 = emptyList();
      tmp$ret$1 = Unit_getInstance();
      tmp_0 = tmp$ret$0_1;
    } else {
      tmp_0 = rolesState;
    }
    rolesState = tmp_0;
    var tmp_1;
    if (resourcesState === VOID) {
      var tmp$ret$0_2;
      var tmp$ret$2;
      // Inline function 'kotlin.collections.listOf' call
      tmp$ret$0_2 = emptyList();
      tmp$ret$2 = Unit_getInstance();
      tmp_1 = tmp$ret$0_2;
    } else {
      tmp_1 = resourcesState;
    }
    resourcesState = tmp_1;
    var tmp_2;
    if (assignmentsState === VOID) {
      var tmp$ret$0_3;
      var tmp$ret$3;
      // Inline function 'kotlin.collections.listOf' call
      tmp$ret$0_3 = emptyList();
      tmp$ret$3 = Unit_getInstance();
      tmp_2 = tmp$ret$0_3;
    } else {
      tmp_2 = assignmentsState;
    }
    assignmentsState = tmp_2;
    var tmp_3;
    if (permissionsState === VOID) {
      var tmp$ret$0_4;
      var tmp$ret$4;
      // Inline function 'kotlin.collections.listOf' call
      tmp$ret$0_4 = emptyList();
      tmp$ret$4 = Unit_getInstance();
      tmp_3 = tmp$ret$0_4;
    } else {
      tmp_3 = permissionsState;
    }
    permissionsState = tmp_3;
    var tmp_4;
    if (openedTablesState === VOID) {
      var tmp$ret$0_5;
      var tmp$ret$5;
      // Inline function 'kotlin.collections.mutableListOf' call
      tmp$ret$0_5 = ArrayList_init_$Create$();
      tmp$ret$5 = Unit_getInstance();
      tmp_4 = tmp$ret$0_5;
    } else {
      tmp_4 = openedTablesState;
    }
    openedTablesState = tmp_4;
    var tmp_5;
    if (mqttMessagesState === VOID) {
      var tmp$ret$0_6;
      var tmp$ret$6;
      // Inline function 'kotlin.collections.hashMapOf' call
      tmp$ret$0_6 = HashMap_init_$Create$();
      tmp$ret$6 = Unit_getInstance();
      tmp_5 = tmp$ret$0_6;
    } else {
      tmp_5 = mqttMessagesState;
    }
    mqttMessagesState = tmp_5;
    wssState = wssState === VOID ? null : wssState;
    this.d5i_1 = usersState;
    this.e5i_1 = rolesState;
    this.f5i_1 = resourcesState;
    this.g5i_1 = assignmentsState;
    this.h5i_1 = permissionsState;
    this.i5i_1 = openedTablesState;
    this.j5i_1 = mqttMessagesState;
    this.k5i_1 = wssState;
  }
  protoOf(MQTTDashboardState).f5c = function (_set____db54di) {
    this.d5i_1 = _set____db54di;
  };
  protoOf(MQTTDashboardState).g5c = function () {
    return this.d5i_1;
  };
  protoOf(MQTTDashboardState).h5c = function (_set____db54di) {
    this.e5i_1 = _set____db54di;
  };
  protoOf(MQTTDashboardState).i5c = function () {
    return this.e5i_1;
  };
  protoOf(MQTTDashboardState).j5c = function (_set____db54di) {
    this.f5i_1 = _set____db54di;
  };
  protoOf(MQTTDashboardState).k5c = function () {
    return this.f5i_1;
  };
  protoOf(MQTTDashboardState).l5c = function (_set____db54di) {
    this.g5i_1 = _set____db54di;
  };
  protoOf(MQTTDashboardState).m5c = function () {
    return this.g5i_1;
  };
  protoOf(MQTTDashboardState).n5c = function (_set____db54di) {
    this.h5i_1 = _set____db54di;
  };
  protoOf(MQTTDashboardState).o5c = function () {
    return this.h5i_1;
  };
  protoOf(MQTTDashboardState).p5c = function (_set____db54di) {
    this.i5i_1 = _set____db54di;
  };
  protoOf(MQTTDashboardState).q5c = function () {
    return this.i5i_1;
  };
  protoOf(MQTTDashboardState).l5i = function (usersState, rolesState, resourcesState, assignmentsState, permissionsState, openedTablesState, mqttMessagesState, wssState) {
    return new MQTTDashboardState(usersState, rolesState, resourcesState, assignmentsState, permissionsState, openedTablesState, mqttMessagesState, wssState);
  };
  protoOf(MQTTDashboardState).m5i = function (usersState, rolesState, resourcesState, assignmentsState, permissionsState, openedTablesState, mqttMessagesState, wssState, $super) {
    usersState = usersState === VOID ? this.d5i_1 : usersState;
    rolesState = rolesState === VOID ? this.e5i_1 : rolesState;
    resourcesState = resourcesState === VOID ? this.f5i_1 : resourcesState;
    assignmentsState = assignmentsState === VOID ? this.g5i_1 : assignmentsState;
    permissionsState = permissionsState === VOID ? this.h5i_1 : permissionsState;
    openedTablesState = openedTablesState === VOID ? this.i5i_1 : openedTablesState;
    mqttMessagesState = mqttMessagesState === VOID ? this.j5i_1 : mqttMessagesState;
    wssState = wssState === VOID ? this.k5i_1 : wssState;
    return $super === VOID ? this.l5i(usersState, rolesState, resourcesState, assignmentsState, permissionsState, openedTablesState, mqttMessagesState, wssState) : $super.l5i.call(this, usersState, rolesState, resourcesState, assignmentsState, permissionsState, openedTablesState, mqttMessagesState, wssState);
  };
  protoOf(MQTTDashboardState).toString = function () {
    return 'MQTTDashboardState(usersState=' + this.d5i_1 + ', rolesState=' + this.e5i_1 + ', resourcesState=' + this.f5i_1 + ', assignmentsState=' + this.g5i_1 + ', permissionsState=' + this.h5i_1 + ', openedTablesState=' + this.i5i_1 + ', mqttMessagesState=' + this.j5i_1 + ', wssState=' + this.k5i_1 + ')';
  };
  protoOf(MQTTDashboardState).hashCode = function () {
    var result = hashCode(this.d5i_1);
    result = imul(result, 31) + hashCode(this.e5i_1) | 0;
    result = imul(result, 31) + hashCode(this.f5i_1) | 0;
    result = imul(result, 31) + hashCode(this.g5i_1) | 0;
    result = imul(result, 31) + hashCode(this.h5i_1) | 0;
    result = imul(result, 31) + hashCode(this.i5i_1) | 0;
    result = imul(result, 31) + this.j5i_1.hashCode() | 0;
    result = imul(result, 31) + (this.k5i_1 == null ? 0 : hashCode(this.k5i_1)) | 0;
    return result;
  };
  protoOf(MQTTDashboardState).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof MQTTDashboardState))
      return false;
    var tmp0_other_with_cast = other instanceof MQTTDashboardState ? other : THROW_CCE();
    if (!equals(this.d5i_1, tmp0_other_with_cast.d5i_1))
      return false;
    if (!equals(this.e5i_1, tmp0_other_with_cast.e5i_1))
      return false;
    if (!equals(this.f5i_1, tmp0_other_with_cast.f5i_1))
      return false;
    if (!equals(this.g5i_1, tmp0_other_with_cast.g5i_1))
      return false;
    if (!equals(this.h5i_1, tmp0_other_with_cast.h5i_1))
      return false;
    if (!equals(this.i5i_1, tmp0_other_with_cast.i5i_1))
      return false;
    if (!this.j5i_1.equals(tmp0_other_with_cast.j5i_1))
      return false;
    if (!equals(this.k5i_1, tmp0_other_with_cast.k5i_1))
      return false;
    return true;
  };
  defineProp(protoOf(MQTTDashboardState), 'usersState', function () {
    return this.g5c();
  }, function (value) {
    this.f5c(value);
  });
  defineProp(protoOf(MQTTDashboardState), 'rolesState', function () {
    return this.i5c();
  }, function (value) {
    this.h5c(value);
  });
  defineProp(protoOf(MQTTDashboardState), 'resourcesState', function () {
    return this.k5c();
  }, function (value) {
    this.j5c(value);
  });
  defineProp(protoOf(MQTTDashboardState), 'assignmentsState', function () {
    return this.m5c();
  }, function (value) {
    this.l5c(value);
  });
  defineProp(protoOf(MQTTDashboardState), 'permissionsState', function () {
    return this.o5c();
  }, function (value) {
    this.n5c(value);
  });
  defineProp(protoOf(MQTTDashboardState), 'openedTablesState', function () {
    return this.q5c();
  }, function (value) {
    this.p5c(value);
  });
  function logger$lambda_6() {
    _init_properties_RBACMQTTDashboard_kt__xx9atw();
    return Unit_getInstance();
  }
  function RBACMQTTDashboard$lambda($this$FC, props) {
    _init_properties_RBACMQTTDashboard_kt__xx9atw();
    var state$delegate = useState(new MQTTDashboardState());
    var tmp = MainScope();
    launch(tmp, VOID, VOID, RBACMQTTDashboard$lambda$slambda_0(props, state$delegate, null));
    var tmp$ret$3;
    // Inline function 'react.dom.html.ReactHTML.div' call
    var tmp0__get_div__2k2o9m = ReactHTML_getInstance();
    var tmp$ret$2;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = 'div';
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    var tmp_0 = tmp$ret$3;
    $this$FC.x4r(tmp_0, RBACMQTTDashboard$lambda$lambda(props, state$delegate));
    return Unit_getInstance();
  }
  function invoke$lambda_19($state$delegate) {
    _init_properties_RBACMQTTDashboard_kt__xx9atw();
    var tmp$ret$2;
    // Inline function 'react.StateInstance.getValue' call
    var tmp1_getValue = getLocalDelegateReference('state', KMutableProperty0, true, function () {
      return THROW_ISE();
    });
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = $state$delegate;
    var tmp0_unsafeCast = tmp$ret$0[0];
    tmp$ret$1 = tmp0_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  }
  function invoke$lambda_20($state$delegate, value) {
    _init_properties_RBACMQTTDashboard_kt__xx9atw();
    var tmp1_setValue = getLocalDelegateReference('state', KMutableProperty0, true, function () {
      return THROW_ISE();
    });
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = $state$delegate;
    var tmp0_unsafeCast = tmp$ret$0[1];
    tmp$ret$1 = tmp0_unsafeCast;
    return tmp$ret$1(value);
  }
  function RBACMQTTDashboard$lambda$slambda$lambda($path) {
    return function ($this$webSocketSession) {
      url_0($this$webSocketSession, 'wss', get_host($this$webSocketSession), get_port($this$webSocketSession), $path);
      return Unit_getInstance();
    };
  }
  function RBACMQTTDashboard$lambda$slambda$lambda_0($message, $topic) {
    return function () {
      return 'RECEIVED MESSAGE ' + $message + ' in topic ' + $topic;
    };
  }
  function RBACMQTTDashboard$lambda$slambda$lambda_1() {
    return 'Web socket was closed';
  }
  function RBACMQTTDashboard$lambda$slambda($props, $state$delegate, resultContinuation) {
    this.v5i_1 = $props;
    this.w5i_1 = $state$delegate;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(RBACMQTTDashboard$lambda$slambda).f1e = function ($this$launch, $completion) {
    var tmp = this.g1e($this$launch, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  };
  protoOf(RBACMQTTDashboard$lambda$slambda).si = function (p1, $completion) {
    return this.f1e((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(RBACMQTTDashboard$lambda$slambda).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 18;
            var tmp_0 = this;
            tmp_0.y5i_1 = emptyList();
            var tmp_1 = this;
            tmp_1.z5i_1 = emptyList();
            var tmp_2 = this;
            tmp_2.a5j_1 = emptyList();
            var tmp_3 = this;
            tmp_3.b5j_1 = emptyList();
            this.xh_1 = 1;
            suspendResult = getAssignments(this.v5i_1, VOID, VOID, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.c5j_1 = suspendResult;
            if (!(this.c5j_1 == null)) {
              this.xh_1 = 2;
              suspendResult = getPermissions(this.v5i_1, VOID, VOID, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.xh_1 = 9;
              continue $sm;
            }

            break;
          case 2:
            this.b5j_1 = suspendResult;
            if (!(this.b5j_1 == null) ? this.v5i_1.userIsAdminProp : false) {
              this.xh_1 = 3;
              suspendResult = getUsers(this.v5i_1, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.xh_1 = 8;
              continue $sm;
            }

            break;
          case 3:
            this.y5i_1 = suspendResult;
            if (!(this.y5i_1 == null)) {
              this.xh_1 = 4;
              suspendResult = getRoles(this.v5i_1, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.xh_1 = 7;
              continue $sm;
            }

            break;
          case 4:
            this.z5i_1 = suspendResult;
            if (!(this.z5i_1 == null)) {
              this.xh_1 = 5;
              suspendResult = getResources(this.v5i_1, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              this.xh_1 = 6;
              continue $sm;
            }

            break;
          case 5:
            this.a5j_1 = suspendResult;
            this.xh_1 = 6;
            continue $sm;
          case 6:
            this.xh_1 = 7;
            continue $sm;
          case 7:
            this.xh_1 = 8;
            continue $sm;
          case 8:
            this.xh_1 = 9;
            continue $sm;
          case 9:
            var tmp_4 = this;
            API_getInstance();
            API_getInstance();
            tmp_4.d5j_1 = '/v1/CryptoAC/' + replace('resources/{Core}/', '{Core}', this.v5i_1.coreTypeProp.toString());
            this.xh_1 = 10;
            var tmp_5 = this.v5i_1.httpClientProp;
            var tmp_6 = Companion_getInstance().b21_1;
            var tmp_7 = window.location.hostname;
            var tmp_8 = toInt(window.location.port);
            suspendResult = webSocketSession(tmp_5, tmp_6, tmp_7, tmp_8, this.d5j_1, RBACMQTTDashboard$lambda$slambda$lambda(this.d5j_1), this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 10:
            this.e5j_1 = suspendResult;
            if (this.v5i_1.userIsAdminProp ? !(this.y5i_1 == null) : false) {
              invoke$lambda_19(this.w5i_1).d5i_1 = this.y5i_1;
            }

            if (this.v5i_1.userIsAdminProp ? !(this.z5i_1 == null) : false) {
              invoke$lambda_19(this.w5i_1).e5i_1 = this.z5i_1;
            }

            if (this.v5i_1.userIsAdminProp ? !(this.a5j_1 == null) : false) {
              invoke$lambda_19(this.w5i_1).f5i_1 = this.a5j_1;
            }

            if (!(this.c5j_1 == null)) {
              invoke$lambda_19(this.w5i_1).g5i_1 = this.c5j_1;
            }

            if (!(this.b5j_1 == null)) {
              invoke$lambda_19(this.w5i_1).h5i_1 = this.b5j_1;
            }

            invoke$lambda_19(this.w5i_1).k5i_1 = this.e5j_1;
            var tmp0_forEach = this.v5i_1.topicsProp;
            var tmp0_iterator = tmp0_forEach.f();
            while (tmp0_iterator.g()) {
              var element = tmp0_iterator.h();
              var tmp0_set = invoke$lambda_19(this.w5i_1).j5i_1;
              var tmp1_set = ArrayList_init_$Create$();
              tmp0_set.y2(element, tmp1_set);
            }

            this.xh_1 = 11;
            continue $sm;
          case 11:
            this.yh_1 = 16;
            this.yh_1 = 15;
            this.xh_1 = 12;
            continue $sm;
          case 12:
            if (false) {
              this.xh_1 = 14;
              continue $sm;
            }

            this.xh_1 = 13;
            suspendResult = ensureNotNull(invoke$lambda_19(this.w5i_1).k5i_1).k28().mx(this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 13:
            var ARGUMENT = suspendResult instanceof Text ? suspendResult : null;
            var ARGUMENT_0 = ensureNotNull(ARGUMENT);
            var serializedMQTTMessage = readText(ARGUMENT_0);
            var tmp3_decodeFromString = get_myJson();
            var tmp2_serializer = tmp3_decodeFromString.w2j();
            var tmp1_cast = serializer_0(tmp2_serializer, createKType(getKClass(MQTTMessage), arrayOf([]), false));
            var mqttMessage = tmp3_decodeFromString.v2j(isInterface(tmp1_cast, KSerializer) ? tmp1_cast : THROW_CCE(), serializedMQTTMessage);
            var message = mqttMessage.x4w_1;
            var topic = mqttMessage.y4w_1;
            var tmp_9 = get_logger_4();
            tmp_9.i4r(RBACMQTTDashboard$lambda$slambda$lambda_0(message, topic));
            var tmp4_getOrPut = invoke$lambda_19(this.w5i_1).j5i_1;
            var value = tmp4_getOrPut.y1(topic);
            var tmp_10;
            if (value == null) {
              var answer = ArrayList_init_$Create$();
              tmp4_getOrPut.y2(topic, answer);
              tmp_10 = answer;
            } else {
              tmp_10 = value;
            }

            tmp_10.a(message);
            ;
            this.xh_1 = 12;
            continue $sm;
          case 14:
            this.f5j_1 = Unit_getInstance();
            this.yh_1 = 18;
            this.xh_1 = 17;
            continue $sm;
          case 15:
            this.yh_1 = 16;
            var tmp_11 = this.ai_1;
            if (tmp_11 instanceof NullPointerException) {
              var e = this.ai_1;
              var tmp_12 = this;
              var tmp_13 = get_logger_4();
              tmp_13.i4r(RBACMQTTDashboard$lambda$slambda$lambda_1);
              tmp_12.f5j_1 = Unit_getInstance();
              this.yh_1 = 18;
              this.xh_1 = 17;
              continue $sm;
            } else {
              throw this.ai_1;
            }

            break;
          case 16:
            this.yh_1 = 18;
            var t = this.ai_1;
            invoke$lambda_20(this.w5i_1, invoke$lambda_19(this.w5i_1).m5i());
            ;
            throw t;
          case 17:
            invoke$lambda_20(this.w5i_1, invoke$lambda_19(this.w5i_1).m5i());
            ;
            return Unit_getInstance();
          case 18:
            throw this.ai_1;
        }
      } catch ($p) {
        var e_0 = $p;
        if (this.yh_1 === 18) {
          throw e_0;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e_0;
        }
      }
     while (true);
  };
  protoOf(RBACMQTTDashboard$lambda$slambda).g1e = function ($this$launch, completion) {
    var i = new RBACMQTTDashboard$lambda$slambda(this.v5i_1, this.w5i_1, completion);
    i.x5i_1 = $this$launch;
    return i;
  };
  function RBACMQTTDashboard$lambda$slambda_0($props, $state$delegate, resultContinuation) {
    var i = new RBACMQTTDashboard$lambda$slambda($props, $state$delegate, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.f1e($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda($props, $state$delegate, resultContinuation) {
    this.o5j_1 = $props;
    this.p5j_1 = $state$delegate;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda).f1e = function ($this$launch, $completion) {
    var tmp = this.g1e($this$launch, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  };
  protoOf(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda).si = function (p1, $completion) {
    return this.f1e((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 2;
            this.xh_1 = 1;
            suspendResult = getUsers(this.o5j_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var fetchedUsers = suspendResult;
            if (!(fetchedUsers == null)) {
              invoke$lambda_20(this.p5j_1, invoke$lambda_19(this.p5j_1).m5i(fetchedUsers));
            }

            return Unit_getInstance();
          case 2:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 2) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  protoOf(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda).g1e = function ($this$launch, completion) {
    var i = new RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda(this.o5j_1, this.p5j_1, completion);
    i.q5j_1 = $this$launch;
    return i;
  };
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_0($props, $state$delegate, resultContinuation) {
    var i = new RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda($props, $state$delegate, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.f1e($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda($props, $state$delegate) {
    return function (it) {
      var tmp = MainScope();
      launch(tmp, VOID, VOID, RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_0($props, $state$delegate, null));
      return Unit_getInstance();
    };
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_1($it, $props, $state$delegate, resultContinuation) {
    this.z5j_1 = $it;
    this.a5k_1 = $props;
    this.b5k_1 = $state$delegate;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_1).f1e = function ($this$launch, $completion) {
    var tmp = this.g1e($this$launch, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  };
  protoOf(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_1).si = function (p1, $completion) {
    return this.f1e((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_1).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 2;
            this.d5k_1 = first_0(this.z5j_1);
            this.xh_1 = 1;
            suspendResult = getAssignments(this.a5k_1, this.d5k_1, VOID, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var result = suspendResult;
            var tmp_0;
            if (!(result == null)) {
              tmp_0 = !result.l();
            } else {
              tmp_0 = false;
            }

            if (tmp_0) {
              invoke$lambda_19(this.b5k_1).i5i_1.a(new CryptoACTableData(result, get_assignmentColumns(), 'Assignments of user ' + this.d5k_1));
              invoke$lambda_20(this.b5k_1, invoke$lambda_19(this.b5k_1).m5i());
            } else {
              this.a5k_1.handleDisplayAlertProp(OutcomeCode_CODE_007_ROLETUPLE_NOT_FOUND_getInstance(), CryptoACAlertSeverity_INFO_getInstance());
            }

            return Unit_getInstance();
          case 2:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 2) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  protoOf(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_1).g1e = function ($this$launch, completion) {
    var i = new RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_1(this.z5j_1, this.a5k_1, this.b5k_1, completion);
    i.c5k_1 = $this$launch;
    return i;
  };
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_2($it, $props, $state$delegate, resultContinuation) {
    var i = new RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_1($it, $props, $state$delegate, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.f1e($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda_0($props, $state$delegate) {
    return function (it) {
      var tmp = MainScope();
      launch(tmp, VOID, VOID, RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_2(it, $props, $state$delegate, null));
      return Unit_getInstance();
    };
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda($state$delegate, $props) {
    return function ($this$invoke) {
      $this$invoke.elementsProp = invoke$lambda_19($state$delegate).d5i_1;
      $this$invoke.tableColumnsProp = get_userColumns();
      $this$invoke.titleProp = 'Users';
      $this$invoke.onRefreshProp = RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda($props, $state$delegate);
      $this$invoke.onElementClickProp = RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda_0($props, $state$delegate);
      return Unit_getInstance();
    };
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda($state$delegate, $props) {
    return function ($this$invoke) {
      $this$invoke.item = true;
      $this$invoke.xs = 12;
      $this$invoke.sm = 4;
      var tmp = get_CryptoACTable();
      $this$invoke.x4r(tmp, RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda($state$delegate, $props));
      return Unit_getInstance();
    };
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_3($props, $state$delegate, resultContinuation) {
    this.m5k_1 = $props;
    this.n5k_1 = $state$delegate;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_3).f1e = function ($this$launch, $completion) {
    var tmp = this.g1e($this$launch, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  };
  protoOf(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_3).si = function (p1, $completion) {
    return this.f1e((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_3).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 2;
            this.xh_1 = 1;
            suspendResult = getRoles(this.m5k_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var fetchedRoles = suspendResult;
            if (!(fetchedRoles == null)) {
              invoke$lambda_20(this.n5k_1, invoke$lambda_19(this.n5k_1).m5i(VOID, fetchedRoles));
            }

            return Unit_getInstance();
          case 2:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 2) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  protoOf(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_3).g1e = function ($this$launch, completion) {
    var i = new RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_3(this.m5k_1, this.n5k_1, completion);
    i.o5k_1 = $this$launch;
    return i;
  };
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_4($props, $state$delegate, resultContinuation) {
    var i = new RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_3($props, $state$delegate, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.f1e($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda_1($props, $state$delegate) {
    return function (it) {
      var tmp = MainScope();
      launch(tmp, VOID, VOID, RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_4($props, $state$delegate, null));
      return Unit_getInstance();
    };
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_5($it, $props, $state$delegate, resultContinuation) {
    this.x5k_1 = $it;
    this.y5k_1 = $props;
    this.z5k_1 = $state$delegate;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_5).f1e = function ($this$launch, $completion) {
    var tmp = this.g1e($this$launch, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  };
  protoOf(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_5).si = function (p1, $completion) {
    return this.f1e((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_5).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 3;
            this.b5l_1 = first_0(this.x5k_1);
            this.xh_1 = 1;
            suspendResult = getAssignments(this.y5k_1, VOID, this.b5l_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            this.c5l_1 = suspendResult;
            this.xh_1 = 2;
            suspendResult = getPermissions(this.y5k_1, this.b5l_1, VOID, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 2:
            var permissions = suspendResult;
            var tmp_0;
            if (!(this.c5l_1 == null)) {
              tmp_0 = !this.c5l_1.l();
            } else {
              tmp_0 = false;
            }

            if (tmp_0) {
              invoke$lambda_19(this.z5k_1).i5i_1.a(new CryptoACTableData(this.c5l_1, get_assignmentColumns(), 'Assignments of role ' + this.b5l_1));
              invoke$lambda_20(this.z5k_1, invoke$lambda_19(this.z5k_1).m5i());
            } else {
              this.y5k_1.handleDisplayAlertProp(OutcomeCode_CODE_007_ROLETUPLE_NOT_FOUND_getInstance(), CryptoACAlertSeverity_INFO_getInstance());
            }

            var tmp_1;
            if (!(permissions == null)) {
              tmp_1 = !permissions.l();
            } else {
              tmp_1 = false;
            }

            if (tmp_1) {
              invoke$lambda_19(this.z5k_1).i5i_1.a(new CryptoACTableData(permissions, get_permissionColumns(), 'Permissions of role ' + this.b5l_1));
              invoke$lambda_20(this.z5k_1, invoke$lambda_19(this.z5k_1).m5i());
            } else {
              this.y5k_1.handleDisplayAlertProp(OutcomeCode_CODE_008_PERMISSIONTUPLE_NOT_FOUND_getInstance(), CryptoACAlertSeverity_INFO_getInstance());
            }

            return Unit_getInstance();
          case 3:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 3) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  protoOf(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_5).g1e = function ($this$launch, completion) {
    var i = new RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_5(this.x5k_1, this.y5k_1, this.z5k_1, completion);
    i.a5l_1 = $this$launch;
    return i;
  };
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_6($it, $props, $state$delegate, resultContinuation) {
    var i = new RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_5($it, $props, $state$delegate, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.f1e($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda_2($props, $state$delegate) {
    return function (it) {
      var tmp = MainScope();
      launch(tmp, VOID, VOID, RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_6(it, $props, $state$delegate, null));
      return Unit_getInstance();
    };
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda_0($state$delegate, $props) {
    return function ($this$invoke) {
      $this$invoke.elementsProp = invoke$lambda_19($state$delegate).e5i_1;
      $this$invoke.tableColumnsProp = get_roleColumns();
      $this$invoke.titleProp = 'Roles';
      $this$invoke.onRefreshProp = RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda_1($props, $state$delegate);
      $this$invoke.onElementClickProp = RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda_2($props, $state$delegate);
      return Unit_getInstance();
    };
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda_0($state$delegate, $props) {
    return function ($this$invoke) {
      $this$invoke.item = true;
      $this$invoke.xs = 12;
      $this$invoke.sm = 4;
      var tmp = get_CryptoACTable();
      $this$invoke.x4r(tmp, RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda_0($state$delegate, $props));
      return Unit_getInstance();
    };
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_7($props, $state$delegate, resultContinuation) {
    this.l5l_1 = $props;
    this.m5l_1 = $state$delegate;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_7).f1e = function ($this$launch, $completion) {
    var tmp = this.g1e($this$launch, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  };
  protoOf(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_7).si = function (p1, $completion) {
    return this.f1e((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_7).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 2;
            this.xh_1 = 1;
            suspendResult = getResources(this.l5l_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var fetchedResources = suspendResult;
            if (!(fetchedResources == null)) {
              invoke$lambda_20(this.m5l_1, invoke$lambda_19(this.m5l_1).m5i(VOID, VOID, fetchedResources));
            }

            return Unit_getInstance();
          case 2:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 2) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  protoOf(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_7).g1e = function ($this$launch, completion) {
    var i = new RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_7(this.l5l_1, this.m5l_1, completion);
    i.n5l_1 = $this$launch;
    return i;
  };
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_8($props, $state$delegate, resultContinuation) {
    var i = new RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_7($props, $state$delegate, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.f1e($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda_3($props, $state$delegate) {
    return function (it) {
      var tmp = MainScope();
      launch(tmp, VOID, VOID, RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_8($props, $state$delegate, null));
      return Unit_getInstance();
    };
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_9($it, $props, $state$delegate, resultContinuation) {
    this.w5l_1 = $it;
    this.x5l_1 = $props;
    this.y5l_1 = $state$delegate;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_9).f1e = function ($this$launch, $completion) {
    var tmp = this.g1e($this$launch, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  };
  protoOf(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_9).si = function (p1, $completion) {
    return this.f1e((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_9).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 2;
            this.a5m_1 = first_0(this.w5l_1);
            this.xh_1 = 1;
            suspendResult = getPermissions(this.x5l_1, VOID, this.a5m_1, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var permissions = suspendResult;
            var tmp_0;
            if (!(permissions == null)) {
              tmp_0 = !permissions.l();
            } else {
              tmp_0 = false;
            }

            if (tmp_0) {
              invoke$lambda_19(this.y5l_1).i5i_1.a(new CryptoACTableData(permissions, get_permissionColumns(), 'Permissions for resource ' + this.a5m_1));
              invoke$lambda_20(this.y5l_1, invoke$lambda_19(this.y5l_1).m5i());
            } else {
              this.x5l_1.handleDisplayAlertProp(OutcomeCode_CODE_008_PERMISSIONTUPLE_NOT_FOUND_getInstance(), CryptoACAlertSeverity_INFO_getInstance());
            }

            return Unit_getInstance();
          case 2:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 2) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  protoOf(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_9).g1e = function ($this$launch, completion) {
    var i = new RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_9(this.w5l_1, this.x5l_1, this.y5l_1, completion);
    i.z5l_1 = $this$launch;
    return i;
  };
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_10($it, $props, $state$delegate, resultContinuation) {
    var i = new RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_9($it, $props, $state$delegate, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.f1e($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda_4($props, $state$delegate) {
    return function (it) {
      var tmp = MainScope();
      launch(tmp, VOID, VOID, RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_10(it, $props, $state$delegate, null));
      return Unit_getInstance();
    };
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda_1($state$delegate, $props) {
    return function ($this$invoke) {
      $this$invoke.elementsProp = invoke$lambda_19($state$delegate).f5i_1;
      $this$invoke.tableColumnsProp = get_resourceColumns();
      $this$invoke.titleProp = 'Topics';
      $this$invoke.onRefreshProp = RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda_3($props, $state$delegate);
      $this$invoke.onElementClickProp = RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda_4($props, $state$delegate);
      return Unit_getInstance();
    };
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda_1($state$delegate, $props) {
    return function ($this$invoke) {
      $this$invoke.item = true;
      $this$invoke.xs = 12;
      $this$invoke.sm = 4;
      var tmp = get_CryptoACTable();
      $this$invoke.x4r(tmp, RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda_1($state$delegate, $props));
      return Unit_getInstance();
    };
  }
  function RBACMQTTDashboard$lambda$lambda$lambda($state$delegate, $props) {
    return function ($this$invoke) {
      $this$invoke.container = true;
      $this$invoke.spacing = 1;
      var tmp = Grid;
      $this$invoke.x4r(tmp, RBACMQTTDashboard$lambda$lambda$lambda$lambda($state$delegate, $props));
      var tmp_0 = Grid;
      $this$invoke.x4r(tmp_0, RBACMQTTDashboard$lambda$lambda$lambda$lambda_0($state$delegate, $props));
      var tmp_1 = Grid;
      $this$invoke.x4r(tmp_1, RBACMQTTDashboard$lambda$lambda$lambda$lambda_1($state$delegate, $props));
      return Unit_getInstance();
    };
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_11($props, $state$delegate, resultContinuation) {
    this.j5m_1 = $props;
    this.k5m_1 = $state$delegate;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_11).f1e = function ($this$launch, $completion) {
    var tmp = this.g1e($this$launch, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  };
  protoOf(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_11).si = function (p1, $completion) {
    return this.f1e((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_11).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 2;
            this.xh_1 = 1;
            suspendResult = getAssignments(this.j5m_1, VOID, VOID, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var fetchedAssignments = suspendResult;
            if (!(fetchedAssignments == null)) {
              invoke$lambda_20(this.k5m_1, invoke$lambda_19(this.k5m_1).m5i(VOID, VOID, VOID, fetchedAssignments));
            }

            return Unit_getInstance();
          case 2:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 2) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  protoOf(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_11).g1e = function ($this$launch, completion) {
    var i = new RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_11(this.j5m_1, this.k5m_1, completion);
    i.l5m_1 = $this$launch;
    return i;
  };
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_12($props, $state$delegate, resultContinuation) {
    var i = new RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_11($props, $state$delegate, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.f1e($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda_5($props, $state$delegate) {
    return function (it) {
      var tmp = MainScope();
      launch(tmp, VOID, VOID, RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_12($props, $state$delegate, null));
      return Unit_getInstance();
    };
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda_6($props) {
    return function (it) {
      $props.handleDisplayAlertProp(OutcomeCode_CODE_050_FUNCTIONALITY_UNDER_CONSTRUCTION_getInstance(), CryptoACAlertSeverity_INFO_getInstance());
      return Unit_getInstance();
    };
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda_2($state$delegate, $props) {
    return function ($this$invoke) {
      $this$invoke.elementsProp = invoke$lambda_19($state$delegate).g5i_1;
      $this$invoke.tableColumnsProp = get_assignmentColumns();
      $this$invoke.titleProp = 'User-Role Assignments';
      $this$invoke.onRefreshProp = RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda_5($props, $state$delegate);
      $this$invoke.onElementClickProp = RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda_6($props);
      return Unit_getInstance();
    };
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda_2($state$delegate, $props) {
    return function ($this$invoke) {
      $this$invoke.item = true;
      $this$invoke.xs = 12;
      $this$invoke.sm = 6;
      var tmp = get_CryptoACTable();
      $this$invoke.x4r(tmp, RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda_2($state$delegate, $props));
      return Unit_getInstance();
    };
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_13($props, $state$delegate, resultContinuation) {
    this.u5m_1 = $props;
    this.v5m_1 = $state$delegate;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_13).f1e = function ($this$launch, $completion) {
    var tmp = this.g1e($this$launch, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  };
  protoOf(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_13).si = function (p1, $completion) {
    return this.f1e((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_13).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 2;
            this.xh_1 = 1;
            suspendResult = getPermissions(this.u5m_1, VOID, VOID, this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var fetchedPermissions = suspendResult;
            if (!(fetchedPermissions == null)) {
              invoke$lambda_20(this.v5m_1, invoke$lambda_19(this.v5m_1).m5i(VOID, VOID, VOID, VOID, fetchedPermissions));
            }

            return Unit_getInstance();
          case 2:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 2) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  protoOf(RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_13).g1e = function ($this$launch, completion) {
    var i = new RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_13(this.u5m_1, this.v5m_1, completion);
    i.w5m_1 = $this$launch;
    return i;
  };
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_14($props, $state$delegate, resultContinuation) {
    var i = new RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_13($props, $state$delegate, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.f1e($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda_7($props, $state$delegate) {
    return function (it) {
      var tmp = MainScope();
      launch(tmp, VOID, VOID, RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda$slambda_14($props, $state$delegate, null));
      return Unit_getInstance();
    };
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda_8($props) {
    return function (it) {
      $props.handleDisplayAlertProp(OutcomeCode_CODE_050_FUNCTIONALITY_UNDER_CONSTRUCTION_getInstance(), CryptoACAlertSeverity_INFO_getInstance());
      return Unit_getInstance();
    };
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda_3($state$delegate, $props) {
    return function ($this$invoke) {
      $this$invoke.elementsProp = invoke$lambda_19($state$delegate).h5i_1;
      $this$invoke.tableColumnsProp = get_permissionColumns();
      $this$invoke.titleProp = 'Role-Topic Permissions';
      $this$invoke.onRefreshProp = RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda_7($props, $state$delegate);
      $this$invoke.onElementClickProp = RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda_8($props);
      return Unit_getInstance();
    };
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda_3($state$delegate, $props) {
    return function ($this$invoke) {
      $this$invoke.item = true;
      $this$invoke.xs = 12;
      $this$invoke.sm = 6;
      var tmp = get_CryptoACTable();
      $this$invoke.x4r(tmp, RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda_3($state$delegate, $props));
      return Unit_getInstance();
    };
  }
  function RBACMQTTDashboard$lambda$lambda$lambda_0($state$delegate, $props) {
    return function ($this$invoke) {
      $this$invoke.container = true;
      $this$invoke.spacing = 1;
      var tmp = Grid;
      $this$invoke.x4r(tmp, RBACMQTTDashboard$lambda$lambda$lambda$lambda_2($state$delegate, $props));
      var tmp_0 = Grid;
      $this$invoke.x4r(tmp_0, RBACMQTTDashboard$lambda$lambda$lambda$lambda_3($state$delegate, $props));
      return Unit_getInstance();
    };
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda_9($cryptoACTableData, $state$delegate) {
    return function (it) {
      invoke$lambda_19($state$delegate).i5i_1.ma($cryptoACTableData);
      invoke$lambda_20($state$delegate, invoke$lambda_19($state$delegate).m5i());
      return Unit_getInstance();
    };
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda_4($cryptoACTableData, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.elementsProp = $cryptoACTableData.w5b_1;
      $this$invoke.tableColumnsProp = $cryptoACTableData.x5b_1;
      $this$invoke.titleProp = $cryptoACTableData.y5b_1;
      $this$invoke.onCloseProp = RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda_9($cryptoACTableData, $state$delegate);
      return Unit_getInstance();
    };
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda_4($element, $cryptoACTableData, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.item = true;
      $this$invoke.xs = $element;
      $this$invoke.sm = $element;
      var tmp = get_CryptoACTable();
      $this$invoke.x4r(tmp, RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda_4($cryptoACTableData, $state$delegate));
      return Unit_getInstance();
    };
  }
  function RBACMQTTDashboard$lambda$lambda$lambda_1($element, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.container = true;
      $this$invoke.spacing = 1;
      var numberOfTables = getNumberOfItemsFromSpan($element);
      var inductionVariable = 0;
      var tmp;
      if (inductionVariable < numberOfTables) {
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var cryptoACTableData = invoke$lambda_19($state$delegate).i5i_1.j(i);
          var tmp_0 = Grid;
          $this$invoke.x4r(tmp_0, RBACMQTTDashboard$lambda$lambda$lambda$lambda_4($element, cryptoACTableData, $state$delegate));
        }
         while (inductionVariable < numberOfTables);
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda_10($topicName, $state$delegate) {
    return function (it) {
      invoke$lambda_19($state$delegate).j5i_1.tb($topicName);
      invoke$lambda_20($state$delegate, invoke$lambda_19($state$delegate).m5i());
      return Unit_getInstance();
    };
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda_5($props, $i, $state$delegate) {
    return function ($this$invoke) {
      var topicName = $props.topicsProp.j($i);
      var tmp$ret$0;
      // Inline function 'kotlin.collections.mutableListOf' call
      tmp$ret$0 = ArrayList_init_$Create$();
      var listOfMessages = tmp$ret$0;
      var tmp0_safe_receiver = invoke$lambda_19($state$delegate).j5i_1.y1(topicName);
      if (tmp0_safe_receiver == null)
        null;
      else {
        // Inline function 'kotlin.collections.forEach' call
        var tmp0_iterator = tmp0_safe_receiver.f();
        while (tmp0_iterator.g()) {
          var element = tmp0_iterator.h();
          // Inline function 'eu.fbk.st.cryptoac.view.content.dashboard.RBACMQTTDashboard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
          var tmp$ret$3;
          // Inline function 'kotlin.arrayOf' call
          var tmp$ret$2;
          // Inline function 'kotlin.js.unsafeCast' call
          var tmp$ret$1;
          // Inline function 'kotlin.js.asDynamic' call
          tmp$ret$1 = [element];
          tmp$ret$2 = tmp$ret$1;
          tmp$ret$3 = tmp$ret$2;
          listOfMessages.a(tmp$ret$3);
        }
      }
      invoke$lambda_20($state$delegate, invoke$lambda_19($state$delegate).m5i());
      $this$invoke.elementsProp = listOfMessages;
      $this$invoke.tableColumnsProp = get_mqttMessagesColumns();
      $this$invoke.titleProp = 'Topic: ' + topicName;
      $this$invoke.onCloseProp = RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda$lambda_10(topicName, $state$delegate);
      return Unit_getInstance();
    };
  }
  function RBACMQTTDashboard$lambda$lambda$lambda$lambda_5($element, $props, $i, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.item = true;
      $this$invoke.xs = $element;
      $this$invoke.sm = $element;
      var tmp = get_CryptoACTable();
      $this$invoke.x4r(tmp, RBACMQTTDashboard$lambda$lambda$lambda$lambda$lambda_5($props, $i, $state$delegate));
      return Unit_getInstance();
    };
  }
  function RBACMQTTDashboard$lambda$lambda$lambda_2($element, $props, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.container = true;
      $this$invoke.spacing = 1;
      var numberOfTables = getNumberOfItemsFromSpan($element);
      var inductionVariable = 0;
      var tmp;
      if (inductionVariable < numberOfTables) {
        do {
          var i = inductionVariable;
          inductionVariable = inductionVariable + 1 | 0;
          var tmp_0 = Grid;
          $this$invoke.x4r(tmp_0, RBACMQTTDashboard$lambda$lambda$lambda$lambda_5($element, $props, i, $state$delegate));
        }
         while (inductionVariable < numberOfTables);
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function RBACMQTTDashboard$lambda$lambda($props, $state$delegate) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$12;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$11;
      // Inline function 'js.core.jso' call
      var tmp$ret$10;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.dashboard.RBACMQTTDashboard.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '10px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.marginTop = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '10px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      tmp0_apply.marginBottom = tmp$ret$6;
      var tmp$ret$9;
      // Inline function 'csstype.px' call
      var tmp$ret$8;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp2_unsafeCast = '500px';
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = tmp2_unsafeCast;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      tmp0_apply.maxHeight = tmp$ret$9;
      tmp$ret$10 = tmp0_apply;
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = css(tmp$ret$11);
      tmp1_css.className = tmp$ret$12;
      var tmp;
      if ($props.userIsAdminProp) {
        var tmp_0 = Grid;
        $this$invoke.x4r(tmp_0, RBACMQTTDashboard$lambda$lambda$lambda($state$delegate, $props));
        tmp = Unit_getInstance();
      }
      var tmp_1 = Grid;
      $this$invoke.x4r(tmp_1, RBACMQTTDashboard$lambda$lambda$lambda_0($state$delegate, $props));
      var tmp2_forEach = getColumnsForTables(invoke$lambda_19($state$delegate).i5i_1.i());
      var tmp0_iterator = tmp2_forEach.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        // Inline function 'eu.fbk.st.cryptoac.view.content.dashboard.RBACMQTTDashboard.<anonymous>.<anonymous>.<anonymous>' call
        var tmp_2 = Grid;
        $this$invoke.x4r(tmp_2, RBACMQTTDashboard$lambda$lambda$lambda_1(element, $state$delegate));
      }
      var tmp3_forEach = getColumnsForTables($props.topicsProp.i());
      var tmp0_iterator_0 = tmp3_forEach.f();
      while (tmp0_iterator_0.g()) {
        var element_0 = tmp0_iterator_0.h();
        // Inline function 'eu.fbk.st.cryptoac.view.content.dashboard.RBACMQTTDashboard.<anonymous>.<anonymous>.<anonymous>' call
        var tmp_3 = Grid;
        $this$invoke.x4r(tmp_3, RBACMQTTDashboard$lambda$lambda$lambda_2(element_0, $props, $state$delegate));
      }
      return Unit_getInstance();
    };
  }
  var properties_initialized_RBACMQTTDashboard_kt_dh1mlu;
  function _init_properties_RBACMQTTDashboard_kt__xx9atw() {
    if (properties_initialized_RBACMQTTDashboard_kt_dh1mlu) {
    } else {
      properties_initialized_RBACMQTTDashboard_kt_dh1mlu = true;
      var tmp = KotlinLogging_getInstance();
      logger_6 = tmp.b4r(logger$lambda_6);
      RBACMQTTDashboard = FC(RBACMQTTDashboard$lambda);
    }
  }
  function get_logger_5() {
    _init_properties_ModuleItem_kt__vmrgu9();
    return logger_7;
  }
  var logger_7;
  function get_ModuleItem() {
    _init_properties_ModuleItem_kt__vmrgu9();
    return ModuleItem;
  }
  var ModuleItem;
  function ModuleItemState(changedByUserState, justMountedState, currentChoiceState) {
    changedByUserState = changedByUserState === VOID ? false : changedByUserState;
    justMountedState = justMountedState === VOID ? false : justMountedState;
    currentChoiceState = currentChoiceState === VOID ? '' : currentChoiceState;
    this.x5m_1 = changedByUserState;
    this.y5m_1 = justMountedState;
    this.z5m_1 = currentChoiceState;
  }
  protoOf(ModuleItemState).a5n = function (changedByUserState, justMountedState, currentChoiceState) {
    return new ModuleItemState(changedByUserState, justMountedState, currentChoiceState);
  };
  protoOf(ModuleItemState).b5n = function (changedByUserState, justMountedState, currentChoiceState, $super) {
    changedByUserState = changedByUserState === VOID ? this.x5m_1 : changedByUserState;
    justMountedState = justMountedState === VOID ? this.y5m_1 : justMountedState;
    currentChoiceState = currentChoiceState === VOID ? this.z5m_1 : currentChoiceState;
    return $super === VOID ? this.a5n(changedByUserState, justMountedState, currentChoiceState) : $super.a5n.call(this, changedByUserState, justMountedState, currentChoiceState);
  };
  protoOf(ModuleItemState).toString = function () {
    return 'ModuleItemState(changedByUserState=' + this.x5m_1 + ', justMountedState=' + this.y5m_1 + ', currentChoiceState=' + this.z5m_1 + ')';
  };
  protoOf(ModuleItemState).hashCode = function () {
    var result = this.x5m_1 | 0;
    result = imul(result, 31) + (this.y5m_1 | 0) | 0;
    result = imul(result, 31) + getStringHashCode(this.z5m_1) | 0;
    return result;
  };
  protoOf(ModuleItemState).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof ModuleItemState))
      return false;
    var tmp0_other_with_cast = other instanceof ModuleItemState ? other : THROW_CCE();
    if (!(this.x5m_1 === tmp0_other_with_cast.x5m_1))
      return false;
    if (!(this.y5m_1 === tmp0_other_with_cast.y5m_1))
      return false;
    if (!(this.z5m_1 === tmp0_other_with_cast.z5m_1))
      return false;
    return true;
  };
  function getStateFromProps_6(props, oldState) {
    oldState = oldState === VOID ? new ModuleItemState() : oldState;
    _init_properties_ModuleItem_kt__vmrgu9();
    if (oldState.y5m_1 ? true : !oldState.x5m_1) {
      oldState.z5m_1 = !(props.defaultValueProp == null) ? ensureNotNull(props.defaultValueProp) : '';
    }
    oldState.x5m_1 = false;
    oldState.y5m_1 = false;
    return oldState.b5n();
  }
  function getImageFromModuleImplementation(choice) {
    _init_properties_ModuleItem_kt__vmrgu9();
    var tmp0_subject = choice;
    var tmp;
    switch (tmp0_subject) {
      case 'CRYPTOAC':
      case 'RBAC_CRYPTOAC':
        tmp = 'proxy.png';
        break;
      case 'MOSQUITTO':
        tmp = 'mosquitto.png';
        break;
      case 'RBAC_MYSQL':
      case 'ABAC_MYSQL':
        tmp = 'mysql.png';
        break;
      case 'RBAC_REDIS':
        tmp = 'redis.png';
        break;
      case 'NONE':
      case '':
        tmp = 'none.png';
        break;
      case 'MQTT':
        tmp = 'mqtt.png';
        break;
      case 'RBAC_OPA':
        tmp = 'opa.png';
        break;
      case 'RBAC_XACML_AUTHZFORCE':
        tmp = 'xacmlauthzforce.png';
        break;
      case 'RBAC_DYNSEC':
        tmp = 'dynsec.png';
        break;
      default:
        var message = 'Given choice "' + choice + '" not corresponding to any module implementation';
        var tmp_0 = get_logger_5();
        tmp_0.j4r(getImageFromModuleImplementation$lambda(message));
        throw IllegalStateException_init_$Create$(message);
    }
    return tmp;
  }
  function logger$lambda_7() {
    _init_properties_ModuleItem_kt__vmrgu9();
    return Unit_getInstance();
  }
  function ModuleItem$lambda($this$FC, props) {
    _init_properties_ModuleItem_kt__vmrgu9();
    var state$delegate = useState(getStateFromProps_6(props));
    useEffect([props], ModuleItem$lambda$lambda(props, state$delegate));
    var tmp = get_CryptoACPaper();
    $this$FC.x4r(tmp, ModuleItem$lambda$lambda_0(props, state$delegate));
    return Unit_getInstance();
  }
  function invoke$lambda_21($state$delegate) {
    _init_properties_ModuleItem_kt__vmrgu9();
    var tmp$ret$2;
    // Inline function 'react.StateInstance.getValue' call
    var tmp1_getValue = getLocalDelegateReference('state', KMutableProperty0, true, function () {
      return THROW_ISE();
    });
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = $state$delegate;
    var tmp0_unsafeCast = tmp$ret$0[0];
    tmp$ret$1 = tmp0_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  }
  function invoke$lambda_22($state$delegate, value) {
    _init_properties_ModuleItem_kt__vmrgu9();
    var tmp1_setValue = getLocalDelegateReference('state', KMutableProperty0, true, function () {
      return THROW_ISE();
    });
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = $state$delegate;
    var tmp0_unsafeCast = tmp$ret$0[1];
    tmp$ret$1 = tmp0_unsafeCast;
    return tmp$ret$1(value);
  }
  function ModuleItem$lambda$lambda($props, $state$delegate) {
    return function ($this$useEffect) {
      invoke$lambda_22($state$delegate, getStateFromProps_6($props, invoke$lambda_21($state$delegate)));
      return Unit_getInstance();
    };
  }
  function ModuleItem$lambda$lambda$lambda$lambda($this$invoke) {
    _init_properties_ModuleItem_kt__vmrgu9();
    // Inline function 'emotion.react.css' call
    var tmp1_css = $this$invoke;
    var tmp$ret$6;
    // Inline function 'emotion.css.ClassName' call
    var tmp$ret$5;
    // Inline function 'js.core.jso' call
    var tmp$ret$4;
    // Inline function 'kotlin.apply' call
    var tmp$ret$0;
    // Inline function 'js.core.jso' call
    tmp$ret$0 = {};
    var tmp0_apply = tmp$ret$0;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'eu.fbk.st.cryptoac.view.content.newProfile.ModuleItem.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
    var tmp$ret$3;
    // Inline function 'csstype.pct' call
    var tmp$ret$2;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = '35%';
    var tmp$ret$1;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$1 = tmp0_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    tmp0_apply.marginTop = tmp$ret$3;
    tmp$ret$4 = tmp0_apply;
    tmp$ret$5 = tmp$ret$4;
    tmp$ret$6 = css(tmp$ret$5);
    tmp1_css.className = tmp$ret$6;
    $this$invoke.w4r('No option available');
    return Unit_getInstance();
  }
  function ModuleItem$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$21;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$20;
      // Inline function 'js.core.jso' call
      var tmp$ret$19;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.newProfile.ModuleItem.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      tmp0_apply.verticalAlign = (/*union*/{baseline: 'baseline', bottom: 'bottom', middle: 'middle', sub: 'sub', super: 'super', textBottom: 'text-bottom', textTop: 'text-top', top: 'top'}/*union*/).middle;
      var tmp$ret$9;
      // Inline function 'csstype.Padding' call
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '3px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp3_Padding = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '3px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      var tmp4_Padding = tmp$ret$6;
      var tmp$ret$8;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp2_unsafeCast = '' + tmp3_Padding + ' ' + tmp4_Padding;
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = tmp2_unsafeCast;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      tmp0_apply.padding = tmp$ret$9;
      var tmp$ret$12;
      // Inline function 'csstype.pct' call
      var tmp$ret$11;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp5_unsafeCast = '25%';
      var tmp$ret$10;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$10 = tmp5_unsafeCast;
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = tmp$ret$11;
      tmp0_apply.marginTop = tmp$ret$12;
      var tmp$ret$15;
      // Inline function 'csstype.pct' call
      var tmp$ret$14;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp6_unsafeCast = '50%';
      var tmp$ret$13;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$13 = tmp6_unsafeCast;
      tmp$ret$14 = tmp$ret$13;
      tmp$ret$15 = tmp$ret$14;
      tmp0_apply.maxWidth = tmp$ret$15;
      var tmp$ret$18;
      // Inline function 'csstype.pct' call
      var tmp$ret$17;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp7_unsafeCast = '50%';
      var tmp$ret$16;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$16 = tmp7_unsafeCast;
      tmp$ret$17 = tmp$ret$16;
      tmp$ret$18 = tmp$ret$17;
      tmp0_apply.maxHeight = tmp$ret$18;
      tmp0_apply.width = (/*union*/{auto: 'auto'}/*union*/).auto;
      tmp0_apply.height = (/*union*/{auto: 'auto'}/*union*/).auto;
      tmp$ret$19 = tmp0_apply;
      tmp$ret$20 = tmp$ret$19;
      tmp$ret$21 = css(tmp$ret$20);
      tmp1_css.className = tmp$ret$21;
      $this$invoke.src = getImageFromModuleImplementation(invoke$lambda_21($state$delegate).z5m_1);
      return Unit_getInstance();
    };
  }
  function ModuleItem$lambda$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.item = true;
      $this$invoke.xs = 12;
      var tmp$ret$3;
      // Inline function 'react.dom.html.ReactHTML.img' call
      var tmp0__get_img__2k5xt4 = ReactHTML_getInstance();
      var tmp$ret$2;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = 'img';
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp = tmp$ret$3;
      $this$invoke.x4r(tmp, ModuleItem$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate));
      return Unit_getInstance();
    };
  }
  function ModuleItem$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda($props, $state$delegate) {
    return function (newChoice) {
      invoke$lambda_22($state$delegate, invoke$lambda_21($state$delegate).b5n(true, VOID, newChoice));
      $props.handleChangeChoiceProp(newChoice);
      return Unit_getInstance();
    };
  }
  function ModuleItem$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($props, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.nameProp = $props.nameProp;
      $this$invoke.labelProp = 'Label';
      $this$invoke.defaultValueProp = invoke$lambda_21($state$delegate).z5m_1;
      $this$invoke.onChangeProp = ModuleItem$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda($props, $state$delegate);
      $this$invoke.optionsProp = $props.optionsProp;
      return Unit_getInstance();
    };
  }
  function ModuleItem$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($props, $state$delegate) {
    return function ($this$invoke) {
      var tmp = get_CryptoACSelect();
      $this$invoke.x4r(tmp, ModuleItem$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($props, $state$delegate));
      $this$invoke.item = true;
      $this$invoke.xs = 12;
      return Unit_getInstance();
    };
  }
  function ModuleItem$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate, $props) {
    return function ($this$invoke) {
      $this$invoke.container = true;
      $this$invoke.spacing = 1;
      var tmp = Grid;
      $this$invoke.x4r(tmp, ModuleItem$lambda$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate));
      var tmp_0 = Grid;
      $this$invoke.x4r(tmp_0, ModuleItem$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($props, $state$delegate));
      return Unit_getInstance();
    };
  }
  function ModuleItem$lambda$lambda$lambda$lambda$lambda($state$delegate, $props) {
    return function ($this$invoke) {
      $this$invoke.item = true;
      $this$invoke.xs = 4;
      var tmp = Grid;
      $this$invoke.x4r(tmp, ModuleItem$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate, $props));
      return Unit_getInstance();
    };
  }
  function ModuleItem$lambda$lambda$lambda$lambda$lambda_0($this$invoke) {
    _init_properties_ModuleItem_kt__vmrgu9();
    $this$invoke.item = true;
    $this$invoke.xs = 8;
    var tmp = get_CryptoACScore();
    $this$invoke.x4r(tmp, ModuleItem$lambda$lambda$lambda$lambda$lambda$lambda_0);
    var tmp_0 = get_CryptoACScore();
    $this$invoke.x4r(tmp_0, ModuleItem$lambda$lambda$lambda$lambda$lambda$lambda_1);
    var tmp_1 = get_CryptoACScore();
    $this$invoke.x4r(tmp_1, ModuleItem$lambda$lambda$lambda$lambda$lambda$lambda_2);
    var tmp_2 = get_CryptoACScore();
    $this$invoke.x4r(tmp_2, ModuleItem$lambda$lambda$lambda$lambda$lambda$lambda_3);
    var tmp_3 = get_CryptoACScore();
    $this$invoke.x4r(tmp_3, ModuleItem$lambda$lambda$lambda$lambda$lambda$lambda_4);
    var tmp_4 = get_CryptoACScore();
    $this$invoke.x4r(tmp_4, ModuleItem$lambda$lambda$lambda$lambda$lambda$lambda_5);
    return Unit_getInstance();
  }
  function ModuleItem$lambda$lambda$lambda$lambda$lambda$lambda_0($this$invoke) {
    _init_properties_ModuleItem_kt__vmrgu9();
    $this$invoke.labelProp = 'Throughput';
    $this$invoke.minProp = 0;
    $this$invoke.maxProp = 100;
    $this$invoke.valueProp = Default_getInstance().r4(0, 100);
    return Unit_getInstance();
  }
  function ModuleItem$lambda$lambda$lambda$lambda$lambda$lambda_1($this$invoke) {
    _init_properties_ModuleItem_kt__vmrgu9();
    $this$invoke.labelProp = 'Scalability';
    $this$invoke.minProp = 0;
    $this$invoke.maxProp = 100;
    $this$invoke.valueProp = Default_getInstance().r4(0, 100);
    return Unit_getInstance();
  }
  function ModuleItem$lambda$lambda$lambda$lambda$lambda$lambda_2($this$invoke) {
    _init_properties_ModuleItem_kt__vmrgu9();
    $this$invoke.labelProp = 'Reliability';
    $this$invoke.minProp = 0;
    $this$invoke.maxProp = 100;
    $this$invoke.valueProp = Default_getInstance().r4(0, 100);
    return Unit_getInstance();
  }
  function ModuleItem$lambda$lambda$lambda$lambda$lambda$lambda_3($this$invoke) {
    _init_properties_ModuleItem_kt__vmrgu9();
    $this$invoke.labelProp = 'Redundancy';
    $this$invoke.minProp = 0;
    $this$invoke.maxProp = 100;
    $this$invoke.valueProp = Default_getInstance().r4(0, 100);
    return Unit_getInstance();
  }
  function ModuleItem$lambda$lambda$lambda$lambda$lambda$lambda_4($this$invoke) {
    _init_properties_ModuleItem_kt__vmrgu9();
    $this$invoke.labelProp = 'Latency';
    $this$invoke.minProp = 0;
    $this$invoke.maxProp = 100;
    $this$invoke.valueProp = Default_getInstance().r4(0, 100);
    return Unit_getInstance();
  }
  function ModuleItem$lambda$lambda$lambda$lambda$lambda$lambda_5($this$invoke) {
    _init_properties_ModuleItem_kt__vmrgu9();
    $this$invoke.labelProp = 'CSP Lock-in';
    $this$invoke.minProp = 0;
    $this$invoke.maxProp = 100;
    $this$invoke.valueProp = Default_getInstance().r4(0, 100);
    return Unit_getInstance();
  }
  function ModuleItem$lambda$lambda$lambda$lambda_0($state$delegate, $props) {
    return function ($this$invoke) {
      $this$invoke.container = true;
      $this$invoke.spacing = 1;
      var tmp = Grid;
      $this$invoke.x4r(tmp, ModuleItem$lambda$lambda$lambda$lambda$lambda($state$delegate, $props));
      var tmp_0 = Grid;
      $this$invoke.x4r(tmp_0, ModuleItem$lambda$lambda$lambda$lambda$lambda_0);
      return Unit_getInstance();
    };
  }
  function ModuleItem$lambda$lambda$lambda($props, $state$delegate) {
    return function ($this$FC, it) {
      var tmp;
      if ($props.optionsProp.l()) {
        var tmp$ret$3;
        // Inline function 'react.dom.html.ReactHTML.p' call
        var tmp0__get_p__f88lgb = ReactHTML_getInstance();
        var tmp$ret$2;
        // Inline function 'react.IntrinsicType' call
        var tmp$ret$1;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp$ret$0;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$0 = 'p';
        tmp$ret$1 = tmp$ret$0;
        tmp$ret$2 = tmp$ret$1;
        tmp$ret$3 = tmp$ret$2;
        var tmp_0 = tmp$ret$3;
        $this$FC.x4r(tmp_0, ModuleItem$lambda$lambda$lambda$lambda);
        tmp = Unit_getInstance();
      } else {
        var tmp_1 = Grid;
        $this$FC.x4r(tmp_1, ModuleItem$lambda$lambda$lambda$lambda_0($state$delegate, $props));
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function ModuleItem$lambda$lambda_0($props, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.titleStyleProp = Themes_getInstance().g58_1;
      $this$invoke.titleTextProp = $props.titleProp;
      $this$invoke.titleVariantProp = 'subtitle1';
      $this$invoke.setDividerProp = true;
      var tmp$ret$2;
      // Inline function 'csstype.pct' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '95%';
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = tmp0_unsafeCast;
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      $this$invoke.dividerWidthProp = tmp$ret$2;
      $this$invoke.childProp = create(FC(ModuleItem$lambda$lambda$lambda($props, $state$delegate)));
      return Unit_getInstance();
    };
  }
  function getImageFromModuleImplementation$lambda($message) {
    return function () {
      return $message;
    };
  }
  var properties_initialized_ModuleItem_kt_fx5ji9;
  function _init_properties_ModuleItem_kt__vmrgu9() {
    if (properties_initialized_ModuleItem_kt_fx5ji9) {
    } else {
      properties_initialized_ModuleItem_kt_fx5ji9 = true;
      var tmp = KotlinLogging_getInstance();
      logger_7 = tmp.b4r(logger$lambda_7);
      ModuleItem = FC(ModuleItem$lambda);
    }
  }
  function get_logger_6() {
    _init_properties_NewProfile_kt__g784eh();
    return logger_8;
  }
  var logger_8;
  function get_NewProfile() {
    _init_properties_NewProfile_kt__g784eh();
    return NewProfile;
  }
  var NewProfile;
  function NewProfileState(listOfCoresState, coreTypeState, rmTypeState, mmTypeState, dmTypeState, acTypeState, availableRMImplementationsState, availableMMImplementationsState, availableDMImplementationsState, availableACImplementationsState, changedByUserState, justMountedState) {
    var tmp;
    if (listOfCoresState === VOID) {
      var tmp$ret$0;
      var tmp$ret$0_0;
      // Inline function 'kotlin.collections.mutableListOf' call
      tmp$ret$0 = ArrayList_init_$Create$();
      tmp$ret$0_0 = Unit_getInstance();
      tmp = tmp$ret$0;
    } else {
      tmp = listOfCoresState;
    }
    listOfCoresState = tmp;
    coreTypeState = coreTypeState === VOID ? CoreType_RBAC_AT_REST_getInstance() : coreTypeState;
    rmTypeState = rmTypeState === VOID ? RMType_RBAC_CRYPTOAC_getInstance() : rmTypeState;
    mmTypeState = mmTypeState === VOID ? MMType_RBAC_MYSQL_getInstance() : mmTypeState;
    dmTypeState = dmTypeState === VOID ? DMType_CRYPTOAC_getInstance() : dmTypeState;
    acTypeState = acTypeState === VOID ? ACType_RBAC_OPA_getInstance() : acTypeState;
    availableRMImplementationsState = availableRMImplementationsState === VOID ? getRMImplementations(CoreType_RBAC_AT_REST_getInstance()) : availableRMImplementationsState;
    availableMMImplementationsState = availableMMImplementationsState === VOID ? getMMImplementations(CoreType_RBAC_AT_REST_getInstance()) : availableMMImplementationsState;
    availableDMImplementationsState = availableDMImplementationsState === VOID ? getDMImplementations(CoreType_RBAC_AT_REST_getInstance()) : availableDMImplementationsState;
    availableACImplementationsState = availableACImplementationsState === VOID ? getACImplementations(CoreType_RBAC_AT_REST_getInstance()) : availableACImplementationsState;
    changedByUserState = changedByUserState === VOID ? false : changedByUserState;
    justMountedState = justMountedState === VOID ? true : justMountedState;
    this.c5n_1 = listOfCoresState;
    this.d5n_1 = coreTypeState;
    this.e5n_1 = rmTypeState;
    this.f5n_1 = mmTypeState;
    this.g5n_1 = dmTypeState;
    this.h5n_1 = acTypeState;
    this.i5n_1 = availableRMImplementationsState;
    this.j5n_1 = availableMMImplementationsState;
    this.k5n_1 = availableDMImplementationsState;
    this.l5n_1 = availableACImplementationsState;
    this.m5n_1 = changedByUserState;
    this.n5n_1 = justMountedState;
  }
  protoOf(NewProfileState).o5n = function (listOfCoresState, coreTypeState, rmTypeState, mmTypeState, dmTypeState, acTypeState, availableRMImplementationsState, availableMMImplementationsState, availableDMImplementationsState, availableACImplementationsState, changedByUserState, justMountedState) {
    return new NewProfileState(listOfCoresState, coreTypeState, rmTypeState, mmTypeState, dmTypeState, acTypeState, availableRMImplementationsState, availableMMImplementationsState, availableDMImplementationsState, availableACImplementationsState, changedByUserState, justMountedState);
  };
  protoOf(NewProfileState).p5n = function (listOfCoresState, coreTypeState, rmTypeState, mmTypeState, dmTypeState, acTypeState, availableRMImplementationsState, availableMMImplementationsState, availableDMImplementationsState, availableACImplementationsState, changedByUserState, justMountedState, $super) {
    listOfCoresState = listOfCoresState === VOID ? this.c5n_1 : listOfCoresState;
    coreTypeState = coreTypeState === VOID ? this.d5n_1 : coreTypeState;
    rmTypeState = rmTypeState === VOID ? this.e5n_1 : rmTypeState;
    mmTypeState = mmTypeState === VOID ? this.f5n_1 : mmTypeState;
    dmTypeState = dmTypeState === VOID ? this.g5n_1 : dmTypeState;
    acTypeState = acTypeState === VOID ? this.h5n_1 : acTypeState;
    availableRMImplementationsState = availableRMImplementationsState === VOID ? this.i5n_1 : availableRMImplementationsState;
    availableMMImplementationsState = availableMMImplementationsState === VOID ? this.j5n_1 : availableMMImplementationsState;
    availableDMImplementationsState = availableDMImplementationsState === VOID ? this.k5n_1 : availableDMImplementationsState;
    availableACImplementationsState = availableACImplementationsState === VOID ? this.l5n_1 : availableACImplementationsState;
    changedByUserState = changedByUserState === VOID ? this.m5n_1 : changedByUserState;
    justMountedState = justMountedState === VOID ? this.n5n_1 : justMountedState;
    return $super === VOID ? this.o5n(listOfCoresState, coreTypeState, rmTypeState, mmTypeState, dmTypeState, acTypeState, availableRMImplementationsState, availableMMImplementationsState, availableDMImplementationsState, availableACImplementationsState, changedByUserState, justMountedState) : $super.o5n.call(this, listOfCoresState, coreTypeState, rmTypeState, mmTypeState, dmTypeState, acTypeState, availableRMImplementationsState, availableMMImplementationsState, availableDMImplementationsState, availableACImplementationsState, changedByUserState, justMountedState);
  };
  protoOf(NewProfileState).toString = function () {
    return 'NewProfileState(listOfCoresState=' + this.c5n_1 + ', coreTypeState=' + this.d5n_1 + ', rmTypeState=' + this.e5n_1 + ', mmTypeState=' + this.f5n_1 + ', dmTypeState=' + this.g5n_1 + ', acTypeState=' + this.h5n_1 + ', availableRMImplementationsState=' + this.i5n_1 + ', availableMMImplementationsState=' + this.j5n_1 + ', availableDMImplementationsState=' + this.k5n_1 + ', availableACImplementationsState=' + this.l5n_1 + ', changedByUserState=' + this.m5n_1 + ', justMountedState=' + this.n5n_1 + ')';
  };
  protoOf(NewProfileState).hashCode = function () {
    var result = hashCode(this.c5n_1);
    result = imul(result, 31) + this.d5n_1.hashCode() | 0;
    result = imul(result, 31) + this.e5n_1.hashCode() | 0;
    result = imul(result, 31) + this.f5n_1.hashCode() | 0;
    result = imul(result, 31) + this.g5n_1.hashCode() | 0;
    result = imul(result, 31) + this.h5n_1.hashCode() | 0;
    result = imul(result, 31) + hashCode(this.i5n_1) | 0;
    result = imul(result, 31) + hashCode(this.j5n_1) | 0;
    result = imul(result, 31) + hashCode(this.k5n_1) | 0;
    result = imul(result, 31) + hashCode(this.l5n_1) | 0;
    result = imul(result, 31) + (this.m5n_1 | 0) | 0;
    result = imul(result, 31) + (this.n5n_1 | 0) | 0;
    return result;
  };
  protoOf(NewProfileState).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof NewProfileState))
      return false;
    var tmp0_other_with_cast = other instanceof NewProfileState ? other : THROW_CCE();
    if (!equals(this.c5n_1, tmp0_other_with_cast.c5n_1))
      return false;
    if (!this.d5n_1.equals(tmp0_other_with_cast.d5n_1))
      return false;
    if (!this.e5n_1.equals(tmp0_other_with_cast.e5n_1))
      return false;
    if (!this.f5n_1.equals(tmp0_other_with_cast.f5n_1))
      return false;
    if (!this.g5n_1.equals(tmp0_other_with_cast.g5n_1))
      return false;
    if (!this.h5n_1.equals(tmp0_other_with_cast.h5n_1))
      return false;
    if (!equals(this.i5n_1, tmp0_other_with_cast.i5n_1))
      return false;
    if (!equals(this.j5n_1, tmp0_other_with_cast.j5n_1))
      return false;
    if (!equals(this.k5n_1, tmp0_other_with_cast.k5n_1))
      return false;
    if (!equals(this.l5n_1, tmp0_other_with_cast.l5n_1))
      return false;
    if (!(this.m5n_1 === tmp0_other_with_cast.m5n_1))
      return false;
    if (!(this.n5n_1 === tmp0_other_with_cast.n5n_1))
      return false;
    return true;
  };
  function changeRMType(state, newRMType) {
    _init_properties_NewProfile_kt__g784eh();
    var tmp = get_logger_6();
    tmp.h4r(changeRMType$lambda(newRMType));
    state.e5n_1 = newRMType;
  }
  function changeMMType(state, newMMType) {
    _init_properties_NewProfile_kt__g784eh();
    var tmp = get_logger_6();
    tmp.h4r(changeMMType$lambda(newMMType));
    state.f5n_1 = newMMType;
  }
  function changeDMType(state, newDMType) {
    _init_properties_NewProfile_kt__g784eh();
    var tmp = get_logger_6();
    tmp.h4r(changeDMType$lambda(newDMType));
    state.g5n_1 = newDMType;
  }
  function changeACType(state, newACType) {
    _init_properties_NewProfile_kt__g784eh();
    var tmp = get_logger_6();
    tmp.h4r(changeACType$lambda(newACType));
    state.h5n_1 = newACType;
  }
  function getDMImplementations(coreType) {
    _init_properties_NewProfile_kt__g784eh();
    var tmp0_subject = coreType;
    var tmp0 = tmp0_subject.n4_1;
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = listOf_0(DMType_CRYPTOAC_getInstance().toString());
        break;
      case 1:
        tmp = listOf_0(DMType_MQTT_getInstance().toString());
        break;
      case 2:
        tmp = listOf_0(DMType_CRYPTOAC_getInstance().toString());
        break;
      case 3:
        tmp = listOf_0(DMType_MQTT_getInstance().toString());
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function getMMImplementations(coreType) {
    _init_properties_NewProfile_kt__g784eh();
    var tmp0_subject = coreType;
    var tmp0 = tmp0_subject.n4_1;
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = listOf([MMType_RBAC_MYSQL_getInstance().toString(), MMType_RBAC_REDIS_getInstance().toString()]);
        break;
      case 1:
        tmp = listOf([MMType_RBAC_MYSQL_getInstance().toString(), MMType_RBAC_REDIS_getInstance().toString()]);
        break;
      case 2:
        tmp = listOf_0(MMType_ABAC_MYSQL_getInstance().toString());
        break;
      case 3:
        tmp = listOf_0(MMType_ABAC_MYSQL_getInstance().toString());
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function getRMImplementations(coreType) {
    _init_properties_NewProfile_kt__g784eh();
    var tmp0_subject = coreType;
    var tmp0 = tmp0_subject.n4_1;
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = listOf_0(RMType_RBAC_CRYPTOAC_getInstance().toString());
        break;
      case 1:
        tmp = listOf_0(RMType_NONE_getInstance().toString());
        break;
      case 2:
        tmp = listOf_0(RMType_RBAC_CRYPTOAC_getInstance().toString());
        break;
      case 3:
        tmp = listOf_0(RMType_NONE_getInstance().toString());
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function getACImplementations(coreType) {
    _init_properties_NewProfile_kt__g784eh();
    var tmp0_subject = coreType;
    var tmp0 = tmp0_subject.n4_1;
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = listOf([ACType_RBAC_OPA_getInstance().toString(), ACType_RBAC_XACML_AUTHZFORCE_getInstance().toString(), ACType_NONE_getInstance().toString()]);
        break;
      case 1:
        tmp = listOf([ACType_RBAC_DYNSEC_getInstance().toString(), ACType_NONE_getInstance().toString()]);
        break;
      case 2:
        tmp = listOf([ACType_RBAC_OPA_getInstance().toString(), ACType_NONE_getInstance().toString()]);
        break;
      case 3:
        tmp = listOf_0(ACType_NONE_getInstance().toString());
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function changeCoreType_0(state, newCoreType) {
    _init_properties_NewProfile_kt__g784eh();
    var tmp = get_logger_6();
    tmp.h4r(changeCoreType$lambda_0(newCoreType));
    state.d5n_1 = newCoreType;
    state.i5n_1 = getRMImplementations(newCoreType);
    state.j5n_1 = getMMImplementations(newCoreType);
    state.k5n_1 = getDMImplementations(newCoreType);
    state.l5n_1 = getACImplementations(newCoreType);
    if (!state.i5n_1.b1(state.e5n_1.toString())) {
      state.e5n_1 = valueOf_4(first_1(state.i5n_1));
    }
    if (!state.j5n_1.b1(state.f5n_1.toString())) {
      state.f5n_1 = valueOf_3(first_1(state.j5n_1));
    }
    if (!state.k5n_1.b1(state.g5n_1.toString())) {
      state.g5n_1 = valueOf_2(first_1(state.k5n_1));
    }
    if (!state.l5n_1.b1(state.h5n_1.toString())) {
      state.h5n_1 = valueOf(first_1(state.l5n_1));
    }
  }
  function getStateFromProps_7(props, oldState) {
    oldState = oldState === VOID ? new NewProfileState() : oldState;
    _init_properties_NewProfile_kt__g784eh();
    if (oldState.n5n_1 ? true : !oldState.m5n_1) {
      var tmp = oldState;
      var tmp$ret$6;
      // Inline function 'kotlin.collections.map' call
      var tmp$ret$3;
      // Inline function 'kotlin.collections.filter' call
      var tmp$ret$0;
      // Inline function 'kotlin.enumValues' call
      tmp$ret$0 = values_1();
      var tmp1_filter = tmp$ret$0;
      var tmp$ret$2;
      // Inline function 'kotlin.collections.filterTo' call
      var tmp0_filterTo = ArrayList_init_$Create$();
      var indexedObject = tmp1_filter;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var element = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$1;
        // Inline function 'eu.fbk.st.cryptoac.view.content.newProfile.getStateFromProps.<anonymous>' call
        tmp$ret$1 = !props.excludedCoreTypesProp.b1(element);
        if (tmp$ret$1) {
          tmp0_filterTo.a(element);
        }
      }
      tmp$ret$2 = tmp0_filterTo;
      tmp$ret$3 = tmp$ret$2;
      var tmp3_map = tmp$ret$3;
      var tmp$ret$5;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp2_mapTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(tmp3_map, 10));
      var tmp0_iterator = tmp3_map.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        var tmp$ret$4;
        // Inline function 'eu.fbk.st.cryptoac.view.content.newProfile.getStateFromProps.<anonymous>' call
        tmp$ret$4 = new CryptoACRadioOption(item.u4w(), item.toString(), 'primary');
        tmp2_mapTo.a(tmp$ret$4);
      }
      tmp$ret$5 = tmp2_mapTo;
      tmp$ret$6 = tmp$ret$5;
      tmp.c5n_1 = toMutableList(tmp$ret$6);
      var tmp$ret$8;
      $l$block: {
        // Inline function 'kotlin.collections.firstOrNull' call
        var tmp4_firstOrNull = oldState.c5n_1;
        var tmp0_iterator_0 = tmp4_firstOrNull.f();
        while (tmp0_iterator_0.g()) {
          var element_0 = tmp0_iterator_0.h();
          var tmp$ret$7;
          // Inline function 'eu.fbk.st.cryptoac.view.content.newProfile.getStateFromProps.<anonymous>' call
          tmp$ret$7 = element_0.x5a_1 === oldState.d5n_1.toString();
          if (tmp$ret$7) {
            tmp$ret$8 = element_0;
            break $l$block;
          }
        }
        tmp$ret$8 = null;
      }
      if (tmp$ret$8 == null) {
        var tmp0_safe_receiver = firstOrNull(oldState.c5n_1);
        if (tmp0_safe_receiver == null)
          null;
        else {
          var tmp$ret$9;
          // Inline function 'kotlin.let' call
          // Inline function 'kotlin.contracts.contract' call
          changeCoreType_0(oldState, valueOf_0(tmp0_safe_receiver.x5a_1));
          tmp$ret$9 = Unit_getInstance();
        }
      }
    }
    oldState.m5n_1 = false;
    oldState.n5n_1 = false;
    return oldState.p5n();
  }
  function logger$lambda_8() {
    _init_properties_NewProfile_kt__g784eh();
    return Unit_getInstance();
  }
  function NewProfile$lambda($this$FC, props) {
    _init_properties_NewProfile_kt__g784eh();
    var state$delegate = useState(getStateFromProps_7(props));
    useEffect([props], NewProfile$lambda$lambda(props, state$delegate));
    var tmp$ret$3;
    // Inline function 'react.dom.html.ReactHTML.div' call
    var tmp0__get_div__2k2o9m = ReactHTML_getInstance();
    var tmp$ret$2;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = 'div';
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    var tmp = tmp$ret$3;
    $this$FC.x4r(tmp, NewProfile$lambda$lambda_0(state$delegate, props));
    return Unit_getInstance();
  }
  function invoke$lambda_23($state$delegate) {
    _init_properties_NewProfile_kt__g784eh();
    var tmp$ret$2;
    // Inline function 'react.StateInstance.getValue' call
    var tmp1_getValue = getLocalDelegateReference('state', KMutableProperty0, true, function () {
      return THROW_ISE();
    });
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = $state$delegate;
    var tmp0_unsafeCast = tmp$ret$0[0];
    tmp$ret$1 = tmp0_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  }
  function invoke$lambda_24($state$delegate, value) {
    _init_properties_NewProfile_kt__g784eh();
    var tmp1_setValue = getLocalDelegateReference('state', KMutableProperty0, true, function () {
      return THROW_ISE();
    });
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = $state$delegate;
    var tmp0_unsafeCast = tmp$ret$0[1];
    tmp$ret$1 = tmp0_unsafeCast;
    return tmp$ret$1(value);
  }
  function NewProfile$lambda$lambda($props, $state$delegate) {
    return function ($this$useEffect) {
      invoke$lambda_24($state$delegate, getStateFromProps_7($props, invoke$lambda_23($state$delegate)));
      return Unit_getInstance();
    };
  }
  function NewProfile$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate) {
    return function (event) {
      var tmp = invoke$lambda_23($state$delegate);
      var tmp_0 = event.target;
      changeCoreType_0(tmp, valueOf_0((tmp_0 instanceof HTMLInputElement ? tmp_0 : THROW_CCE()).value));
      invoke$lambda_24($state$delegate, invoke$lambda_23($state$delegate).p5n());
      return true;
    };
  }
  function NewProfile$lambda$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.nameProp = 'CoreType';
      $this$invoke.disabledProp = false;
      $this$invoke.rowProp = true;
      $this$invoke.optionsProp = invoke$lambda_23($state$delegate).c5n_1;
      $this$invoke.defaultValueProp = invoke$lambda_23($state$delegate).d5n_1.toString();
      $this$invoke.onChangeProp = NewProfile$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate);
      return Unit_getInstance();
    };
  }
  function NewProfile$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$3;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$2;
      // Inline function 'js.core.jso' call
      var tmp$ret$1;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.newProfile.NewProfile.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      tmp0_apply.display = (/*union*/{block: 'block', inline: 'inline', runIn: 'run-in', flex: 'flex', flow: 'flow', flowRoot: 'flow-root', grid: 'grid', ruby: 'ruby', table: 'table', rubyBase: 'ruby-base', rubyBaseContainer: 'ruby-base-container', rubyText: 'ruby-text', rubyTextContainer: 'ruby-text-container', tableCaption: 'table-caption', tableCell: 'table-cell', tableColumn: 'table-column', tableColumnGroup: 'table-column-group', tableFooterGroup: 'table-footer-group', tableHeaderGroup: 'table-header-group', tableRow: 'table-row', tableRowGroup: 'table-row-group', inlineBlock: 'inline-block', inlineFlex: 'inline-flex', inlineGrid: 'inline-grid', inlineListItem: 'inline-list-item', inlineTable: 'inline-table', contents: 'contents', listItem: 'list-item'}/*union*/).inlineFlex;
      tmp$ret$1 = tmp0_apply;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = css(tmp$ret$2);
      tmp1_css.className = tmp$ret$3;
      var tmp = get_CryptoACRadioGroup();
      $this$invoke.x4r(tmp, NewProfile$lambda$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate));
      return Unit_getInstance();
    };
  }
  function NewProfile$lambda$lambda$lambda$lambda$lambda($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.item = true;
      $this$invoke.xs = 12;
      $this$invoke.sm = 12;
      var tmp$ret$3;
      // Inline function 'react.dom.html.ReactHTML.div' call
      var tmp0__get_div__2k2o9m = ReactHTML_getInstance();
      var tmp$ret$2;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = 'div';
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp = tmp$ret$3;
      $this$invoke.x4r(tmp, NewProfile$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate));
      return Unit_getInstance();
    };
  }
  function NewProfile$lambda$lambda$lambda$lambda($state$delegate) {
    return function ($this$FC, it) {
      var tmp = Grid;
      $this$FC.x4r(tmp, NewProfile$lambda$lambda$lambda$lambda$lambda($state$delegate));
      return Unit_getInstance();
    };
  }
  function NewProfile$lambda$lambda$lambda($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.titleStyleProp = Themes_getInstance().g58_1;
      $this$invoke.titleTextProp = 'Select the Core Type';
      $this$invoke.titleVariantProp = 'subtitle1';
      $this$invoke.setDividerProp = true;
      var tmp$ret$2;
      // Inline function 'csstype.pct' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '95%';
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = tmp0_unsafeCast;
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      $this$invoke.dividerWidthProp = tmp$ret$2;
      $this$invoke.childProp = create(FC(NewProfile$lambda$lambda$lambda$lambda($state$delegate)));
      return Unit_getInstance();
    };
  }
  function NewProfile$lambda$lambda$lambda_0($this$invoke) {
    _init_properties_NewProfile_kt__g784eh();
    return Unit_getInstance();
  }
  function NewProfile$lambda$lambda$lambda$lambda_0($props) {
    return function (coreType) {
      $props.handleProfileWasCreatedOrModifiedProp(coreType);
      return Unit_getInstance();
    };
  }
  function NewProfile$lambda$lambda$lambda$lambda_1($state$delegate) {
    return function (newCoreType) {
      changeCoreType_0(invoke$lambda_23($state$delegate), newCoreType);
      invoke$lambda_24($state$delegate, invoke$lambda_23($state$delegate).p5n());
      return Unit_getInstance();
    };
  }
  function NewProfile$lambda$lambda$lambda$lambda_2($state$delegate) {
    return function (newRMType) {
      changeRMType(invoke$lambda_23($state$delegate), newRMType);
      invoke$lambda_24($state$delegate, invoke$lambda_23($state$delegate).p5n());
      return Unit_getInstance();
    };
  }
  function NewProfile$lambda$lambda$lambda$lambda_3($state$delegate) {
    return function (newMMType) {
      changeMMType(invoke$lambda_23($state$delegate), newMMType);
      invoke$lambda_24($state$delegate, invoke$lambda_23($state$delegate).p5n());
      return Unit_getInstance();
    };
  }
  function NewProfile$lambda$lambda$lambda$lambda_4($state$delegate) {
    return function (newDMType) {
      changeDMType(invoke$lambda_23($state$delegate), newDMType);
      invoke$lambda_24($state$delegate, invoke$lambda_23($state$delegate).p5n());
      return Unit_getInstance();
    };
  }
  function NewProfile$lambda$lambda$lambda$lambda_5($state$delegate) {
    return function (newACType) {
      changeACType(invoke$lambda_23($state$delegate), newACType);
      invoke$lambda_24($state$delegate, invoke$lambda_23($state$delegate).p5n());
      return Unit_getInstance();
    };
  }
  function NewProfile$lambda$lambda$lambda_1($props, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.handleProfileWasCreatedOrModifiedProp = NewProfile$lambda$lambda$lambda$lambda_0($props);
      $this$invoke.handleChangeCoreTypeProp = NewProfile$lambda$lambda$lambda$lambda_1($state$delegate);
      $this$invoke.handleChangeRMTypeProp = NewProfile$lambda$lambda$lambda$lambda_2($state$delegate);
      $this$invoke.handleChangeMMTypeProp = NewProfile$lambda$lambda$lambda$lambda_3($state$delegate);
      $this$invoke.handleChangeDMTypeProp = NewProfile$lambda$lambda$lambda$lambda_4($state$delegate);
      $this$invoke.handleChangeACTypeProp = NewProfile$lambda$lambda$lambda$lambda_5($state$delegate);
      $this$invoke.handleChangeBackdropIsOpenProp = $props.handleChangeBackdropIsOpenProp;
      $this$invoke.handleDisplayAlertProp = $props.handleDisplayAlertProp;
      $this$invoke.httpClientProp = $props.httpClientProp;
      $this$invoke.coreTypeProp = invoke$lambda_23($state$delegate).d5n_1;
      $this$invoke.rmTypeProp = invoke$lambda_23($state$delegate).e5n_1;
      $this$invoke.mmTypeProp = invoke$lambda_23($state$delegate).f5n_1;
      $this$invoke.dmTypeProp = invoke$lambda_23($state$delegate).g5n_1;
      $this$invoke.acTypeProp = invoke$lambda_23($state$delegate).h5n_1;
      $this$invoke.isCreatingNewProfileProp = true;
      $this$invoke.coreParametersProp = null;
      $this$invoke.usernameProp = null;
      return Unit_getInstance();
    };
  }
  function NewProfile$lambda$lambda$lambda_2($this$invoke) {
    _init_properties_NewProfile_kt__g784eh();
    return Unit_getInstance();
  }
  function NewProfile$lambda$lambda$lambda$lambda$lambda$lambda_0($state$delegate) {
    return function (newChoice) {
      changeRMType(invoke$lambda_23($state$delegate), valueOf_4(newChoice));
      invoke$lambda_24($state$delegate, invoke$lambda_23($state$delegate).p5n());
      return Unit_getInstance();
    };
  }
  function NewProfile$lambda$lambda$lambda$lambda$lambda_0($state$delegate) {
    return function ($this$invoke) {
      SERVER_getInstance();
      $this$invoke.nameProp = 'RM';
      $this$invoke.titleProp = 'Select the Reference Monitor';
      $this$invoke.defaultValueProp = invoke$lambda_23($state$delegate).e5n_1.toString();
      $this$invoke.optionsProp = invoke$lambda_23($state$delegate).i5n_1;
      $this$invoke.handleChangeChoiceProp = NewProfile$lambda$lambda$lambda$lambda$lambda$lambda_0($state$delegate);
      return Unit_getInstance();
    };
  }
  function NewProfile$lambda$lambda$lambda$lambda_6($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.item = true;
      $this$invoke.sm = 12;
      $this$invoke.md = 6;
      var tmp = get_ModuleItem();
      $this$invoke.x4r(tmp, NewProfile$lambda$lambda$lambda$lambda$lambda_0($state$delegate));
      return Unit_getInstance();
    };
  }
  function NewProfile$lambda$lambda$lambda$lambda$lambda$lambda_1($state$delegate) {
    return function (newChoice) {
      changeMMType(invoke$lambda_23($state$delegate), valueOf_3(newChoice));
      invoke$lambda_24($state$delegate, invoke$lambda_23($state$delegate).p5n());
      return Unit_getInstance();
    };
  }
  function NewProfile$lambda$lambda$lambda$lambda$lambda_1($state$delegate) {
    return function ($this$invoke) {
      SERVER_getInstance();
      $this$invoke.nameProp = 'MM';
      $this$invoke.titleProp = 'Select the Metadata Manager';
      $this$invoke.defaultValueProp = invoke$lambda_23($state$delegate).f5n_1.toString();
      $this$invoke.optionsProp = invoke$lambda_23($state$delegate).j5n_1;
      $this$invoke.handleChangeChoiceProp = NewProfile$lambda$lambda$lambda$lambda$lambda$lambda_1($state$delegate);
      return Unit_getInstance();
    };
  }
  function NewProfile$lambda$lambda$lambda$lambda_7($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.item = true;
      $this$invoke.sm = 12;
      $this$invoke.md = 6;
      var tmp = get_ModuleItem();
      $this$invoke.x4r(tmp, NewProfile$lambda$lambda$lambda$lambda$lambda_1($state$delegate));
      return Unit_getInstance();
    };
  }
  function NewProfile$lambda$lambda$lambda$lambda$lambda$lambda_2($state$delegate) {
    return function (newChoice) {
      changeDMType(invoke$lambda_23($state$delegate), valueOf_2(newChoice));
      invoke$lambda_24($state$delegate, invoke$lambda_23($state$delegate).p5n());
      return Unit_getInstance();
    };
  }
  function NewProfile$lambda$lambda$lambda$lambda$lambda_2($state$delegate) {
    return function ($this$invoke) {
      SERVER_getInstance();
      $this$invoke.nameProp = 'DM';
      $this$invoke.titleProp = 'Select the Data Manager';
      $this$invoke.defaultValueProp = invoke$lambda_23($state$delegate).g5n_1.toString();
      $this$invoke.optionsProp = invoke$lambda_23($state$delegate).k5n_1;
      $this$invoke.handleChangeChoiceProp = NewProfile$lambda$lambda$lambda$lambda$lambda$lambda_2($state$delegate);
      return Unit_getInstance();
    };
  }
  function NewProfile$lambda$lambda$lambda$lambda_8($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.item = true;
      $this$invoke.sm = 12;
      $this$invoke.md = 6;
      var tmp = get_ModuleItem();
      $this$invoke.x4r(tmp, NewProfile$lambda$lambda$lambda$lambda$lambda_2($state$delegate));
      return Unit_getInstance();
    };
  }
  function NewProfile$lambda$lambda$lambda$lambda$lambda$lambda_3($state$delegate) {
    return function (newChoice) {
      changeACType(invoke$lambda_23($state$delegate), valueOf(newChoice));
      invoke$lambda_24($state$delegate, invoke$lambda_23($state$delegate).p5n());
      return Unit_getInstance();
    };
  }
  function NewProfile$lambda$lambda$lambda$lambda$lambda_3($state$delegate) {
    return function ($this$invoke) {
      SERVER_getInstance();
      $this$invoke.nameProp = 'AC';
      $this$invoke.titleProp = 'Select the traditional AC';
      $this$invoke.defaultValueProp = invoke$lambda_23($state$delegate).h5n_1.toString();
      $this$invoke.optionsProp = invoke$lambda_23($state$delegate).l5n_1;
      $this$invoke.handleChangeChoiceProp = NewProfile$lambda$lambda$lambda$lambda$lambda$lambda_3($state$delegate);
      return Unit_getInstance();
    };
  }
  function NewProfile$lambda$lambda$lambda$lambda_9($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.item = true;
      $this$invoke.sm = 12;
      $this$invoke.md = 6;
      var tmp = get_ModuleItem();
      $this$invoke.x4r(tmp, NewProfile$lambda$lambda$lambda$lambda$lambda_3($state$delegate));
      return Unit_getInstance();
    };
  }
  function NewProfile$lambda$lambda$lambda_3($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.container = true;
      $this$invoke.spacing = 1;
      var tmp = Grid;
      $this$invoke.x4r(tmp, NewProfile$lambda$lambda$lambda$lambda_6($state$delegate));
      var tmp_0 = Grid;
      $this$invoke.x4r(tmp_0, NewProfile$lambda$lambda$lambda$lambda_7($state$delegate));
      var tmp_1 = Grid;
      $this$invoke.x4r(tmp_1, NewProfile$lambda$lambda$lambda$lambda_8($state$delegate));
      var tmp_2 = Grid;
      $this$invoke.x4r(tmp_2, NewProfile$lambda$lambda$lambda$lambda_9($state$delegate));
      return Unit_getInstance();
    };
  }
  function NewProfile$lambda$lambda_0($state$delegate, $props) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$9;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$8;
      // Inline function 'js.core.jso' call
      var tmp$ret$7;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.newProfile.NewProfile.<anonymous>.<anonymous>.<anonymous>' call
      tmp0_apply.textAlign = (/*union*/{center: 'center', end: 'end', justify: 'justify', left: 'left', matchParent: 'match-parent', right: 'right', start: 'start'}/*union*/).center;
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '10px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.paddingTop = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '10px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      tmp0_apply.paddingBottom = tmp$ret$6;
      tmp$ret$7 = tmp0_apply;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = css(tmp$ret$8);
      tmp1_css.className = tmp$ret$9;
      var tmp = get_CryptoACPaper();
      $this$invoke.x4r(tmp, NewProfile$lambda$lambda$lambda($state$delegate));
      var tmp_0;
      var tmp$ret$10;
      // Inline function 'kotlin.collections.isNotEmpty' call
      var tmp2_isNotEmpty = invoke$lambda_23($state$delegate).c5n_1;
      tmp$ret$10 = !tmp2_isNotEmpty.l();
      if (tmp$ret$10) {
        var tmp$ret$14;
        // Inline function 'react.dom.html.ReactHTML.br' call
        var tmp3__get_br__yve28y = ReactHTML_getInstance();
        var tmp$ret$13;
        // Inline function 'react.IntrinsicType' call
        var tmp$ret$12;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp$ret$11;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$11 = 'br';
        tmp$ret$12 = tmp$ret$11;
        tmp$ret$13 = tmp$ret$12;
        tmp$ret$14 = tmp$ret$13;
        var tmp_1 = tmp$ret$14;
        $this$invoke.x4r(tmp_1, NewProfile$lambda$lambda$lambda_0);
        var tmp_2 = get_CryptoACEditProfileForm();
        $this$invoke.x4r(tmp_2, NewProfile$lambda$lambda$lambda_1($props, $state$delegate));
        var tmp$ret$18;
        // Inline function 'react.dom.html.ReactHTML.br' call
        var tmp4__get_br__wwq0xp = ReactHTML_getInstance();
        var tmp$ret$17;
        // Inline function 'react.IntrinsicType' call
        var tmp$ret$16;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp$ret$15;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$15 = 'br';
        tmp$ret$16 = tmp$ret$15;
        tmp$ret$17 = tmp$ret$16;
        tmp$ret$18 = tmp$ret$17;
        var tmp_3 = tmp$ret$18;
        $this$invoke.x4r(tmp_3, NewProfile$lambda$lambda$lambda_2);
        var tmp_4 = Grid;
        $this$invoke.x4r(tmp_4, NewProfile$lambda$lambda$lambda_3($state$delegate));
        tmp_0 = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function changeRMType$lambda($newRMType) {
    return function () {
      return "Setting the 'rmType' state to " + $newRMType;
    };
  }
  function changeMMType$lambda($newMMType) {
    return function () {
      return "Setting the 'mmType' state to " + $newMMType;
    };
  }
  function changeDMType$lambda($newDMType) {
    return function () {
      return "Setting the 'dmType' state to " + $newDMType;
    };
  }
  function changeACType$lambda($newACType) {
    return function () {
      return "Setting the 'acType' state to " + $newACType;
    };
  }
  function changeCoreType$lambda_0($newCoreType) {
    return function () {
      return "Changing the 'coreType' state to " + $newCoreType;
    };
  }
  var properties_initialized_NewProfile_kt_s4j43v;
  function _init_properties_NewProfile_kt__g784eh() {
    if (properties_initialized_NewProfile_kt_s4j43v) {
    } else {
      properties_initialized_NewProfile_kt_s4j43v = true;
      var tmp = KotlinLogging_getInstance();
      logger_8 = tmp.b4r(logger$lambda_8);
      NewProfile = FC(NewProfile$lambda);
    }
  }
  function Companion_26() {
    Companion_instance_26 = this;
  }
  protoOf(Companion_26).q5n = function (assignments) {
    var tmp$ret$0;
    // Inline function 'kotlin.collections.hashMapOf' call
    tmp$ret$0 = HashMap_init_$Create$();
    var arcs = tmp$ret$0;
    var hybrid = false;
    var tmp$ret$1;
    // Inline function 'kotlin.collections.hashSetOf' call
    tmp$ret$1 = HashSet_init_$Create$();
    var entitiesAlreadyPresent = tmp$ret$1;
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator = assignments.f();
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.Companion.architectureFromAssignments.<anonymous>' call
      var tmp$ret$4;
      // Inline function 'kotlin.collections.getOrPut' call
      var tmp0_getOrPut = element.r5n_1;
      var value = arcs.y1(tmp0_getOrPut);
      var tmp;
      if (value == null) {
        var tmp$ret$3;
        // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.Companion.architectureFromAssignments.<anonymous>.<anonymous>' call
        var tmp$ret$2;
        // Inline function 'kotlin.collections.mutableListOf' call
        tmp$ret$2 = ArrayList_init_$Create$();
        tmp$ret$3 = tmp$ret$2;
        var answer = tmp$ret$3;
        arcs.y2(tmp0_getOrPut, answer);
        tmp = answer;
      } else {
        tmp = value;
      }
      tmp$ret$4 = tmp;
      tmp$ret$4.a(element.s5n_1);
      if (entitiesAlreadyPresent.b1(element.s5n_1)) {
        hybrid = true;
      } else {
        entitiesAlreadyPresent.a(element.s5n_1);
      }
    }
    return new Architecture(arcs, hybrid);
  };
  var Companion_instance_26;
  function Companion_getInstance_31() {
    if (Companion_instance_26 == null)
      new Companion_26();
    return Companion_instance_26;
  }
  function Architecture(arcs, hybrid) {
    Companion_getInstance_31();
    this.t5n_1 = arcs;
    this.u5n_1 = hybrid;
    var tmp = this;
    var tmp$ret$0;
    // Inline function 'kotlin.collections.hashMapOf' call
    tmp$ret$0 = HashMap_init_$Create$();
    tmp.v5n_1 = tmp$ret$0;
    this.w5n_1 = 0;
  }
  protoOf(Architecture).toString = function () {
    return 'Architecture(arcs=' + this.t5n_1 + ', hybrid=' + this.u5n_1 + ')';
  };
  function Assignment(domain, entity) {
    this.r5n_1 = domain;
    this.s5n_1 = entity;
  }
  protoOf(Assignment).toString = function () {
    return "Assignment(domain='" + this.r5n_1 + "', entity='" + this.s5n_1 + "')";
  };
  protoOf(Assignment).equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !(this.constructor == other.constructor))
      return false;
    if (other instanceof Assignment)
      other;
    else
      THROW_CCE();
    if (!this.r5n_1.equals(other.r5n_1))
      return false;
    if (!this.s5n_1.equals(other.s5n_1))
      return false;
    return true;
  };
  protoOf(Assignment).hashCode = function () {
    var result = this.r5n_1.hashCode();
    result = imul(31, result) + this.s5n_1.hashCode() | 0;
    return result;
  };
  function powerSet(_this__u8e3s4) {
    return powerSet_0(_this__u8e3s4, setOf(emptySet()));
  }
  function powerSet_0(left, acc) {
    var left_0 = left;
    var acc_0 = acc;
    $l$1: do {
      $l$0: do {
        var tmp;
        if (left_0.l()) {
          tmp = acc_0;
        } else {
          var tmp0 = drop(left_0, 1);
          var tmp_0 = acc_0;
          var tmp$ret$2;
          // Inline function 'kotlin.collections.map' call
          var tmp$ret$1;
          // Inline function 'kotlin.collections.mapTo' call
          var tmp0_mapTo = ArrayList_init_$Create$_0(collectionSizeOrDefault(acc_0, 10));
          var tmp0_iterator = acc_0.f();
          while (tmp0_iterator.g()) {
            var item = tmp0_iterator.h();
            var tmp$ret$0;
            // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.powerSet.<anonymous>' call
            tmp$ret$0 = plus_1(item, first(left_0));
            tmp0_mapTo.a(tmp$ret$0);
          }
          tmp$ret$1 = tmp0_mapTo;
          tmp$ret$2 = tmp$ret$1;
          var tmp1 = plus_2(tmp_0, tmp$ret$2);
          left_0 = tmp0;
          acc_0 = tmp1;
          continue $l$0;
        }
        return tmp;
      }
       while (false);
    }
     while (true);
  }
  function Attacker(attacker, likelihood) {
    likelihood = likelihood === VOID ? Likelihood_High_getInstance() : likelihood;
    this.x5n_1 = attacker;
    this.y5n_1 = likelihood;
  }
  protoOf(Attacker).toString = function () {
    return 'Attacker(attacker=' + this.x5n_1 + ', likelihood=' + this.y5n_1 + ')';
  };
  protoOf(Attacker).hashCode = function () {
    var result = this.x5n_1.hashCode();
    result = imul(result, 31) + this.y5n_1.hashCode() | 0;
    return result;
  };
  protoOf(Attacker).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof Attacker))
      return false;
    var tmp0_other_with_cast = other instanceof Attacker ? other : THROW_CCE();
    if (!this.x5n_1.equals(tmp0_other_with_cast.x5n_1))
      return false;
    if (!this.y5n_1.equals(tmp0_other_with_cast.y5n_1))
      return false;
    return true;
  };
  function get_EntityIcon() {
    _init_properties_EntityIcon_kt__bjgkkk();
    return EntityIcon;
  }
  var EntityIcon;
  function EntityIconState(opacityState) {
    opacityState = opacityState === VOID ? 1.0 : opacityState;
    this.z5n_1 = opacityState;
  }
  protoOf(EntityIconState).a5o = function (opacityState) {
    return new EntityIconState(opacityState);
  };
  protoOf(EntityIconState).toString = function () {
    return 'EntityIconState(opacityState=' + this.z5n_1 + ')';
  };
  protoOf(EntityIconState).hashCode = function () {
    return getNumberHashCode(this.z5n_1);
  };
  protoOf(EntityIconState).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof EntityIconState))
      return false;
    var tmp0_other_with_cast = other instanceof EntityIconState ? other : THROW_CCE();
    if (!equals(this.z5n_1, tmp0_other_with_cast.z5n_1))
      return false;
    return true;
  };
  function EntityIcon$lambda($this$FC, props) {
    _init_properties_EntityIcon_kt__bjgkkk();
    var state$delegate = useState(new EntityIconState());
    var tmp$ret$3;
    // Inline function 'react.dom.html.ReactHTML.img' call
    var tmp0__get_img__2k5xt4 = ReactHTML_getInstance();
    var tmp$ret$2;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = 'img';
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    var tmp = tmp$ret$3;
    $this$FC.x4r(tmp, EntityIcon$lambda$lambda(props, state$delegate));
    return Unit_getInstance();
  }
  function invoke$lambda_25($state$delegate) {
    _init_properties_EntityIcon_kt__bjgkkk();
    var tmp$ret$2;
    // Inline function 'react.StateInstance.getValue' call
    var tmp1_getValue = getLocalDelegateReference('state', KMutableProperty0, true, function () {
      return THROW_ISE();
    });
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = $state$delegate;
    var tmp0_unsafeCast = tmp$ret$0[0];
    tmp$ret$1 = tmp0_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  }
  function invoke$lambda_26($state$delegate, value) {
    _init_properties_EntityIcon_kt__bjgkkk();
    var tmp1_setValue = getLocalDelegateReference('state', KMutableProperty0, true, function () {
      return THROW_ISE();
    });
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = $state$delegate;
    var tmp0_unsafeCast = tmp$ret$0[1];
    tmp$ret$1 = tmp0_unsafeCast;
    return tmp$ret$1(value);
  }
  function EntityIcon$lambda$lambda$lambda($props, $state$delegate) {
    return function (_anonymous_parameter_0__qggqh8) {
      var tmp;
      if (!equals($props.onClickProp, undefined)) {
        var tmp_0 = invoke$lambda_25($state$delegate);
        var tmp_1;
        if (invoke$lambda_25($state$delegate).z5n_1 === 1.0) {
          $props.onClickProp($props.entityProp, $props.domainProp, false);
          tmp_1 = 0.5;
        } else {
          $props.onClickProp($props.entityProp, $props.domainProp, true);
          tmp_1 = 1.0;
        }
        invoke$lambda_26($state$delegate, tmp_0.a5o(tmp_1));
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function EntityIcon$lambda$lambda($props, $state$delegate) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$9;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$8;
      // Inline function 'js.core.jso' call
      var tmp$ret$7;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.EntityIcon.<anonymous>.<anonymous>.<anonymous>' call
      tmp0_apply.verticalAlign = (/*union*/{baseline: 'baseline', bottom: 'bottom', middle: 'middle', sub: 'sub', super: 'super', textBottom: 'text-bottom', textTop: 'text-top', top: 'top'}/*union*/).middle;
      var tmp$ret$3;
      // Inline function 'csstype.number' call
      var tmp0_number = invoke$lambda_25($state$delegate).z5n_1;
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_number;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.opacity = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '3px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      tmp0_apply.padding = tmp$ret$6;
      tmp$ret$7 = tmp0_apply;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = css(tmp$ret$8);
      tmp1_css.className = tmp$ret$9;
      $this$invoke.width = 30.0;
      $this$invoke.height = 30.0;
      $this$invoke.src = $props.srcProp;
      $this$invoke.onClick = EntityIcon$lambda$lambda$lambda($props, $state$delegate);
      return Unit_getInstance();
    };
  }
  var properties_initialized_EntityIcon_kt_f9tkse;
  function _init_properties_EntityIcon_kt__bjgkkk() {
    if (properties_initialized_EntityIcon_kt_f9tkse) {
    } else {
      properties_initialized_EntityIcon_kt_f9tkse = true;
      EntityIcon = FC(EntityIcon$lambda);
    }
  }
  function Requirement(name, weight, thresholdType, thresholdValue, penalty) {
    weight = weight === VOID ? 1 : weight;
    thresholdType = thresholdType === VOID ? Threshold_None_getInstance() : thresholdType;
    thresholdValue = thresholdValue === VOID ? 0 : thresholdValue;
    penalty = penalty === VOID ? 0 : penalty;
    this.b5o_1 = name;
    this.c5o_1 = weight;
    this.d5o_1 = thresholdType;
    this.e5o_1 = thresholdValue;
    this.f5o_1 = penalty;
  }
  protoOf(Requirement).equals = function (other) {
    if (this === other)
      return true;
    if (other == null ? true : !(this.constructor == other.constructor))
      return false;
    if (other instanceof Requirement)
      other;
    else
      THROW_CCE();
    if (!(this.b5o_1 === other.b5o_1))
      return false;
    if (!(this.c5o_1 === other.c5o_1))
      return false;
    if (!this.d5o_1.equals(other.d5o_1))
      return false;
    if (!(this.e5o_1 === other.e5o_1))
      return false;
    if (!(this.f5o_1 === other.f5o_1))
      return false;
    return true;
  };
  protoOf(Requirement).hashCode = function () {
    var result = getStringHashCode(this.b5o_1);
    result = imul(31, result) + this.c5o_1 | 0;
    result = imul(31, result) + this.d5o_1.hashCode() | 0;
    result = imul(31, result) + this.e5o_1 | 0;
    result = imul(31, result) + this.f5o_1 | 0;
    return result;
  };
  protoOf(Requirement).toString = function () {
    return 'Requirement(name=' + this.b5o_1 + ', weight=' + this.c5o_1 + ', thresholdType=' + this.d5o_1 + ', thresholdValue=' + this.e5o_1 + ', penalty=' + this.f5o_1 + ')';
  };
  function get_RequirementItem() {
    _init_properties_RequirementItem_kt__b6upmk();
    return RequirementItem;
  }
  var RequirementItem;
  function RequirementItem$lambda($this$FC, props) {
    _init_properties_RequirementItem_kt__b6upmk();
    var tmp$ret$3;
    // Inline function 'react.dom.html.ReactHTML.td' call
    var tmp0__get_td__p4dsv3 = ReactHTML_getInstance();
    var tmp$ret$2;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = 'td';
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    var tmp = tmp$ret$3;
    $this$FC.x4r(tmp, RequirementItem$lambda$lambda(props));
    var tmp$ret$7;
    // Inline function 'react.dom.html.ReactHTML.td' call
    var tmp1__get_td__sddrnk = ReactHTML_getInstance();
    var tmp$ret$6;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$5;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$4;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$4 = 'td';
    tmp$ret$5 = tmp$ret$4;
    tmp$ret$6 = tmp$ret$5;
    tmp$ret$7 = tmp$ret$6;
    var tmp_0 = tmp$ret$7;
    $this$FC.x4r(tmp_0, RequirementItem$lambda$lambda_0(props));
    var tmp$ret$11;
    // Inline function 'react.dom.html.ReactHTML.td' call
    var tmp2__get_td__vmdqg1 = ReactHTML_getInstance();
    var tmp$ret$10;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$9;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$8;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$8 = 'td';
    tmp$ret$9 = tmp$ret$8;
    tmp$ret$10 = tmp$ret$9;
    tmp$ret$11 = tmp$ret$10;
    var tmp_1 = tmp$ret$11;
    $this$FC.x4r(tmp_1, RequirementItem$lambda$lambda_1(props));
    var tmp$ret$15;
    // Inline function 'react.dom.html.ReactHTML.td' call
    var tmp3__get_td__yvdp8i = ReactHTML_getInstance();
    var tmp$ret$14;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$13;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$12;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$12 = 'td';
    tmp$ret$13 = tmp$ret$12;
    tmp$ret$14 = tmp$ret$13;
    tmp$ret$15 = tmp$ret$14;
    var tmp_2 = tmp$ret$15;
    $this$FC.x4r(tmp_2, RequirementItem$lambda$lambda_2(props));
    var tmp$ret$19;
    // Inline function 'react.dom.html.ReactHTML.td' call
    var tmp4__get_td__wwqdy5 = ReactHTML_getInstance();
    var tmp$ret$18;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$17;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$16;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$16 = 'td';
    tmp$ret$17 = tmp$ret$16;
    tmp$ret$18 = tmp$ret$17;
    tmp$ret$19 = tmp$ret$18;
    var tmp_3 = tmp$ret$19;
    $this$FC.x4r(tmp_3, RequirementItem$lambda$lambda_3(props));
    return Unit_getInstance();
  }
  function RequirementItem$lambda$lambda($props) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$18;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$17;
      // Inline function 'js.core.jso' call
      var tmp$ret$16;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.RequirementItem.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$9;
      // Inline function 'csstype.Padding' call
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '10px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp3_Padding = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '10px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      var tmp4_Padding = tmp$ret$6;
      var tmp$ret$8;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp2_unsafeCast = '' + tmp3_Padding + ' ' + tmp4_Padding;
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = tmp2_unsafeCast;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      tmp0_apply.padding = tmp$ret$9;
      var tmp$ret$12;
      // Inline function 'csstype.px' call
      var tmp$ret$11;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp5_unsafeCast = '160px';
      var tmp$ret$10;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$10 = tmp5_unsafeCast;
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = tmp$ret$11;
      tmp0_apply.width = tmp$ret$12;
      tmp0_apply.textAlign = (/*union*/{center: 'center', end: 'end', justify: 'justify', left: 'left', matchParent: 'match-parent', right: 'right', start: 'start'}/*union*/).left;
      if ($props.lastProp) {
        var tmp$ret$15;
        // Inline function 'csstype.px' call
        var tmp$ret$14;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp6_unsafeCast = '15px';
        var tmp$ret$13;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$13 = tmp6_unsafeCast;
        tmp$ret$14 = tmp$ret$13;
        tmp$ret$15 = tmp$ret$14;
        tmp0_apply.borderBottomLeftRadius = tmp$ret$15;
      }
      tmp$ret$16 = tmp0_apply;
      tmp$ret$17 = tmp$ret$16;
      tmp$ret$18 = css(tmp$ret$17);
      tmp1_css.className = tmp$ret$18;
      $this$invoke.w4r(replace($props.requirementProp.b5o_1, '_', '-'));
      return Unit_getInstance();
    };
  }
  function RequirementItem$lambda$lambda$lambda$lambda$lambda($props) {
    return function (it) {
      var newWeight = toInt(it);
      $props.handleChangeWeightValueProp(newWeight);
      return Unit_getInstance();
    };
  }
  function RequirementItem$lambda$lambda$lambda$lambda($props) {
    return function ($this$invoke) {
      $this$invoke.classNameProp = 'darkTextField';
      $this$invoke.defaultValueProp = $props.defaultValueProp.c5o_1.toString();
      $this$invoke.typeProp = 'Number';
      $this$invoke.colorProp = 'primary';
      $this$invoke.onChangeProp = RequirementItem$lambda$lambda$lambda$lambda$lambda($props);
      return Unit_getInstance();
    };
  }
  function RequirementItem$lambda$lambda$lambda($props) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$6;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$5;
      // Inline function 'js.core.jso' call
      var tmp$ret$4;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.RequirementItem.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'csstype.Color' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = '#000000';
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.color = tmp$ret$3;
      tmp$ret$4 = tmp0_apply;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = css(tmp$ret$5);
      tmp1_css.className = tmp$ret$6;
      var tmp = get_CryptoACTextField();
      $this$invoke.x4r(tmp, RequirementItem$lambda$lambda$lambda$lambda($props));
      return Unit_getInstance();
    };
  }
  function RequirementItem$lambda$lambda_0($props) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$12;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$11;
      // Inline function 'js.core.jso' call
      var tmp$ret$10;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.RequirementItem.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$9;
      // Inline function 'csstype.Padding' call
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '10px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp3_Padding = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '10px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      var tmp4_Padding = tmp$ret$6;
      var tmp$ret$8;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp2_unsafeCast = '' + tmp3_Padding + ' ' + tmp4_Padding;
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = tmp2_unsafeCast;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      tmp0_apply.padding = tmp$ret$9;
      tmp$ret$10 = tmp0_apply;
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = css(tmp$ret$11);
      tmp1_css.className = tmp$ret$12;
      var tmp$ret$16;
      // Inline function 'react.dom.html.ReactHTML.div' call
      var tmp2__get_div__e5gx5o = ReactHTML_getInstance();
      var tmp$ret$15;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$14;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$13;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$13 = 'div';
      tmp$ret$14 = tmp$ret$13;
      tmp$ret$15 = tmp$ret$14;
      tmp$ret$16 = tmp$ret$15;
      var tmp = tmp$ret$16;
      $this$invoke.x4r(tmp, RequirementItem$lambda$lambda$lambda($props));
      return Unit_getInstance();
    };
  }
  function RequirementItem$lambda$lambda$lambda$lambda_0($props) {
    return function (e) {
      var newThresholdType = valueOf_11(e);
      $props.handleChangeThresholdTypeProp(newThresholdType);
      return Unit_getInstance();
    };
  }
  function RequirementItem$lambda$lambda$lambda_0($props) {
    return function ($this$invoke) {
      $this$invoke.nameProp = 'threshold';
      $this$invoke.idProp = 'threshold';
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp1_map = values_16();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$_0(tmp1_map.length);
      var indexedObject = tmp1_map;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var item = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.RequirementItem.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
        tmp$ret$0 = item.toString();
        tmp0_mapTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo;
      tmp$ret$2 = tmp$ret$1;
      $this$invoke.optionsProp = tmp$ret$2;
      $this$invoke.defaultValueProp = $props.defaultValueProp.d5o_1.toString();
      $this$invoke.onChangeProp = RequirementItem$lambda$lambda$lambda$lambda_0($props);
      return Unit_getInstance();
    };
  }
  function RequirementItem$lambda$lambda_1($props) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$12;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$11;
      // Inline function 'js.core.jso' call
      var tmp$ret$10;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.RequirementItem.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$9;
      // Inline function 'csstype.Padding' call
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '10px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp3_Padding = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '10px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      var tmp4_Padding = tmp$ret$6;
      var tmp$ret$8;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp2_unsafeCast = '' + tmp3_Padding + ' ' + tmp4_Padding;
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = tmp2_unsafeCast;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      tmp0_apply.padding = tmp$ret$9;
      tmp$ret$10 = tmp0_apply;
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = css(tmp$ret$11);
      tmp1_css.className = tmp$ret$12;
      var tmp = get_CryptoACSelect();
      $this$invoke.x4r(tmp, RequirementItem$lambda$lambda$lambda_0($props));
      return Unit_getInstance();
    };
  }
  function RequirementItem$lambda$lambda$lambda$lambda$lambda_0($props) {
    return function (it) {
      var newThreshold = toInt(it);
      $props.handleChangeThresholdValueProp(newThreshold);
      return Unit_getInstance();
    };
  }
  function RequirementItem$lambda$lambda$lambda$lambda_1($props) {
    return function ($this$invoke) {
      $this$invoke.defaultValueProp = $props.defaultValueProp.e5o_1.toString();
      $this$invoke.typeProp = 'Number';
      $this$invoke.colorProp = 'primary';
      $this$invoke.disabledProp = $props.requirementProp.d5o_1.equals(Threshold_None_getInstance());
      var tmp;
      if ($props.requirementProp.d5o_1.equals(Threshold_None_getInstance())) {
        tmp = 'greyTextField';
      } else {
        tmp = 'darkTextField';
      }
      $this$invoke.classNameProp = tmp;
      var tmp_0;
      if ($props.requirementProp.d5o_1.equals(Threshold_None_getInstance())) {
        tmp_0 = 'greyTextField';
      } else {
        tmp_0 = 'darkTextField';
      }
      $this$invoke.classNameProp = tmp_0;
      $this$invoke.onChangeProp = RequirementItem$lambda$lambda$lambda$lambda$lambda_0($props);
      return Unit_getInstance();
    };
  }
  function RequirementItem$lambda$lambda$lambda_1($props) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$6;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$5;
      // Inline function 'js.core.jso' call
      var tmp$ret$4;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.RequirementItem.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'csstype.Color' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = '#000000';
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.color = tmp$ret$3;
      tmp$ret$4 = tmp0_apply;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = css(tmp$ret$5);
      tmp1_css.className = tmp$ret$6;
      var tmp = get_CryptoACTextField();
      $this$invoke.x4r(tmp, RequirementItem$lambda$lambda$lambda$lambda_1($props));
      return Unit_getInstance();
    };
  }
  function RequirementItem$lambda$lambda_2($props) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$12;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$11;
      // Inline function 'js.core.jso' call
      var tmp$ret$10;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.RequirementItem.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$9;
      // Inline function 'csstype.Padding' call
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '10px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp3_Padding = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '10px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      var tmp4_Padding = tmp$ret$6;
      var tmp$ret$8;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp2_unsafeCast = '' + tmp3_Padding + ' ' + tmp4_Padding;
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = tmp2_unsafeCast;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      tmp0_apply.padding = tmp$ret$9;
      tmp$ret$10 = tmp0_apply;
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = css(tmp$ret$11);
      tmp1_css.className = tmp$ret$12;
      var tmp$ret$16;
      // Inline function 'react.dom.html.ReactHTML.div' call
      var tmp2__get_div__e5gx5o = ReactHTML_getInstance();
      var tmp$ret$15;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$14;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$13;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$13 = 'div';
      tmp$ret$14 = tmp$ret$13;
      tmp$ret$15 = tmp$ret$14;
      tmp$ret$16 = tmp$ret$15;
      var tmp = tmp$ret$16;
      $this$invoke.x4r(tmp, RequirementItem$lambda$lambda$lambda_1($props));
      return Unit_getInstance();
    };
  }
  function RequirementItem$lambda$lambda$lambda$lambda$lambda_1($props) {
    return function (it) {
      var newPenalty = toInt(it);
      $props.handleChangePenaltyValueProp(newPenalty);
      return Unit_getInstance();
    };
  }
  function RequirementItem$lambda$lambda$lambda$lambda_2($props) {
    return function ($this$invoke) {
      $this$invoke.defaultValueProp = $props.defaultValueProp.f5o_1.toString();
      $this$invoke.typeProp = 'Number';
      $this$invoke.colorProp = 'primary';
      $this$invoke.disabledProp = $props.requirementProp.d5o_1.equals(Threshold_None_getInstance());
      var tmp;
      if ($props.requirementProp.d5o_1.equals(Threshold_None_getInstance())) {
        tmp = 'greyTextField';
      } else {
        tmp = 'darkTextField';
      }
      $this$invoke.classNameProp = tmp;
      $this$invoke.onChangeProp = RequirementItem$lambda$lambda$lambda$lambda$lambda_1($props);
      return Unit_getInstance();
    };
  }
  function RequirementItem$lambda$lambda$lambda_2($props) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$6;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$5;
      // Inline function 'js.core.jso' call
      var tmp$ret$4;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.RequirementItem.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'csstype.Color' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = '#000000';
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.color = tmp$ret$3;
      tmp$ret$4 = tmp0_apply;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = css(tmp$ret$5);
      tmp1_css.className = tmp$ret$6;
      var tmp = get_CryptoACTextField();
      $this$invoke.x4r(tmp, RequirementItem$lambda$lambda$lambda$lambda_2($props));
      return Unit_getInstance();
    };
  }
  function RequirementItem$lambda$lambda_3($props) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$15;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$14;
      // Inline function 'js.core.jso' call
      var tmp$ret$13;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.RequirementItem.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$9;
      // Inline function 'csstype.Padding' call
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '10px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp3_Padding = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '10px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      var tmp4_Padding = tmp$ret$6;
      var tmp$ret$8;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp2_unsafeCast = '' + tmp3_Padding + ' ' + tmp4_Padding;
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = tmp2_unsafeCast;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      tmp0_apply.padding = tmp$ret$9;
      if ($props.lastProp) {
        var tmp$ret$12;
        // Inline function 'csstype.px' call
        var tmp$ret$11;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp5_unsafeCast = '15px';
        var tmp$ret$10;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$10 = tmp5_unsafeCast;
        tmp$ret$11 = tmp$ret$10;
        tmp$ret$12 = tmp$ret$11;
        tmp0_apply.borderBottomRightRadius = tmp$ret$12;
      }
      tmp$ret$13 = tmp0_apply;
      tmp$ret$14 = tmp$ret$13;
      tmp$ret$15 = css(tmp$ret$14);
      tmp1_css.className = tmp$ret$15;
      var tmp$ret$19;
      // Inline function 'react.dom.html.ReactHTML.div' call
      var tmp2__get_div__e5gx5o = ReactHTML_getInstance();
      var tmp$ret$18;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$17;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$16;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$16 = 'div';
      tmp$ret$17 = tmp$ret$16;
      tmp$ret$18 = tmp$ret$17;
      tmp$ret$19 = tmp$ret$18;
      var tmp = tmp$ret$19;
      $this$invoke.x4r(tmp, RequirementItem$lambda$lambda$lambda_2($props));
      return Unit_getInstance();
    };
  }
  var properties_initialized_RequirementItem_kt_4giaje;
  function _init_properties_RequirementItem_kt__b6upmk() {
    if (properties_initialized_RequirementItem_kt_4giaje) {
    } else {
      properties_initialized_RequirementItem_kt_4giaje = true;
      RequirementItem = FC(RequirementItem$lambda);
    }
  }
  function get_logger_7() {
    _init_properties_TradeOffBoard_kt__qccrih();
    return logger_9;
  }
  var logger_9;
  function get_TradeOffBoard() {
    _init_properties_TradeOffBoard_kt__qccrih();
    return TradeOffBoard;
  }
  var TradeOffBoard;
  function get_performanceRequirementsImpact() {
    _init_properties_TradeOffBoard_kt__qccrih();
    return performanceRequirementsImpact;
  }
  var performanceRequirementsImpact;
  function get_securityRequirementsImpact() {
    _init_properties_TradeOffBoard_kt__qccrih();
    return securityRequirementsImpact;
  }
  var securityRequirementsImpact;
  function TradeOffBoardState(assignmentsState, numberOfInstancesState, architecturesState, performanceRequirementsInputsState, securityRequirementsInputsState, attackersInputState, domainsState, entitiesState) {
    var tmp;
    if (assignmentsState === VOID) {
      var tmp$ret$1;
      var tmp$ret$1_0;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      var tmp$ret$0_0;
      // Inline function 'kotlin.collections.hashMapOf' call
      tmp$ret$0 = HashMap_init_$Create$();
      tmp$ret$0_0 = Unit_getInstance();
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoardState.<init>.<anonymous>' call
      // Inline function 'kotlin.collections.forEach' call
      var tmp0_forEach = values_13();
      var indexedObject = tmp0_forEach;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var element = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoardState.<init>.<anonymous>.<anonymous>' call
        // Inline function 'kotlin.collections.set' call
        var tmp0_set = toMutableList_0(values_14());
        tmp0_apply.y2(element, tmp0_set);
      }
      tmp$ret$1 = tmp0_apply;
      tmp$ret$1_0 = Unit_getInstance();
      tmp = tmp$ret$1;
    } else {
      tmp = assignmentsState;
    }
    assignmentsState = tmp;
    var tmp_0;
    if (numberOfInstancesState === VOID) {
      var tmp$ret$4;
      var tmp$ret$6;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0_1;
      var tmp$ret$2;
      // Inline function 'kotlin.collections.hashMapOf' call
      tmp$ret$0_1 = HashMap_init_$Create$();
      tmp$ret$2 = Unit_getInstance();
      var tmp0_apply_0 = tmp$ret$0_1;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoardState.<init>.<anonymous>' call
      // Inline function 'kotlin.collections.forEach' call
      var tmp0_forEach_0 = values_14();
      var indexedObject_0 = tmp0_forEach_0;
      var inductionVariable_0 = 0;
      var last_0 = indexedObject_0.length;
      while (inductionVariable_0 < last_0) {
        var element_0 = indexedObject_0[inductionVariable_0];
        inductionVariable_0 = inductionVariable_0 + 1 | 0;
        // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoardState.<init>.<anonymous>.<anonymous>' call
        // Inline function 'kotlin.collections.set' call
        var tmp$ret$3;
        var tmp$ret$5;
        // Inline function 'kotlin.arrayOf' call
        var tmp0_arrayOf = [0, values_13().length];
        var tmp$ret$2_0;
        var tmp$ret$4_0;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp$ret$1_1;
        var tmp$ret$3_0;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$1_1 = tmp0_arrayOf;
        tmp$ret$3_0 = Unit_getInstance();
        tmp$ret$2_0 = tmp$ret$1_1;
        tmp$ret$4_0 = Unit_getInstance();
        tmp$ret$3 = tmp$ret$2_0;
        tmp$ret$5 = Unit_getInstance();
        var tmp1_set = tmp$ret$3;
        tmp0_apply_0.y2(element_0, tmp1_set);
      }
      tmp$ret$4 = tmp0_apply_0;
      tmp$ret$6 = Unit_getInstance();
      tmp_0 = tmp$ret$4;
    } else {
      tmp_0 = numberOfInstancesState;
    }
    numberOfInstancesState = tmp_0;
    var tmp_1;
    if (architecturesState === VOID) {
      var tmp$ret$0_2;
      var tmp$ret$7;
      // Inline function 'kotlin.collections.listOf' call
      tmp$ret$0_2 = emptyList();
      tmp$ret$7 = Unit_getInstance();
      tmp_1 = tmp$ret$0_2;
    } else {
      tmp_1 = architecturesState;
    }
    architecturesState = tmp_1;
    var tmp_2;
    if (performanceRequirementsInputsState === VOID) {
      var tmp$ret$2_1;
      var tmp$ret$10;
      // Inline function 'kotlin.collections.map' call
      var tmp1_map = values_18();
      var tmp$ret$1_2;
      var tmp$ret$9;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$_0(tmp1_map.length);
      var indexedObject_1 = tmp1_map;
      var inductionVariable_1 = 0;
      var last_1 = indexedObject_1.length;
      while (inductionVariable_1 < last_1) {
        var item = indexedObject_1[inductionVariable_1];
        inductionVariable_1 = inductionVariable_1 + 1 | 0;
        var tmp$ret$0_3;
        var tmp$ret$8;
        // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoardState.<init>.<anonymous>' call
        tmp$ret$0_3 = new Requirement(item.toString());
        tmp$ret$8 = Unit_getInstance();
        tmp0_mapTo.a(tmp$ret$0_3);
      }
      tmp$ret$1_2 = tmp0_mapTo;
      tmp$ret$9 = Unit_getInstance();
      tmp$ret$2_1 = tmp$ret$1_2;
      tmp$ret$10 = Unit_getInstance();
      tmp_2 = tmp$ret$2_1;
    } else {
      tmp_2 = performanceRequirementsInputsState;
    }
    performanceRequirementsInputsState = tmp_2;
    var tmp_3;
    if (securityRequirementsInputsState === VOID) {
      var tmp$ret$2_2;
      var tmp$ret$13;
      // Inline function 'kotlin.collections.map' call
      var tmp1_map_0 = values_17();
      var tmp$ret$1_3;
      var tmp$ret$12;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo_0 = ArrayList_init_$Create$_0(tmp1_map_0.length);
      var indexedObject_2 = tmp1_map_0;
      var inductionVariable_2 = 0;
      var last_2 = indexedObject_2.length;
      while (inductionVariable_2 < last_2) {
        var item_0 = indexedObject_2[inductionVariable_2];
        inductionVariable_2 = inductionVariable_2 + 1 | 0;
        var tmp$ret$0_4;
        var tmp$ret$11;
        // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoardState.<init>.<anonymous>' call
        tmp$ret$0_4 = new Requirement(item_0.toString());
        tmp$ret$11 = Unit_getInstance();
        tmp0_mapTo_0.a(tmp$ret$0_4);
      }
      tmp$ret$1_3 = tmp0_mapTo_0;
      tmp$ret$12 = Unit_getInstance();
      tmp$ret$2_2 = tmp$ret$1_3;
      tmp$ret$13 = Unit_getInstance();
      tmp_3 = tmp$ret$2_2;
    } else {
      tmp_3 = securityRequirementsInputsState;
    }
    securityRequirementsInputsState = tmp_3;
    attackersInputState = attackersInputState === VOID ? linkedMapOf([to(DomainsWithChannels_Client_getInstance(), listOf_0(new Attacker(Attackers_MatD_getInstance()))), to(DomainsWithChannels_ESP_getInstance(), listOf_0(new Attacker(Attackers_Insider_getInstance()))), to(DomainsWithChannels_OnPremise_getInstance(), listOf_0(new Attacker(Attackers_Insider_getInstance()))), to(DomainsWithChannels_CSP_getInstance(), listOf_0(new Attacker(Attackers_Insider_getInstance()))), to(DomainsWithChannels_Client_ESP_getInstance(), listOf_0(new Attacker(Attackers_MitM_getInstance()))), to(DomainsWithChannels_Client_OnPremise_getInstance(), listOf_0(new Attacker(Attackers_MitM_getInstance()))), to(DomainsWithChannels_Client_CSP_getInstance(), listOf_0(new Attacker(Attackers_MitM_getInstance()))), to(DomainsWithChannels_ESP_OnPremise_getInstance(), listOf_0(new Attacker(Attackers_MitM_getInstance()))), to(DomainsWithChannels_ESP_CSP_getInstance(), listOf_0(new Attacker(Attackers_MitM_getInstance()))), to(DomainsWithChannels_OnPremise_CSP_getInstance(), listOf_0(new Attacker(Attackers_MitM_getInstance())))]) : attackersInputState;
    domainsState = domainsState === VOID ? toMutableList_0(values_13()) : domainsState;
    entitiesState = entitiesState === VOID ? toMutableList_0(values_14()) : entitiesState;
    this.g5o_1 = assignmentsState;
    this.h5o_1 = numberOfInstancesState;
    this.i5o_1 = architecturesState;
    this.j5o_1 = performanceRequirementsInputsState;
    this.k5o_1 = securityRequirementsInputsState;
    this.l5o_1 = attackersInputState;
    this.m5o_1 = domainsState;
    this.n5o_1 = entitiesState;
  }
  protoOf(TradeOffBoardState).o5o = function (assignmentsState, numberOfInstancesState, architecturesState, performanceRequirementsInputsState, securityRequirementsInputsState, attackersInputState, domainsState, entitiesState) {
    return new TradeOffBoardState(assignmentsState, numberOfInstancesState, architecturesState, performanceRequirementsInputsState, securityRequirementsInputsState, attackersInputState, domainsState, entitiesState);
  };
  protoOf(TradeOffBoardState).p5o = function (assignmentsState, numberOfInstancesState, architecturesState, performanceRequirementsInputsState, securityRequirementsInputsState, attackersInputState, domainsState, entitiesState, $super) {
    assignmentsState = assignmentsState === VOID ? this.g5o_1 : assignmentsState;
    numberOfInstancesState = numberOfInstancesState === VOID ? this.h5o_1 : numberOfInstancesState;
    architecturesState = architecturesState === VOID ? this.i5o_1 : architecturesState;
    performanceRequirementsInputsState = performanceRequirementsInputsState === VOID ? this.j5o_1 : performanceRequirementsInputsState;
    securityRequirementsInputsState = securityRequirementsInputsState === VOID ? this.k5o_1 : securityRequirementsInputsState;
    attackersInputState = attackersInputState === VOID ? this.l5o_1 : attackersInputState;
    domainsState = domainsState === VOID ? this.m5o_1 : domainsState;
    entitiesState = entitiesState === VOID ? this.n5o_1 : entitiesState;
    return $super === VOID ? this.o5o(assignmentsState, numberOfInstancesState, architecturesState, performanceRequirementsInputsState, securityRequirementsInputsState, attackersInputState, domainsState, entitiesState) : $super.o5o.call(this, assignmentsState, numberOfInstancesState, architecturesState, performanceRequirementsInputsState, securityRequirementsInputsState, attackersInputState, domainsState, entitiesState);
  };
  protoOf(TradeOffBoardState).toString = function () {
    return 'TradeOffBoardState(assignmentsState=' + this.g5o_1 + ', numberOfInstancesState=' + this.h5o_1 + ', architecturesState=' + this.i5o_1 + ', performanceRequirementsInputsState=' + this.j5o_1 + ', securityRequirementsInputsState=' + this.k5o_1 + ', attackersInputState=' + this.l5o_1 + ', domainsState=' + this.m5o_1 + ', entitiesState=' + this.n5o_1 + ')';
  };
  protoOf(TradeOffBoardState).hashCode = function () {
    var result = this.g5o_1.hashCode();
    result = imul(result, 31) + this.h5o_1.hashCode() | 0;
    result = imul(result, 31) + hashCode(this.i5o_1) | 0;
    result = imul(result, 31) + hashCode(this.j5o_1) | 0;
    result = imul(result, 31) + hashCode(this.k5o_1) | 0;
    result = imul(result, 31) + this.l5o_1.hashCode() | 0;
    result = imul(result, 31) + hashCode(this.m5o_1) | 0;
    result = imul(result, 31) + hashCode(this.n5o_1) | 0;
    return result;
  };
  protoOf(TradeOffBoardState).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof TradeOffBoardState))
      return false;
    var tmp0_other_with_cast = other instanceof TradeOffBoardState ? other : THROW_CCE();
    if (!this.g5o_1.equals(tmp0_other_with_cast.g5o_1))
      return false;
    if (!this.h5o_1.equals(tmp0_other_with_cast.h5o_1))
      return false;
    if (!equals(this.i5o_1, tmp0_other_with_cast.i5o_1))
      return false;
    if (!equals(this.j5o_1, tmp0_other_with_cast.j5o_1))
      return false;
    if (!equals(this.k5o_1, tmp0_other_with_cast.k5o_1))
      return false;
    if (!this.l5o_1.equals(tmp0_other_with_cast.l5o_1))
      return false;
    if (!equals(this.m5o_1, tmp0_other_with_cast.m5o_1))
      return false;
    if (!equals(this.n5o_1, tmp0_other_with_cast.n5o_1))
      return false;
    return true;
  };
  function changeNumberOfInstances(state, entity, newNumberOfInstances) {
    _init_properties_TradeOffBoard_kt__qccrih();
    var tmp = get_logger_7();
    tmp.h4r(changeNumberOfInstances$lambda(entity, newNumberOfInstances));
    // Inline function 'kotlin.collections.set' call
    var tmp0_set = state.h5o_1;
    tmp0_set.y2(entity, newNumberOfInstances);
  }
  function changePenaltyValue(props, state, requirement, penalty) {
    _init_properties_TradeOffBoard_kt__qccrih();
    var tmp = get_logger_7();
    tmp.h4r(changePenaltyValue$lambda(requirement, penalty));
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.collections.first' call
      var tmp0_subject = props.metricProp;
      var tmp0 = tmp0_subject.n4_1;
      var tmp_0;
      switch (tmp0) {
        case 0:
          tmp_0 = state.j5o_1;
          break;
        case 1:
          tmp_0 = state.k5o_1;
          break;
        default:
          noWhenBranchMatchedException();
          break;
      }
      var tmp0_first = tmp_0;
      var tmp0_iterator = tmp0_first.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.changePenaltyValue.<anonymous>' call
        tmp$ret$0 = element.b5o_1 === requirement;
        if (tmp$ret$0) {
          tmp$ret$1 = element;
          break $l$block;
        }
      }
      throw NoSuchElementException_init_$Create$('Collection contains no element matching the predicate.');
    }
    tmp$ret$1.f5o_1 = penalty;
  }
  function changeThresholdValue(props, state, requirement, value) {
    _init_properties_TradeOffBoard_kt__qccrih();
    var tmp = get_logger_7();
    tmp.h4r(changeThresholdValue$lambda(requirement, value));
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.collections.first' call
      var tmp0_subject = props.metricProp;
      var tmp0 = tmp0_subject.n4_1;
      var tmp_0;
      switch (tmp0) {
        case 0:
          tmp_0 = state.j5o_1;
          break;
        case 1:
          tmp_0 = state.k5o_1;
          break;
        default:
          noWhenBranchMatchedException();
          break;
      }
      var tmp0_first = tmp_0;
      var tmp0_iterator = tmp0_first.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.changeThresholdValue.<anonymous>' call
        tmp$ret$0 = element.b5o_1 === requirement;
        if (tmp$ret$0) {
          tmp$ret$1 = element;
          break $l$block;
        }
      }
      throw NoSuchElementException_init_$Create$('Collection contains no element matching the predicate.');
    }
    tmp$ret$1.e5o_1 = value;
  }
  function changeThresholdType(props, state, requirement, threshold) {
    _init_properties_TradeOffBoard_kt__qccrih();
    var tmp = get_logger_7();
    tmp.h4r(changeThresholdType$lambda(requirement, threshold));
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.collections.first' call
      var tmp0_subject = props.metricProp;
      var tmp0 = tmp0_subject.n4_1;
      var tmp_0;
      switch (tmp0) {
        case 0:
          tmp_0 = state.j5o_1;
          break;
        case 1:
          tmp_0 = state.k5o_1;
          break;
        default:
          noWhenBranchMatchedException();
          break;
      }
      var tmp0_first = tmp_0;
      var tmp0_iterator = tmp0_first.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.changeThresholdType.<anonymous>' call
        tmp$ret$0 = element.b5o_1 === requirement;
        if (tmp$ret$0) {
          tmp$ret$1 = element;
          break $l$block;
        }
      }
      throw NoSuchElementException_init_$Create$('Collection contains no element matching the predicate.');
    }
    tmp$ret$1.d5o_1 = threshold;
  }
  function changeWeightValue(props, state, requirement, weight) {
    _init_properties_TradeOffBoard_kt__qccrih();
    var tmp = get_logger_7();
    tmp.h4r(changeWeightValue$lambda(requirement, weight));
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.collections.first' call
      var tmp0_subject = props.metricProp;
      var tmp0 = tmp0_subject.n4_1;
      var tmp_0;
      switch (tmp0) {
        case 0:
          tmp_0 = state.j5o_1;
          break;
        case 1:
          tmp_0 = state.k5o_1;
          break;
        default:
          noWhenBranchMatchedException();
          break;
      }
      var tmp0_first = tmp_0;
      var tmp0_iterator = tmp0_first.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.changeWeightValue.<anonymous>' call
        tmp$ret$0 = element.b5o_1 === requirement;
        if (tmp$ret$0) {
          tmp$ret$1 = element;
          break $l$block;
        }
      }
      throw NoSuchElementException_init_$Create$('Collection contains no element matching the predicate.');
    }
    tmp$ret$1.c5o_1 = weight;
  }
  function changeLikelihood(state, domain, attacker, newLikelihood) {
    _init_properties_TradeOffBoard_kt__qccrih();
    var tmp = get_logger_7();
    tmp.h4r(changeLikelihood$lambda(domain, attacker, newLikelihood));
    var tmp$ret$1;
    $l$block: {
      // Inline function 'kotlin.collections.first' call
      var tmp0_first = ensureNotNull(state.l5o_1.y1(domain));
      var tmp0_iterator = tmp0_first.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        var tmp$ret$0;
        // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.changeLikelihood.<anonymous>' call
        tmp$ret$0 = element.x5n_1.equals(attacker);
        if (tmp$ret$0) {
          tmp$ret$1 = element;
          break $l$block;
        }
      }
      throw NoSuchElementException_init_$Create$('Collection contains no element matching the predicate.');
    }
    tmp$ret$1.y5n_1 = newLikelihood;
  }
  function toggleAssignment(state, entity, domain, accepted) {
    _init_properties_TradeOffBoard_kt__qccrih();
    var tmp = get_logger_7();
    tmp.h4r(toggleAssignment$lambda(entity, domain, accepted));
    if (accepted) {
      ensureNotNull(state.g5o_1.y1(domain)).a(entity);
    } else {
      ensureNotNull(state.g5o_1.y1(domain)).ma(entity);
    }
  }
  function computePossibleArchitectures(props, state) {
    _init_properties_TradeOffBoard_kt__qccrih();
    if (state.equals(undefined)) {
      var tmp$ret$0;
      // Inline function 'kotlin.collections.listOf' call
      tmp$ret$0 = emptyList();
      return tmp$ret$0;
    }
    var tmp = get_logger_7();
    tmp.h4r(computePossibleArchitectures$lambda);
    var tmp$ret$1;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp$ret$1 = ArrayList_init_$Create$();
    var possibleAssignments = tmp$ret$1;
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_forEach = state.g5o_1;
    var tmp$ret$2;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$2 = tmp0_forEach.o().f();
    var tmp0_iterator = tmp$ret$2;
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.computePossibleArchitectures.<anonymous>' call
      var domain = element.p();
      // Inline function 'kotlin.collections.forEach' call
      var tmp0_forEach_0 = element.q();
      var tmp0_iterator_0 = tmp0_forEach_0.f();
      while (tmp0_iterator_0.g()) {
        var element_0 = tmp0_iterator_0.h();
        // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.computePossibleArchitectures.<anonymous>.<anonymous>' call
        possibleAssignments.a(new Assignment(domain, element_0));
      }
    }
    props.handleChangeCircularProgressValueProp(50);
    var tmp_0 = get_logger_7();
    tmp_0.h4r(computePossibleArchitectures$lambda_0);
    var assignmentsPowerSet = powerSet(possibleAssignments);
    props.handleChangeCircularProgressValueProp(90);
    var tmp_1 = get_logger_7();
    tmp_1.h4r(computePossibleArchitectures$lambda_1);
    var tmp$ret$3;
    // Inline function 'kotlin.collections.mutableListOf' call
    tmp$ret$3 = ArrayList_init_$Create$();
    var architectures = tmp$ret$3;
    // Inline function 'kotlin.collections.forEach' call
    var tmp0_iterator_1 = assignmentsPowerSet.f();
    while (tmp0_iterator_1.g()) {
      var element_1 = tmp0_iterator_1.h();
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.computePossibleArchitectures.<anonymous>' call
      var tmp$ret$4;
      // Inline function 'kotlin.collections.hashMapOf' call
      tmp$ret$4 = HashMap_init_$Create$();
      var numberOfEntities = tmp$ret$4;
      // Inline function 'kotlin.collections.forEach' call
      var tmp0_forEach_1 = state.n5o_1;
      var tmp0_iterator_2 = tmp0_forEach_1.f();
      while (tmp0_iterator_2.g()) {
        var element_2 = tmp0_iterator_2.h();
        // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.computePossibleArchitectures.<anonymous>.<anonymous>' call
        // Inline function 'kotlin.collections.set' call
        numberOfEntities.y2(element_2, 0);
      }
      // Inline function 'kotlin.collections.forEach' call
      var tmp0_iterator_3 = element_1.f();
      while (tmp0_iterator_3.g()) {
        var element_3 = tmp0_iterator_3.h();
        // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.computePossibleArchitectures.<anonymous>.<anonymous>' call
        // Inline function 'kotlin.collections.set' call
        var tmp0_set = element_3.s5n_1;
        var tmp1_set = ensureNotNull(numberOfEntities.y1(element_3.s5n_1)) + 1 | 0;
        numberOfEntities.y2(tmp0_set, tmp1_set);
      }
      var discardArchitecture = false;
      // Inline function 'kotlin.collections.forEach' call
      var tmp1_forEach = state.h5o_1;
      var tmp$ret$5;
      // Inline function 'kotlin.collections.iterator' call
      tmp$ret$5 = tmp1_forEach.o().f();
      var tmp0_iterator_4 = tmp$ret$5;
      while (tmp0_iterator_4.g()) {
        var element_4 = tmp0_iterator_4.h();
        // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.computePossibleArchitectures.<anonymous>.<anonymous>' call
        var numberOfEntity = ensureNotNull(numberOfEntities.y1(element_4.p()));
        var minNumberOfEntity = element_4.q()[0];
        var maxNumberOfEntity = element_4.q()[1];
        if (numberOfEntity < minNumberOfEntity ? true : numberOfEntity > maxNumberOfEntity) {
          discardArchitecture = true;
        }
      }
      if (!discardArchitecture) {
        var architecture = Companion_getInstance_31().q5n(toList(element_1));
        var scoresArray = computeScoresArray(props, state, element_1);
        var excludeArchitecture = false;
        if (props.algorithmProp.equals(Algorithm_AdHoc_getInstance())) {
          var finalScore = 0;
          // Inline function 'kotlin.collections.forEach' call
          var tmp$ret$6;
          // Inline function 'kotlin.collections.iterator' call
          tmp$ret$6 = scoresArray.o().f();
          var tmp0_iterator_5 = tmp$ret$6;
          while (tmp0_iterator_5.g()) {
            var element_5 = tmp0_iterator_5.h();
            // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.computePossibleArchitectures.<anonymous>.<anonymous>' call
            var requirementName = element_5.p();
            var tempScore = element_5.q();
            var tmp$ret$8;
            $l$block: {
              // Inline function 'kotlin.collections.first' call
              var tmp0_subject = props.metricProp;
              var tmp0 = tmp0_subject.n4_1;
              var tmp_2;
              switch (tmp0) {
                case 0:
                  tmp_2 = state.j5o_1;
                  break;
                case 1:
                  tmp_2 = state.k5o_1;
                  break;
                default:
                  noWhenBranchMatchedException();
                  break;
              }
              var tmp0_first = tmp_2;
              var tmp0_iterator_6 = tmp0_first.f();
              while (tmp0_iterator_6.g()) {
                var element_6 = tmp0_iterator_6.h();
                var tmp$ret$7;
                // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.computePossibleArchitectures.<anonymous>.<anonymous>.<anonymous>' call
                tmp$ret$7 = element_6.b5o_1 === requirementName;
                if (tmp$ret$7) {
                  tmp$ret$8 = element_6;
                  break $l$block;
                }
              }
              throw NoSuchElementException_init_$Create$('Collection contains no element matching the predicate.');
            }
            var requirement = tmp$ret$8;
            var tmp1_subject = requirement.d5o_1;
            var tmp0_0 = tmp1_subject.n4_1;
            switch (tmp0_0) {
              case 0:
                break;
              case 1:
                if (tempScore < requirement.e5o_1) {
                  tempScore = tempScore - requirement.f5o_1 | 0;
                }

                break;
              case 2:
                if (tempScore < requirement.e5o_1) {
                  excludeArchitecture = true;
                }

                break;
            }
            finalScore = finalScore + tempScore | 0;
          }
          architecture.w5n_1 = finalScore;
        } else if (props.algorithmProp.equals(Algorithm_Best_getInstance())) {
          architecture.v5n_1 = scoresArray;
        }
        if (!excludeArchitecture) {
          architectures.a(architecture);
        }
      }
    }
    var tmp_3 = get_logger_7();
    tmp_3.h4r(computePossibleArchitectures$lambda_2(architectures));
    var tmp_4;
    if (!(architectures.i() === 0)) {
      tmp_4 = orderArchitectures(props, architectures);
    } else {
      tmp_4 = architectures;
    }
    return tmp_4;
  }
  function computeScoresArray(props, state, currentArchitecture) {
    _init_properties_TradeOffBoard_kt__qccrih();
    var tmp$ret$0;
    // Inline function 'kotlin.collections.hashMapOf' call
    tmp$ret$0 = HashMap_init_$Create$();
    var scoresArray = tmp$ret$0;
    if (props.metricProp.equals(Metric_Goals_getInstance())) {
      // Inline function 'kotlin.collections.forEach' call
      var tmp0_forEach = get_performanceRequirementsImpact();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.iterator' call
      tmp$ret$1 = tmp0_forEach.o().f();
      var tmp0_iterator = tmp$ret$1;
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.computeScoresArray.<anonymous>' call
        var requirementName = element.p();
        var score = 0;
        var assignmentsAndImpact = element.q();
        // Inline function 'kotlin.collections.forEach' call
        var tmp0_iterator_0 = currentArchitecture.f();
        while (tmp0_iterator_0.g()) {
          var element_0 = tmp0_iterator_0.h();
          // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.computeScoresArray.<anonymous>.<anonymous>' call
          var tmp$ret$3;
          $l$block: {
            // Inline function 'kotlin.collections.first' call
            var tmp0_first = state.j5o_1;
            var tmp0_iterator_1 = tmp0_first.f();
            while (tmp0_iterator_1.g()) {
              var element_1 = tmp0_iterator_1.h();
              var tmp$ret$2;
              // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.computeScoresArray.<anonymous>.<anonymous>.<anonymous>' call
              tmp$ret$2 = element_1.b5o_1 === requirementName.m4_1;
              if (tmp$ret$2) {
                tmp$ret$3 = element_1;
                break $l$block;
              }
            }
            throw NoSuchElementException_init_$Create$('Collection contains no element matching the predicate.');
          }
          var requirement = tmp$ret$3;
          var tmp = score;
          var tmp_0 = ensureNotNull(assignmentsAndImpact.y1(element_0));
          var tmp_1;
          if (props.algorithmProp.equals(Algorithm_AdHoc_getInstance())) {
            tmp_1 = requirement.c5o_1;
          } else {
            tmp_1 = 1;
          }
          score = tmp + imul(tmp_0, tmp_1) | 0;
        }
        // Inline function 'kotlin.collections.set' call
        var tmp0_set = requirementName.toString();
        var tmp1_set = score;
        scoresArray.y2(tmp0_set, tmp1_set);
      }
    } else if (props.metricProp.equals(Metric_Protection_getInstance())) {
      // Inline function 'kotlin.collections.forEach' call
      var tmp1_forEach = get_securityRequirementsImpact();
      var tmp$ret$4;
      // Inline function 'kotlin.collections.iterator' call
      tmp$ret$4 = tmp1_forEach.o().f();
      var tmp0_iterator_2 = tmp$ret$4;
      while (tmp0_iterator_2.g()) {
        var element_2 = tmp0_iterator_2.h();
        // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.computeScoresArray.<anonymous>' call
        var requirementName_0 = element_2.p().toString();
        var score_0 = 3;
        var targetAndImpact = element_2.q();
        // Inline function 'kotlin.collections.forEach' call
        var tmp0_forEach_0 = state.l5o_1;
        var tmp$ret$5;
        // Inline function 'kotlin.collections.iterator' call
        tmp$ret$5 = tmp0_forEach_0.o().f();
        var tmp0_iterator_3 = tmp$ret$5;
        while (tmp0_iterator_3.g()) {
          var element_3 = tmp0_iterator_3.h();
          // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.computeScoresArray.<anonymous>.<anonymous>' call
          var domain = element_3.p();
          var attackers = element_3.q();
          // Inline function 'kotlin.collections.forEach' call
          var tmp0_iterator_4 = attackers.f();
          while (tmp0_iterator_4.g()) {
            var element_4 = tmp0_iterator_4.h();
            // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.computeScoresArray.<anonymous>.<anonymous>.<anonymous>' call
            var tmp$ret$9;
            // Inline function 'eu.fbk.st.cryptoac.view.enumContains' call
            var tmp1_enumContains = domain.toString();
            var tmp$ret$8;
            $l$block_0: {
              // Inline function 'kotlin.collections.any' call
              var tmp$ret$6;
              // Inline function 'kotlin.enumValues' call
              tmp$ret$6 = values_13();
              var tmp0_any = tmp$ret$6;
              var indexedObject = tmp0_any;
              var inductionVariable = 0;
              var last = indexedObject.length;
              while (inductionVariable < last) {
                var element_5 = indexedObject[inductionVariable];
                inductionVariable = inductionVariable + 1 | 0;
                var tmp$ret$7;
                // Inline function 'eu.fbk.st.cryptoac.view.enumContains.<anonymous>' call
                tmp$ret$7 = element_5.m4_1 === tmp1_enumContains;
                if (tmp$ret$7) {
                  tmp$ret$8 = true;
                  break $l$block_0;
                }
              }
              tmp$ret$8 = false;
            }
            tmp$ret$9 = tmp$ret$8;
            if (tmp$ret$9) {
              var convertedDomain = valueOf_8(domain.toString());
              // Inline function 'kotlin.collections.forEach' call
              var tmp$ret$12;
              // Inline function 'kotlin.collections.filter' call
              var tmp$ret$11;
              // Inline function 'kotlin.collections.filterTo' call
              var tmp2_filterTo = ArrayList_init_$Create$();
              var tmp0_iterator_5 = currentArchitecture.f();
              while (tmp0_iterator_5.g()) {
                var element_6 = tmp0_iterator_5.h();
                var tmp$ret$10;
                // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.computeScoresArray.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
                tmp$ret$10 = element_6.r5n_1.equals(convertedDomain);
                if (tmp$ret$10) {
                  tmp2_filterTo.a(element_6);
                }
              }
              tmp$ret$11 = tmp2_filterTo;
              tmp$ret$12 = tmp$ret$11;
              var tmp3_forEach = tmp$ret$12;
              var tmp0_iterator_6 = tmp3_forEach.f();
              while (tmp0_iterator_6.g()) {
                var element_7 = tmp0_iterator_6.h();
                // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.computeScoresArray.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
                var entityInDomain = element_7.s5n_1;
                var convertedEntity = valueOf_9(entityInDomain.toString());
                var tmp$ret$13;
                // Inline function 'kotlin.comparisons.minOf' call
                var tmp0_minOf = score_0;
                var tmp1_minOf = getProtectionLevel(ensureNotNull(targetAndImpact.y1(convertedEntity)), element_4.y5n_1);
                tmp$ret$13 = Math.min(tmp0_minOf, tmp1_minOf);
                score_0 = tmp$ret$13;
              }
            } else {
              var firstDomainString = split(domain.toString(), ['_']).j(0);
              var secondDomainString = split(domain.toString(), ['_']).j(1);
              var firstDomain = valueOf_8(firstDomainString);
              var secondDomain = valueOf_8(secondDomainString);
              var tmp$ret$14;
              // Inline function 'kotlin.collections.mutableListOf' call
              tmp$ret$14 = ArrayList_init_$Create$();
              var entitiesInFirstDomain = tmp$ret$14;
              var tmp$ret$15;
              // Inline function 'kotlin.collections.mutableListOf' call
              tmp$ret$15 = ArrayList_init_$Create$();
              var entitiesInSecondDomain = tmp$ret$15;
              // Inline function 'kotlin.collections.forEach' call
              var tmp0_iterator_7 = currentArchitecture.f();
              while (tmp0_iterator_7.g()) {
                var element_8 = tmp0_iterator_7.h();
                // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.computeScoresArray.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
                if (element_8.r5n_1.equals(firstDomain)) {
                  entitiesInFirstDomain.a(element_8.s5n_1);
                } else if (element_8.r5n_1.equals(secondDomain)) {
                  entitiesInSecondDomain.a(element_8.s5n_1);
                }
              }
              // Inline function 'kotlin.collections.forEach' call
              var tmp0_iterator_8 = entitiesInFirstDomain.f();
              while (tmp0_iterator_8.g()) {
                var element_9 = tmp0_iterator_8.h();
                // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.computeScoresArray.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
                // Inline function 'kotlin.collections.forEach' call
                var tmp0_iterator_9 = entitiesInSecondDomain.f();
                while (tmp0_iterator_9.g()) {
                  var element_10 = tmp0_iterator_9.h();
                  // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.computeScoresArray.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
                  var entityWithChannel = valueOf_9('' + element_9 + '_' + element_10);
                  var entityWithChannelReverse = valueOf_9('' + element_10 + '_' + element_9);
                  var eventualImpact = targetAndImpact.y1(entityWithChannel);
                  if (eventualImpact == null) {
                    eventualImpact = targetAndImpact.y1(entityWithChannelReverse);
                  }
                  if (!(eventualImpact == null)) {
                    var tmp$ret$16;
                    // Inline function 'kotlin.comparisons.minOf' call
                    var tmp0_minOf_0 = score_0;
                    var tmp1_minOf_0 = getProtectionLevel(eventualImpact, element_4.y5n_1);
                    tmp$ret$16 = Math.min(tmp0_minOf_0, tmp1_minOf_0);
                    score_0 = tmp$ret$16;
                  }
                }
              }
            }
          }
        }
        // Inline function 'kotlin.collections.set' call
        var tmp_2 = score_0;
        var tmp_3;
        if (props.algorithmProp.equals(Algorithm_AdHoc_getInstance())) {
          var tmp$ret$18;
          $l$block_1: {
            // Inline function 'kotlin.collections.first' call
            var tmp0_subject = props.metricProp;
            var tmp0 = tmp0_subject.n4_1;
            var tmp_4;
            switch (tmp0) {
              case 0:
                tmp_4 = state.j5o_1;
                break;
              case 1:
                tmp_4 = state.k5o_1;
                break;
              default:
                noWhenBranchMatchedException();
                break;
            }
            var tmp1_first = tmp_4;
            var tmp0_iterator_10 = tmp1_first.f();
            while (tmp0_iterator_10.g()) {
              var element_11 = tmp0_iterator_10.h();
              var tmp$ret$17;
              // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.computeScoresArray.<anonymous>.<anonymous>' call
              tmp$ret$17 = element_11.b5o_1 === requirementName_0;
              if (tmp$ret$17) {
                tmp$ret$18 = element_11;
                break $l$block_1;
              }
            }
            throw NoSuchElementException_init_$Create$('Collection contains no element matching the predicate.');
          }
          tmp_3 = tmp$ret$18.c5o_1;
        } else {
          tmp_3 = 1;
        }
        var tmp2_set = imul(tmp_2, tmp_3);
        scoresArray.y2(requirementName_0, tmp2_set);
      }
    }
    return scoresArray;
  }
  function getProtectionLevel(impact, likelihood) {
    _init_properties_TradeOffBoard_kt__qccrih();
    var tmp;
    if (impact.equals(Impact_None_getInstance()) ? true : likelihood.equals(Likelihood_None_getInstance())) {
      tmp = 3;
    } else if (impact.equals(Impact_Low_getInstance()) ? true : likelihood.equals(Likelihood_Low_getInstance())) {
      tmp = 2;
    } else if (impact.equals(Impact_Medium_getInstance()) ? true : likelihood.equals(Likelihood_Medium_getInstance())) {
      tmp = 1;
    } else {
      tmp = 0;
    }
    return tmp;
  }
  function orderArchitectures(props, possibleArchitectures) {
    _init_properties_TradeOffBoard_kt__qccrih();
    var tmp = get_logger_7();
    tmp.h4r(orderArchitectures$lambda(possibleArchitectures));
    var tmp0_subject = props.algorithmProp;
    var tmp0 = tmp0_subject.n4_1;
    var tmp_0;
    switch (tmp0) {
      case 1:
        var tmp$ret$1;
        // Inline function 'kotlin.collections.sortedByDescending' call
        var tmp$ret$0;
        // Inline function 'kotlin.comparisons.compareByDescending' call
        var tmp_1 = orderArchitectures$lambda_0;
        tmp$ret$0 = new sam$kotlin_Comparator$0(tmp_1);
        tmp$ret$1 = sortedWith(possibleArchitectures, tmp$ret$0);

        tmp_0 = toMutableList(tmp$ret$1);
        break;
      case 0:
        var currentOptimal = first_1(possibleArchitectures);
        // Inline function 'kotlin.collections.forEach' call
        var tmp0_iterator = possibleArchitectures.f();
        while (tmp0_iterator.g()) {
          var element = tmp0_iterator.h();
          // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.orderArchitectures.<anonymous>' call
          if (dominates(element.v5n_1, currentOptimal.v5n_1)) {
            currentOptimal = element;
          }
        }

        var iterator = possibleArchitectures.f();
        while (iterator.g()) {
          var currentArchitecture = iterator.h();
          if (dominates(currentOptimal.v5n_1, currentArchitecture.v5n_1)) {
            iterator.z2();
          }
        }

        var tmp_2 = get_logger_7();
        tmp_2.h4r(orderArchitectures$lambda_1(possibleArchitectures));
        tmp_0 = possibleArchitectures;
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp_0;
  }
  function dominates(dominator, dominatee) {
    _init_properties_TradeOffBoard_kt__qccrih();
    var dominate = true;
    var majorInAtLeastOne = false;
    // Inline function 'kotlin.collections.forEach' call
    var tmp$ret$0;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$0 = dominator.o().f();
    var tmp0_iterator = tmp$ret$0;
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.dominates.<anonymous>' call
      if (ensureNotNull(dominatee.y1(element.p())) > element.q()) {
        dominate = false;
      }
      if (element.q() > ensureNotNull(dominatee.y1(element.p()))) {
        majorInAtLeastOne = true;
      }
    }
    return dominate ? majorInAtLeastOne : false;
  }
  var Scenario_CryptoAC_instance;
  var Scenario_MQTT_instance;
  function values_10() {
    return [Scenario_CryptoAC_getInstance(), Scenario_MQTT_getInstance()];
  }
  function valueOf_5(value) {
    switch (value) {
      case 'CryptoAC':
        return Scenario_CryptoAC_getInstance();
      case 'MQTT':
        return Scenario_MQTT_getInstance();
      default:
        Scenario_initEntries();
        THROW_ISE();
        break;
    }
  }
  var Scenario_entriesInitialized;
  function Scenario_initEntries() {
    if (Scenario_entriesInitialized)
      return Unit_getInstance();
    Scenario_entriesInitialized = true;
    Scenario_CryptoAC_instance = new Scenario('CryptoAC', 0);
    Scenario_MQTT_instance = new Scenario('MQTT', 1);
  }
  function Scenario(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  var Algorithm_Best_instance;
  var Algorithm_AdHoc_instance;
  function values_11() {
    return [Algorithm_Best_getInstance(), Algorithm_AdHoc_getInstance()];
  }
  function valueOf_6(value) {
    switch (value) {
      case 'Best':
        return Algorithm_Best_getInstance();
      case 'AdHoc':
        return Algorithm_AdHoc_getInstance();
      default:
        Algorithm_initEntries();
        THROW_ISE();
        break;
    }
  }
  var Algorithm_entriesInitialized;
  function Algorithm_initEntries() {
    if (Algorithm_entriesInitialized)
      return Unit_getInstance();
    Algorithm_entriesInitialized = true;
    Algorithm_Best_instance = new Algorithm('Best', 0);
    Algorithm_AdHoc_instance = new Algorithm('AdHoc', 1);
  }
  function Algorithm(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  var Metric_Goals_instance;
  var Metric_Protection_instance;
  function values_12() {
    return [Metric_Goals_getInstance(), Metric_Protection_getInstance()];
  }
  function valueOf_7(value) {
    switch (value) {
      case 'Goals':
        return Metric_Goals_getInstance();
      case 'Protection':
        return Metric_Protection_getInstance();
      default:
        Metric_initEntries();
        THROW_ISE();
        break;
    }
  }
  var Metric_entriesInitialized;
  function Metric_initEntries() {
    if (Metric_entriesInitialized)
      return Unit_getInstance();
    Metric_entriesInitialized = true;
    Metric_Goals_instance = new Metric('Goals', 0);
    Metric_Protection_instance = new Metric('Protection', 1);
  }
  function Metric(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  var Domains_Client_instance;
  var Domains_ESP_instance;
  var Domains_OnPremise_instance;
  var Domains_CSP_instance;
  function values_13() {
    return [Domains_Client_getInstance(), Domains_ESP_getInstance(), Domains_OnPremise_getInstance(), Domains_CSP_getInstance()];
  }
  function valueOf_8(value) {
    switch (value) {
      case 'Client':
        return Domains_Client_getInstance();
      case 'ESP':
        return Domains_ESP_getInstance();
      case 'OnPremise':
        return Domains_OnPremise_getInstance();
      case 'CSP':
        return Domains_CSP_getInstance();
      default:
        Domains_initEntries();
        THROW_ISE();
        break;
    }
  }
  var Domains_entriesInitialized;
  function Domains_initEntries() {
    if (Domains_entriesInitialized)
      return Unit_getInstance();
    Domains_entriesInitialized = true;
    Domains_Client_instance = new Domains('Client', 0);
    Domains_ESP_instance = new Domains('ESP', 1);
    Domains_OnPremise_instance = new Domains('OnPremise', 2);
    Domains_CSP_instance = new Domains('CSP', 3);
  }
  function Domains(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  var DomainsWithChannels_Client_instance;
  var DomainsWithChannels_ESP_instance;
  var DomainsWithChannels_OnPremise_instance;
  var DomainsWithChannels_CSP_instance;
  var DomainsWithChannels_Client_ESP_instance;
  var DomainsWithChannels_Client_OnPremise_instance;
  var DomainsWithChannels_Client_CSP_instance;
  var DomainsWithChannels_ESP_OnPremise_instance;
  var DomainsWithChannels_ESP_CSP_instance;
  var DomainsWithChannels_OnPremise_CSP_instance;
  var DomainsWithChannels_entriesInitialized;
  function DomainsWithChannels_initEntries() {
    if (DomainsWithChannels_entriesInitialized)
      return Unit_getInstance();
    DomainsWithChannels_entriesInitialized = true;
    DomainsWithChannels_Client_instance = new DomainsWithChannels('Client', 0);
    DomainsWithChannels_ESP_instance = new DomainsWithChannels('ESP', 1);
    DomainsWithChannels_OnPremise_instance = new DomainsWithChannels('OnPremise', 2);
    DomainsWithChannels_CSP_instance = new DomainsWithChannels('CSP', 3);
    DomainsWithChannels_Client_ESP_instance = new DomainsWithChannels('Client_ESP', 4);
    DomainsWithChannels_Client_OnPremise_instance = new DomainsWithChannels('Client_OnPremise', 5);
    DomainsWithChannels_Client_CSP_instance = new DomainsWithChannels('Client_CSP', 6);
    DomainsWithChannels_ESP_OnPremise_instance = new DomainsWithChannels('ESP_OnPremise', 7);
    DomainsWithChannels_ESP_CSP_instance = new DomainsWithChannels('ESP_CSP', 8);
    DomainsWithChannels_OnPremise_CSP_instance = new DomainsWithChannels('OnPremise_CSP', 9);
  }
  function DomainsWithChannels(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  var Entities_CryptoAC_instance;
  var Entities_RM_instance;
  var Entities_MM_instance;
  var Entities_DM_instance;
  function values_14() {
    return [Entities_CryptoAC_getInstance(), Entities_RM_getInstance(), Entities_MM_getInstance(), Entities_DM_getInstance()];
  }
  var Entities_entriesInitialized;
  function Entities_initEntries() {
    if (Entities_entriesInitialized)
      return Unit_getInstance();
    Entities_entriesInitialized = true;
    Entities_CryptoAC_instance = new Entities('CryptoAC', 0);
    Entities_RM_instance = new Entities('RM', 1);
    Entities_MM_instance = new Entities('MM', 2);
    Entities_DM_instance = new Entities('DM', 3);
  }
  function Entities(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  var EntitiesWithChannels_CryptoAC_instance;
  var EntitiesWithChannels_RM_instance;
  var EntitiesWithChannels_MM_instance;
  var EntitiesWithChannels_DM_instance;
  var EntitiesWithChannels_CryptoAC_RM_instance;
  var EntitiesWithChannels_CryptoAC_DM_instance;
  var EntitiesWithChannels_CryptoAC_MM_instance;
  var EntitiesWithChannels_RM_MM_instance;
  var EntitiesWithChannels_RM_DM_instance;
  var EntitiesWithChannels_MM_DM_instance;
  function valueOf_9(value) {
    switch (value) {
      case 'CryptoAC':
        return EntitiesWithChannels_CryptoAC_getInstance();
      case 'RM':
        return EntitiesWithChannels_RM_getInstance();
      case 'MM':
        return EntitiesWithChannels_MM_getInstance();
      case 'DM':
        return EntitiesWithChannels_DM_getInstance();
      case 'CryptoAC_RM':
        return EntitiesWithChannels_CryptoAC_RM_getInstance();
      case 'CryptoAC_DM':
        return EntitiesWithChannels_CryptoAC_DM_getInstance();
      case 'CryptoAC_MM':
        return EntitiesWithChannels_CryptoAC_MM_getInstance();
      case 'RM_MM':
        return EntitiesWithChannels_RM_MM_getInstance();
      case 'RM_DM':
        return EntitiesWithChannels_RM_DM_getInstance();
      case 'MM_DM':
        return EntitiesWithChannels_MM_DM_getInstance();
      default:
        EntitiesWithChannels_initEntries();
        THROW_ISE();
        break;
    }
  }
  var EntitiesWithChannels_entriesInitialized;
  function EntitiesWithChannels_initEntries() {
    if (EntitiesWithChannels_entriesInitialized)
      return Unit_getInstance();
    EntitiesWithChannels_entriesInitialized = true;
    EntitiesWithChannels_CryptoAC_instance = new EntitiesWithChannels('CryptoAC', 0);
    EntitiesWithChannels_RM_instance = new EntitiesWithChannels('RM', 1);
    EntitiesWithChannels_MM_instance = new EntitiesWithChannels('MM', 2);
    EntitiesWithChannels_DM_instance = new EntitiesWithChannels('DM', 3);
    EntitiesWithChannels_CryptoAC_RM_instance = new EntitiesWithChannels('CryptoAC_RM', 4);
    EntitiesWithChannels_CryptoAC_DM_instance = new EntitiesWithChannels('CryptoAC_DM', 5);
    EntitiesWithChannels_CryptoAC_MM_instance = new EntitiesWithChannels('CryptoAC_MM', 6);
    EntitiesWithChannels_RM_MM_instance = new EntitiesWithChannels('RM_MM', 7);
    EntitiesWithChannels_RM_DM_instance = new EntitiesWithChannels('RM_DM', 8);
    EntitiesWithChannels_MM_DM_instance = new EntitiesWithChannels('MM_DM', 9);
  }
  function EntitiesWithChannels(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  var Attackers_MitM_instance;
  var Attackers_Insider_instance;
  var Attackers_MatD_instance;
  var Attackers_entriesInitialized;
  function Attackers_initEntries() {
    if (Attackers_entriesInitialized)
      return Unit_getInstance();
    Attackers_entriesInitialized = true;
    Attackers_MitM_instance = new Attackers('MitM', 0);
    Attackers_Insider_instance = new Attackers('Insider', 1);
    Attackers_MatD_instance = new Attackers('MatD', 2);
  }
  function Attackers(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  var Likelihood_High_instance;
  var Likelihood_Medium_instance;
  var Likelihood_Low_instance;
  var Likelihood_None_instance;
  function values_15() {
    return [Likelihood_High_getInstance(), Likelihood_Medium_getInstance(), Likelihood_Low_getInstance(), Likelihood_None_getInstance()];
  }
  function valueOf_10(value) {
    switch (value) {
      case 'High':
        return Likelihood_High_getInstance();
      case 'Medium':
        return Likelihood_Medium_getInstance();
      case 'Low':
        return Likelihood_Low_getInstance();
      case 'None':
        return Likelihood_None_getInstance();
      default:
        Likelihood_initEntries();
        THROW_ISE();
        break;
    }
  }
  var Likelihood_entriesInitialized;
  function Likelihood_initEntries() {
    if (Likelihood_entriesInitialized)
      return Unit_getInstance();
    Likelihood_entriesInitialized = true;
    Likelihood_High_instance = new Likelihood('High', 0);
    Likelihood_Medium_instance = new Likelihood('Medium', 1);
    Likelihood_Low_instance = new Likelihood('Low', 2);
    Likelihood_None_instance = new Likelihood('None', 3);
  }
  function Likelihood(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  var Impact_High_instance;
  var Impact_Medium_instance;
  var Impact_Low_instance;
  var Impact_None_instance;
  var Impact_entriesInitialized;
  function Impact_initEntries() {
    if (Impact_entriesInitialized)
      return Unit_getInstance();
    Impact_entriesInitialized = true;
    Impact_High_instance = new Impact('High', 0);
    Impact_Medium_instance = new Impact('Medium', 1);
    Impact_Low_instance = new Impact('Low', 2);
    Impact_None_instance = new Impact('None', 3);
  }
  function Impact(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  var Threshold_None_instance;
  var Threshold_Soft_instance;
  var Threshold_Hard_instance;
  function values_16() {
    return [Threshold_None_getInstance(), Threshold_Soft_getInstance(), Threshold_Hard_getInstance()];
  }
  function valueOf_11(value) {
    switch (value) {
      case 'None':
        return Threshold_None_getInstance();
      case 'Soft':
        return Threshold_Soft_getInstance();
      case 'Hard':
        return Threshold_Hard_getInstance();
      default:
        Threshold_initEntries();
        THROW_ISE();
        break;
    }
  }
  var Threshold_entriesInitialized;
  function Threshold_initEntries() {
    if (Threshold_entriesInitialized)
      return Unit_getInstance();
    Threshold_entriesInitialized = true;
    Threshold_None_instance = new Threshold('None', 0);
    Threshold_Soft_instance = new Threshold('Soft', 1);
    Threshold_Hard_instance = new Threshold('Hard', 2);
  }
  function Threshold(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  var SecurityRequirements_Confidentiality_instance;
  var SecurityRequirements_Integrity_instance;
  var SecurityRequirements_Availability_instance;
  function values_17() {
    return [SecurityRequirements_Confidentiality_getInstance(), SecurityRequirements_Integrity_getInstance(), SecurityRequirements_Availability_getInstance()];
  }
  var SecurityRequirements_entriesInitialized;
  function SecurityRequirements_initEntries() {
    if (SecurityRequirements_entriesInitialized)
      return Unit_getInstance();
    SecurityRequirements_entriesInitialized = true;
    SecurityRequirements_Confidentiality_instance = new SecurityRequirements('Confidentiality', 0);
    SecurityRequirements_Integrity_instance = new SecurityRequirements('Integrity', 1);
    SecurityRequirements_Availability_instance = new SecurityRequirements('Availability', 2);
  }
  function SecurityRequirements(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  var PerformanceRequirements_Redundancy_instance;
  var PerformanceRequirements_Scalability_instance;
  var PerformanceRequirements_Reliability_instance;
  var PerformanceRequirements_Maintenance_instance;
  var PerformanceRequirements_DoS_Resilience_instance;
  var PerformanceRequirements_CSP_Vendor_Lock_in_instance;
  var PerformanceRequirements_On_premise_Savings_instance;
  var PerformanceRequirements_CSP_Savings_instance;
  var PerformanceRequirements_Latency_instance;
  var PerformanceRequirements_Throughput_instance;
  var PerformanceRequirements_Computational_Power_instance;
  var PerformanceRequirements_Storage_capacity_instance;
  var PerformanceRequirements_ESP_Vendor_Lock_in_instance;
  var PerformanceRequirements_ESP_Savings_instance;
  function values_18() {
    return [PerformanceRequirements_Redundancy_getInstance(), PerformanceRequirements_Scalability_getInstance(), PerformanceRequirements_Reliability_getInstance(), PerformanceRequirements_Maintenance_getInstance(), PerformanceRequirements_DoS_Resilience_getInstance(), PerformanceRequirements_CSP_Vendor_Lock_in_getInstance(), PerformanceRequirements_On_premise_Savings_getInstance(), PerformanceRequirements_CSP_Savings_getInstance(), PerformanceRequirements_Latency_getInstance(), PerformanceRequirements_Throughput_getInstance(), PerformanceRequirements_Computational_Power_getInstance(), PerformanceRequirements_Storage_capacity_getInstance(), PerformanceRequirements_ESP_Vendor_Lock_in_getInstance(), PerformanceRequirements_ESP_Savings_getInstance()];
  }
  var PerformanceRequirements_entriesInitialized;
  function PerformanceRequirements_initEntries() {
    if (PerformanceRequirements_entriesInitialized)
      return Unit_getInstance();
    PerformanceRequirements_entriesInitialized = true;
    PerformanceRequirements_Redundancy_instance = new PerformanceRequirements('Redundancy', 0);
    PerformanceRequirements_Scalability_instance = new PerformanceRequirements('Scalability', 1);
    PerformanceRequirements_Reliability_instance = new PerformanceRequirements('Reliability', 2);
    PerformanceRequirements_Maintenance_instance = new PerformanceRequirements('Maintenance', 3);
    PerformanceRequirements_DoS_Resilience_instance = new PerformanceRequirements('DoS_Resilience', 4);
    PerformanceRequirements_CSP_Vendor_Lock_in_instance = new PerformanceRequirements('CSP_Vendor_Lock_in', 5);
    PerformanceRequirements_On_premise_Savings_instance = new PerformanceRequirements('On_premise_Savings', 6);
    PerformanceRequirements_CSP_Savings_instance = new PerformanceRequirements('CSP_Savings', 7);
    PerformanceRequirements_Latency_instance = new PerformanceRequirements('Latency', 8);
    PerformanceRequirements_Throughput_instance = new PerformanceRequirements('Throughput', 9);
    PerformanceRequirements_Computational_Power_instance = new PerformanceRequirements('Computational_Power', 10);
    PerformanceRequirements_Storage_capacity_instance = new PerformanceRequirements('Storage_capacity', 11);
    PerformanceRequirements_ESP_Vendor_Lock_in_instance = new PerformanceRequirements('ESP_Vendor_Lock_in', 12);
    PerformanceRequirements_ESP_Savings_instance = new PerformanceRequirements('ESP_Savings', 13);
  }
  function PerformanceRequirements(name, ordinal) {
    Enum.call(this, name, ordinal);
  }
  function getImageFromEntity(entity) {
    _init_properties_TradeOffBoard_kt__qccrih();
    var tmp0_subject = entity;
    var tmp0 = tmp0_subject.n4_1;
    var tmp;
    switch (tmp0) {
      case 0:
        tmp = 'proxy.png';
        break;
      case 1:
        tmp = 'rm.png';
        break;
      case 2:
        tmp = 'mm.png';
        break;
      case 3:
        tmp = 'dm.png';
        break;
      default:
        noWhenBranchMatchedException();
        break;
    }
    return tmp;
  }
  function sam$kotlin_Comparator$0(function_0) {
    this.q5o_1 = function_0;
  }
  protoOf(sam$kotlin_Comparator$0).hg = function (a, b) {
    return this.q5o_1(a, b);
  };
  protoOf(sam$kotlin_Comparator$0).compare = function (a, b) {
    return this.hg(a, b);
  };
  function logger$lambda_9() {
    _init_properties_TradeOffBoard_kt__qccrih();
    return Unit_getInstance();
  }
  function TradeOffBoard$lambda($this$FC, props) {
    _init_properties_TradeOffBoard_kt__qccrih();
    var state$delegate = useState(new TradeOffBoardState());
    var tmp$ret$3;
    // Inline function 'react.dom.html.ReactHTML.div' call
    var tmp0__get_div__2k2o9m = ReactHTML_getInstance();
    var tmp$ret$2;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = 'div';
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    var tmp = tmp$ret$3;
    $this$FC.x4r(tmp, TradeOffBoard$lambda$lambda(props, state$delegate));
    return Unit_getInstance();
  }
  function invoke$lambda_27($state$delegate) {
    _init_properties_TradeOffBoard_kt__qccrih();
    var tmp$ret$2;
    // Inline function 'react.StateInstance.getValue' call
    var tmp1_getValue = getLocalDelegateReference('state', KMutableProperty0, true, function () {
      return THROW_ISE();
    });
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = $state$delegate;
    var tmp0_unsafeCast = tmp$ret$0[0];
    tmp$ret$1 = tmp0_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  }
  function invoke$lambda_28($state$delegate, value) {
    _init_properties_TradeOffBoard_kt__qccrih();
    var tmp1_setValue = getLocalDelegateReference('state', KMutableProperty0, true, function () {
      return THROW_ISE();
    });
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = $state$delegate;
    var tmp0_unsafeCast = tmp$ret$0[1];
    tmp$ret$1 = tmp0_unsafeCast;
    return tmp$ret$1(value);
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda($element) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$12;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$11;
      // Inline function 'js.core.jso' call
      var tmp$ret$10;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$9;
      // Inline function 'csstype.Padding' call
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '4px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp3_Padding = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '4px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      var tmp4_Padding = tmp$ret$6;
      var tmp$ret$8;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp2_unsafeCast = '' + tmp3_Padding + ' ' + tmp4_Padding;
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = tmp2_unsafeCast;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      tmp0_apply.padding = tmp$ret$9;
      tmp$ret$10 = tmp0_apply;
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = css(tmp$ret$11);
      tmp1_css.className = tmp$ret$12;
      $this$invoke.w4r($element.toString());
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate) {
    return function ($this$invoke) {
      var tmp0_forEach = invoke$lambda_27($state$delegate).n5o_1;
      var tmp0_iterator = tmp0_forEach.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
        var tmp$ret$3;
        // Inline function 'react.dom.html.ReactHTML.td' call
        var tmp0__get_td__p4dsv3 = ReactHTML_getInstance();
        var tmp$ret$2;
        // Inline function 'react.IntrinsicType' call
        var tmp$ret$1;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp$ret$0;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$0 = 'td';
        tmp$ret$1 = tmp$ret$0;
        tmp$ret$2 = tmp$ret$1;
        tmp$ret$3 = tmp$ret$2;
        var tmp = tmp$ret$3;
        $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda(element));
      }
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$9;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$8;
      // Inline function 'js.core.jso' call
      var tmp$ret$7;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'csstype.Color' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = 'rgba(173, 173, 173, 0.2)';
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.borderBottomColor = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '1px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp0_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      tmp0_apply.borderBottomWidth = tmp$ret$6;
      tmp0_apply.borderBottomStyle = (/*union*/{dashed: 'dashed', dotted: 'dotted', double: 'double', groove: 'groove', hidden: 'hidden', inset: 'inset', outset: 'outset', ridge: 'ridge', solid: 'solid'}/*union*/).solid;
      tmp$ret$7 = tmp0_apply;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = css(tmp$ret$8);
      tmp1_css.className = tmp$ret$9;
      var tmp$ret$13;
      // Inline function 'react.dom.html.ReactHTML.tr' call
      var tmp2__get_tr__vmdq3z = ReactHTML_getInstance();
      var tmp$ret$12;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$11;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$10;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$10 = 'tr';
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = tmp$ret$11;
      tmp$ret$13 = tmp$ret$12;
      var tmp = tmp$ret$13;
      $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate));
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda($item, $state$delegate) {
    return function (newNumberOfInstances) {
      var tmp = invoke$lambda_27($state$delegate);
      changeNumberOfInstances(tmp, $item, isArray(newNumberOfInstances) ? newNumberOfInstances : THROW_CCE());
      invoke$lambda_28($state$delegate, invoke$lambda_27($state$delegate).p5o());
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate, $item) {
    return function ($this$invoke) {
      $this$invoke.labelProps = '';
      $this$invoke.minProps = 0;
      $this$invoke.maxProps = invoke$lambda_27($state$delegate).m5o_1.i();
      var tmp$ret$2;
      // Inline function 'kotlin.arrayOf' call
      var tmp0_arrayOf = [0, values_13().length];
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = tmp0_arrayOf;
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      $this$invoke.defaultValuesProps = tmp$ret$2;
      $this$invoke.colorProps = 'primary';
      $this$invoke.rangeProps = true;
      $this$invoke.onChangeProps = TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda($item, $state$delegate);
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($tmp1__anonymous__6ijp4k, $state$delegate, $item) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$12;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$11;
      // Inline function 'js.core.jso' call
      var tmp$ret$10;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      if ($tmp1__anonymous__6ijp4k === 0) {
        var tmp$ret$3;
        // Inline function 'csstype.px' call
        var tmp$ret$2;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp0_unsafeCast = '3px';
        var tmp$ret$1;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$1 = tmp0_unsafeCast;
        tmp$ret$2 = tmp$ret$1;
        tmp$ret$3 = tmp$ret$2;
        tmp0_apply.paddingTop = tmp$ret$3;
      } else if ($tmp1__anonymous__6ijp4k === (invoke$lambda_27($state$delegate).n5o_1.i() - 1 | 0)) {
        var tmp$ret$6;
        // Inline function 'csstype.px' call
        var tmp$ret$5;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp1_unsafeCast = '3px';
        var tmp$ret$4;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$4 = tmp1_unsafeCast;
        tmp$ret$5 = tmp$ret$4;
        tmp$ret$6 = tmp$ret$5;
        tmp0_apply.paddingBottom = tmp$ret$6;
      }
      if ($tmp1__anonymous__6ijp4k === (invoke$lambda_27($state$delegate).n5o_1.i() - 1 | 0) ? $tmp1__anonymous__6ijp4k === (invoke$lambda_27($state$delegate).n5o_1.i() - 1 | 0) : false) {
        var tmp$ret$9;
        // Inline function 'csstype.px' call
        var tmp$ret$8;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp2_unsafeCast = '15px';
        var tmp$ret$7;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$7 = tmp2_unsafeCast;
        tmp$ret$8 = tmp$ret$7;
        tmp$ret$9 = tmp$ret$8;
        tmp0_apply.borderBottomRightRadius = tmp$ret$9;
      }
      tmp$ret$10 = tmp0_apply;
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = css(tmp$ret$11);
      tmp1_css.className = tmp$ret$12;
      var tmp = get_CryptoACSlider();
      $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate, $item));
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($state$delegate) {
    return function ($this$invoke) {
      var tmp0_forEachIndexed = invoke$lambda_27($state$delegate).n5o_1;
      var index = 0;
      var tmp0_iterator = tmp0_forEachIndexed.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
        var tmp1 = index;
        index = tmp1 + 1 | 0;
        var tmp1__anonymous__uwfjfc = checkIndexOverflow(tmp1);
        var tmp$ret$3;
        // Inline function 'react.dom.html.ReactHTML.td' call
        var tmp0__get_td__p4dsv3 = ReactHTML_getInstance();
        var tmp$ret$2;
        // Inline function 'react.IntrinsicType' call
        var tmp$ret$1;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp$ret$0;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$0 = 'td';
        tmp$ret$1 = tmp$ret$0;
        tmp$ret$2 = tmp$ret$1;
        tmp$ret$3 = tmp$ret$2;
        var tmp = tmp$ret$3;
        $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0(tmp1__anonymous__uwfjfc, $state$delegate, item));
      }
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($state$delegate) {
    return function ($this$invoke) {
      var tmp$ret$3;
      // Inline function 'react.dom.html.ReactHTML.tr' call
      var tmp0__get_tr__p4dsj1 = ReactHTML_getInstance();
      var tmp$ret$2;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = 'tr';
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp = tmp$ret$3;
      $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($state$delegate));
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$6;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$5;
      // Inline function 'js.core.jso' call
      var tmp$ret$4;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      tmp0_apply.borderCollapse = (/*union*/{collapse: 'collapse', separate: 'separate'}/*union*/).collapse;
      var tmp$ret$3;
      // Inline function 'csstype.pct' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '100%';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.width = tmp$ret$3;
      tmp$ret$4 = tmp0_apply;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = css(tmp$ret$5);
      tmp1_css.className = tmp$ret$6;
      var tmp$ret$10;
      // Inline function 'react.dom.html.ReactHTML.thead' call
      var tmp2__get_thead__ud1bnr = ReactHTML_getInstance();
      var tmp$ret$9;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$8;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = 'thead';
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      tmp$ret$10 = tmp$ret$9;
      var tmp = tmp$ret$10;
      $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate));
      var tmp$ret$14;
      // Inline function 'react.dom.html.ReactHTML.tbody' call
      var tmp3__get_tbody__zau9u0 = ReactHTML_getInstance();
      var tmp$ret$13;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$12;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$11;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$11 = 'tbody';
      tmp$ret$12 = tmp$ret$11;
      tmp$ret$13 = tmp$ret$12;
      tmp$ret$14 = tmp$ret$13;
      var tmp_0 = tmp$ret$14;
      $this$invoke.x4r(tmp_0, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($state$delegate));
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate) {
    return function ($this$FC, it) {
      var tmp$ret$3;
      // Inline function 'react.dom.html.ReactHTML.table' call
      var tmp0__get_table__krka6b = ReactHTML_getInstance();
      var tmp$ret$2;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = 'table';
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp = tmp$ret$3;
      $this$FC.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate));
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.titleStyleProp = Themes_getInstance().g58_1;
      $this$invoke.titleTextProp = 'Replication of Entities';
      $this$invoke.titleVariantProp = 'subtitle1';
      $this$invoke.setDividerProp = false;
      var tmp$ret$2;
      // Inline function 'csstype.pct' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '95%';
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = tmp0_unsafeCast;
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      $this$invoke.dividerWidthProp = tmp$ret$2;
      $this$invoke.childProp = create(FC(TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda($state$delegate)));
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.item = true;
      $this$invoke.sm = 12;
      $this$invoke.md = 12;
      $this$invoke.lg = 12;
      $this$invoke.xl = 12;
      var tmp = get_CryptoACPaper();
      $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda($state$delegate));
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($this$invoke) {
    _init_properties_TradeOffBoard_kt__qccrih();
    // Inline function 'emotion.react.css' call
    var tmp1_css = $this$invoke;
    var tmp$ret$12;
    // Inline function 'emotion.css.ClassName' call
    var tmp$ret$11;
    // Inline function 'js.core.jso' call
    var tmp$ret$10;
    // Inline function 'kotlin.apply' call
    var tmp$ret$0;
    // Inline function 'js.core.jso' call
    tmp$ret$0 = {};
    var tmp0_apply = tmp$ret$0;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
    var tmp$ret$9;
    // Inline function 'csstype.Padding' call
    var tmp$ret$3;
    // Inline function 'csstype.px' call
    var tmp$ret$2;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = '4px';
    var tmp$ret$1;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$1 = tmp0_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    var tmp3_Padding = tmp$ret$3;
    var tmp$ret$6;
    // Inline function 'csstype.px' call
    var tmp$ret$5;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp1_unsafeCast = '4px';
    var tmp$ret$4;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$4 = tmp1_unsafeCast;
    tmp$ret$5 = tmp$ret$4;
    tmp$ret$6 = tmp$ret$5;
    var tmp4_Padding = tmp$ret$6;
    var tmp$ret$8;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp2_unsafeCast = '' + tmp3_Padding + ' ' + tmp4_Padding;
    var tmp$ret$7;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$7 = tmp2_unsafeCast;
    tmp$ret$8 = tmp$ret$7;
    tmp$ret$9 = tmp$ret$8;
    tmp0_apply.padding = tmp$ret$9;
    tmp$ret$10 = tmp0_apply;
    tmp$ret$11 = tmp$ret$10;
    tmp$ret$12 = css(tmp$ret$11);
    tmp1_css.className = tmp$ret$12;
    return Unit_getInstance();
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2($element) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$12;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$11;
      // Inline function 'js.core.jso' call
      var tmp$ret$10;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$9;
      // Inline function 'csstype.Padding' call
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '4px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp3_Padding = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '4px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      var tmp4_Padding = tmp$ret$6;
      var tmp$ret$8;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp2_unsafeCast = '' + tmp3_Padding + ' ' + tmp4_Padding;
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = tmp2_unsafeCast;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      tmp0_apply.padding = tmp$ret$9;
      tmp$ret$10 = tmp0_apply;
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = css(tmp$ret$11);
      tmp1_css.className = tmp$ret$12;
      $this$invoke.w4r($element.toString());
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($state$delegate) {
    return function ($this$invoke) {
      var tmp$ret$3;
      // Inline function 'react.dom.html.ReactHTML.td' call
      var tmp0__get_td__p4dsv3 = ReactHTML_getInstance();
      var tmp$ret$2;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = 'td';
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp = tmp$ret$3;
      $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1);
      var tmp1_forEach = invoke$lambda_27($state$delegate).n5o_1;
      var tmp0_iterator = tmp1_forEach.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
        var tmp$ret$7;
        // Inline function 'react.dom.html.ReactHTML.td' call
        var tmp0__get_td__p4dsv3_0 = ReactHTML_getInstance();
        var tmp$ret$6;
        // Inline function 'react.IntrinsicType' call
        var tmp$ret$5;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp$ret$4;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$4 = 'td';
        tmp$ret$5 = tmp$ret$4;
        tmp$ret$6 = tmp$ret$5;
        tmp$ret$7 = tmp$ret$6;
        var tmp_0 = tmp$ret$7;
        $this$invoke.x4r(tmp_0, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2(element));
      }
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($state$delegate) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$9;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$8;
      // Inline function 'js.core.jso' call
      var tmp$ret$7;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'csstype.Color' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = 'rgba(173, 173, 173, 0.2)';
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.borderBottomColor = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '1px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp0_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      tmp0_apply.borderBottomWidth = tmp$ret$6;
      tmp0_apply.borderBottomStyle = (/*union*/{dashed: 'dashed', dotted: 'dotted', double: 'double', groove: 'groove', hidden: 'hidden', inset: 'inset', outset: 'outset', ridge: 'ridge', solid: 'solid'}/*union*/).solid;
      tmp$ret$7 = tmp0_apply;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = css(tmp$ret$8);
      tmp1_css.className = tmp$ret$9;
      var tmp$ret$13;
      // Inline function 'react.dom.html.ReactHTML.tr' call
      var tmp2__get_tr__vmdq3z = ReactHTML_getInstance();
      var tmp$ret$12;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$11;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$10;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$10 = 'tr';
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = tmp$ret$11;
      tmp$ret$13 = tmp$ret$12;
      var tmp = tmp$ret$13;
      $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($state$delegate));
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_3($tmp1__anonymous__6ijp4k, $item, $state$delegate) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$12;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$11;
      // Inline function 'js.core.jso' call
      var tmp$ret$10;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '10px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.paddingLeft = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '160px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      tmp0_apply.width = tmp$ret$6;
      tmp0_apply.textAlign = (/*union*/{center: 'center', end: 'end', justify: 'justify', left: 'left', matchParent: 'match-parent', right: 'right', start: 'start'}/*union*/).left;
      if ($tmp1__anonymous__6ijp4k === (invoke$lambda_27($state$delegate).m5o_1.i() - 1 | 0)) {
        var tmp$ret$9;
        // Inline function 'csstype.px' call
        var tmp$ret$8;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp2_unsafeCast = '15px';
        var tmp$ret$7;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$7 = tmp2_unsafeCast;
        tmp$ret$8 = tmp$ret$7;
        tmp$ret$9 = tmp$ret$8;
        tmp0_apply.borderBottomLeftRadius = tmp$ret$9;
      }
      tmp$ret$10 = tmp0_apply;
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = css(tmp$ret$11);
      tmp1_css.className = tmp$ret$12;
      $this$invoke.w4r($item.toString());
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($state$delegate) {
    return function (entity, domain, assignment) {
      toggleAssignment(invoke$lambda_27($state$delegate), entity, domain, assignment);
      invoke$lambda_28($state$delegate, invoke$lambda_27($state$delegate).p5o());
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($item, $item$1, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.key = toString_0(invoke$lambda_27($state$delegate).m5o_1) + toString_0(invoke$lambda_27($state$delegate).n5o_1);
      $this$invoke.srcProp = getImageFromEntity($item);
      $this$invoke.onClickProp = TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($state$delegate);
      $this$invoke.entityProp = $item;
      $this$invoke.domainProp = $item$1;
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_4($tmp1__anonymous__6ijp4k, $tmp2__anonymous__bd8cc3, $state$delegate, $item, $item$1) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$12;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$11;
      // Inline function 'js.core.jso' call
      var tmp$ret$10;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      if ($tmp1__anonymous__6ijp4k === 0) {
        var tmp$ret$3;
        // Inline function 'csstype.px' call
        var tmp$ret$2;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp0_unsafeCast = '3px';
        var tmp$ret$1;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$1 = tmp0_unsafeCast;
        tmp$ret$2 = tmp$ret$1;
        tmp$ret$3 = tmp$ret$2;
        tmp0_apply.paddingTop = tmp$ret$3;
      } else if ($tmp1__anonymous__6ijp4k === (invoke$lambda_27($state$delegate).m5o_1.i() - 1 | 0)) {
        var tmp$ret$6;
        // Inline function 'csstype.px' call
        var tmp$ret$5;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp1_unsafeCast = '3px';
        var tmp$ret$4;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$4 = tmp1_unsafeCast;
        tmp$ret$5 = tmp$ret$4;
        tmp$ret$6 = tmp$ret$5;
        tmp0_apply.paddingBottom = tmp$ret$6;
      }
      if ($tmp1__anonymous__6ijp4k === (invoke$lambda_27($state$delegate).m5o_1.i() - 1 | 0) ? $tmp2__anonymous__bd8cc3 === (invoke$lambda_27($state$delegate).n5o_1.i() - 1 | 0) : false) {
        var tmp$ret$9;
        // Inline function 'csstype.px' call
        var tmp$ret$8;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp2_unsafeCast = '15px';
        var tmp$ret$7;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$7 = tmp2_unsafeCast;
        tmp$ret$8 = tmp$ret$7;
        tmp$ret$9 = tmp$ret$8;
        tmp0_apply.borderBottomRightRadius = tmp$ret$9;
      }
      tmp$ret$10 = tmp0_apply;
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = css(tmp$ret$11);
      tmp1_css.className = tmp$ret$12;
      var tmp = get_EntityIcon();
      $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($item, $item$1, $state$delegate));
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2($tmp1__anonymous__6ijp4k, $item, $state$delegate) {
    return function ($this$invoke) {
      var tmp$ret$3;
      // Inline function 'react.dom.html.ReactHTML.td' call
      var tmp0__get_td__p4dsv3 = ReactHTML_getInstance();
      var tmp$ret$2;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = 'td';
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp = tmp$ret$3;
      $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_3($tmp1__anonymous__6ijp4k, $item, $state$delegate));
      var tmp1_forEachIndexed = invoke$lambda_27($state$delegate).n5o_1;
      var index = 0;
      var tmp0_iterator = tmp1_forEachIndexed.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
        var tmp1 = index;
        index = tmp1 + 1 | 0;
        var tmp2__anonymous__z9zvc9 = checkIndexOverflow(tmp1);
        var tmp$ret$7;
        // Inline function 'react.dom.html.ReactHTML.td' call
        var tmp0__get_td__p4dsv3_0 = ReactHTML_getInstance();
        var tmp$ret$6;
        // Inline function 'react.IntrinsicType' call
        var tmp$ret$5;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp$ret$4;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$4 = 'td';
        tmp$ret$5 = tmp$ret$4;
        tmp$ret$6 = tmp$ret$5;
        tmp$ret$7 = tmp$ret$6;
        var tmp_0 = tmp$ret$7;
        $this$invoke.x4r(tmp_0, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_4($tmp1__anonymous__6ijp4k, tmp2__anonymous__z9zvc9, $state$delegate, item, $item));
      }
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2($state$delegate) {
    return function ($this$invoke) {
      var tmp0_forEachIndexed = invoke$lambda_27($state$delegate).m5o_1;
      var index = 0;
      var tmp0_iterator = tmp0_forEachIndexed.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
        var tmp1 = index;
        index = tmp1 + 1 | 0;
        var tmp1__anonymous__uwfjfc = checkIndexOverflow(tmp1);
        var tmp$ret$3;
        // Inline function 'react.dom.html.ReactHTML.tr' call
        var tmp0__get_tr__p4dsj1 = ReactHTML_getInstance();
        var tmp$ret$2;
        // Inline function 'react.IntrinsicType' call
        var tmp$ret$1;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp$ret$0;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$0 = 'tr';
        tmp$ret$1 = tmp$ret$0;
        tmp$ret$2 = tmp$ret$1;
        tmp$ret$3 = tmp$ret$2;
        var tmp = tmp$ret$3;
        $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2(tmp1__anonymous__uwfjfc, item, $state$delegate));
      }
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($state$delegate) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$6;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$5;
      // Inline function 'js.core.jso' call
      var tmp$ret$4;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      tmp0_apply.borderCollapse = (/*union*/{collapse: 'collapse', separate: 'separate'}/*union*/).collapse;
      var tmp$ret$3;
      // Inline function 'csstype.pct' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '100%';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.width = tmp$ret$3;
      tmp$ret$4 = tmp0_apply;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = css(tmp$ret$5);
      tmp1_css.className = tmp$ret$6;
      var tmp$ret$10;
      // Inline function 'react.dom.html.ReactHTML.thead' call
      var tmp2__get_thead__ud1bnr = ReactHTML_getInstance();
      var tmp$ret$9;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$8;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = 'thead';
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      tmp$ret$10 = tmp$ret$9;
      var tmp = tmp$ret$10;
      $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($state$delegate));
      var tmp$ret$14;
      // Inline function 'react.dom.html.ReactHTML.tbody' call
      var tmp3__get_tbody__zau9u0 = ReactHTML_getInstance();
      var tmp$ret$13;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$12;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$11;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$11 = 'tbody';
      tmp$ret$12 = tmp$ret$11;
      tmp$ret$13 = tmp$ret$12;
      tmp$ret$14 = tmp$ret$13;
      var tmp_0 = tmp$ret$14;
      $this$invoke.x4r(tmp_0, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2($state$delegate));
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda_0($state$delegate) {
    return function ($this$FC, it) {
      var tmp$ret$3;
      // Inline function 'react.dom.html.ReactHTML.table' call
      var tmp0__get_table__krka6b = ReactHTML_getInstance();
      var tmp$ret$2;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = 'table';
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp = tmp$ret$3;
      $this$FC.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($state$delegate));
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda_0($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.titleStyleProp = Themes_getInstance().g58_1;
      $this$invoke.titleTextProp = 'Pre-filters';
      $this$invoke.titleVariantProp = 'subtitle1';
      $this$invoke.setDividerProp = false;
      var tmp$ret$2;
      // Inline function 'csstype.pct' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '95%';
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = tmp0_unsafeCast;
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      $this$invoke.dividerWidthProp = tmp$ret$2;
      $this$invoke.childProp = create(FC(TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda_0($state$delegate)));
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda_0($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.item = true;
      $this$invoke.sm = 12;
      $this$invoke.md = 12;
      $this$invoke.lg = 12;
      $this$invoke.xl = 12;
      var tmp = get_CryptoACPaper();
      $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda_0($state$delegate));
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_3($this$invoke) {
    _init_properties_TradeOffBoard_kt__qccrih();
    // Inline function 'emotion.react.css' call
    var tmp1_css = $this$invoke;
    var tmp$ret$9;
    // Inline function 'emotion.css.ClassName' call
    var tmp$ret$8;
    // Inline function 'js.core.jso' call
    var tmp$ret$7;
    // Inline function 'kotlin.apply' call
    var tmp$ret$0;
    // Inline function 'js.core.jso' call
    tmp$ret$0 = {};
    var tmp0_apply = tmp$ret$0;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
    var tmp$ret$3;
    // Inline function 'csstype.Color' call
    var tmp$ret$2;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$1 = 'rgba(173, 173, 173, 0.2)';
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    tmp0_apply.borderBottomColor = tmp$ret$3;
    var tmp$ret$6;
    // Inline function 'csstype.px' call
    var tmp$ret$5;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = '1px';
    var tmp$ret$4;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$4 = tmp0_unsafeCast;
    tmp$ret$5 = tmp$ret$4;
    tmp$ret$6 = tmp$ret$5;
    tmp0_apply.borderBottomWidth = tmp$ret$6;
    tmp0_apply.borderBottomStyle = (/*union*/{dashed: 'dashed', dotted: 'dotted', double: 'double', groove: 'groove', hidden: 'hidden', inset: 'inset', outset: 'outset', ridge: 'ridge', solid: 'solid'}/*union*/).solid;
    tmp$ret$7 = tmp0_apply;
    tmp$ret$8 = tmp$ret$7;
    tmp$ret$9 = css(tmp$ret$8);
    tmp1_css.className = tmp$ret$9;
    var tmp$ret$13;
    // Inline function 'react.dom.html.ReactHTML.tr' call
    var tmp2__get_tr__vmdq3z = ReactHTML_getInstance();
    var tmp$ret$12;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$11;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$10;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$10 = 'tr';
    tmp$ret$11 = tmp$ret$10;
    tmp$ret$12 = tmp$ret$11;
    tmp$ret$13 = tmp$ret$12;
    var tmp = tmp$ret$13;
    $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_3);
    return Unit_getInstance();
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_3($this$invoke) {
    _init_properties_TradeOffBoard_kt__qccrih();
    var tmp$ret$3;
    // Inline function 'react.dom.html.ReactHTML.td' call
    var tmp0__get_td__p4dsv3 = ReactHTML_getInstance();
    var tmp$ret$2;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = 'td';
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    var tmp = tmp$ret$3;
    $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_5);
    var tmp$ret$7;
    // Inline function 'react.dom.html.ReactHTML.td' call
    var tmp1__get_td__sddrnk = ReactHTML_getInstance();
    var tmp$ret$6;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$5;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$4;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$4 = 'td';
    tmp$ret$5 = tmp$ret$4;
    tmp$ret$6 = tmp$ret$5;
    tmp$ret$7 = tmp$ret$6;
    var tmp_0 = tmp$ret$7;
    $this$invoke.x4r(tmp_0, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_6);
    var tmp$ret$11;
    // Inline function 'react.dom.html.ReactHTML.td' call
    var tmp2__get_td__vmdqg1 = ReactHTML_getInstance();
    var tmp$ret$10;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$9;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$8;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$8 = 'td';
    tmp$ret$9 = tmp$ret$8;
    tmp$ret$10 = tmp$ret$9;
    tmp$ret$11 = tmp$ret$10;
    var tmp_1 = tmp$ret$11;
    $this$invoke.x4r(tmp_1, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_7);
    return Unit_getInstance();
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_5($this$invoke) {
    _init_properties_TradeOffBoard_kt__qccrih();
    // Inline function 'emotion.react.css' call
    var tmp1_css = $this$invoke;
    var tmp$ret$12;
    // Inline function 'emotion.css.ClassName' call
    var tmp$ret$11;
    // Inline function 'js.core.jso' call
    var tmp$ret$10;
    // Inline function 'kotlin.apply' call
    var tmp$ret$0;
    // Inline function 'js.core.jso' call
    tmp$ret$0 = {};
    var tmp0_apply = tmp$ret$0;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
    var tmp$ret$9;
    // Inline function 'csstype.Padding' call
    var tmp$ret$3;
    // Inline function 'csstype.px' call
    var tmp$ret$2;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = '4px';
    var tmp$ret$1;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$1 = tmp0_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    var tmp3_Padding = tmp$ret$3;
    var tmp$ret$6;
    // Inline function 'csstype.px' call
    var tmp$ret$5;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp1_unsafeCast = '4px';
    var tmp$ret$4;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$4 = tmp1_unsafeCast;
    tmp$ret$5 = tmp$ret$4;
    tmp$ret$6 = tmp$ret$5;
    var tmp4_Padding = tmp$ret$6;
    var tmp$ret$8;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp2_unsafeCast = '' + tmp3_Padding + ' ' + tmp4_Padding;
    var tmp$ret$7;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$7 = tmp2_unsafeCast;
    tmp$ret$8 = tmp$ret$7;
    tmp$ret$9 = tmp$ret$8;
    tmp0_apply.padding = tmp$ret$9;
    tmp$ret$10 = tmp0_apply;
    tmp$ret$11 = tmp$ret$10;
    tmp$ret$12 = css(tmp$ret$11);
    tmp1_css.className = tmp$ret$12;
    $this$invoke.w4r('Domain or Channel');
    return Unit_getInstance();
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_6($this$invoke) {
    _init_properties_TradeOffBoard_kt__qccrih();
    // Inline function 'emotion.react.css' call
    var tmp1_css = $this$invoke;
    var tmp$ret$12;
    // Inline function 'emotion.css.ClassName' call
    var tmp$ret$11;
    // Inline function 'js.core.jso' call
    var tmp$ret$10;
    // Inline function 'kotlin.apply' call
    var tmp$ret$0;
    // Inline function 'js.core.jso' call
    tmp$ret$0 = {};
    var tmp0_apply = tmp$ret$0;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
    var tmp$ret$9;
    // Inline function 'csstype.Padding' call
    var tmp$ret$3;
    // Inline function 'csstype.px' call
    var tmp$ret$2;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = '4px';
    var tmp$ret$1;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$1 = tmp0_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    var tmp3_Padding = tmp$ret$3;
    var tmp$ret$6;
    // Inline function 'csstype.px' call
    var tmp$ret$5;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp1_unsafeCast = '4px';
    var tmp$ret$4;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$4 = tmp1_unsafeCast;
    tmp$ret$5 = tmp$ret$4;
    tmp$ret$6 = tmp$ret$5;
    var tmp4_Padding = tmp$ret$6;
    var tmp$ret$8;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp2_unsafeCast = '' + tmp3_Padding + ' ' + tmp4_Padding;
    var tmp$ret$7;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$7 = tmp2_unsafeCast;
    tmp$ret$8 = tmp$ret$7;
    tmp$ret$9 = tmp$ret$8;
    tmp0_apply.padding = tmp$ret$9;
    tmp$ret$10 = tmp0_apply;
    tmp$ret$11 = tmp$ret$10;
    tmp$ret$12 = css(tmp$ret$11);
    tmp1_css.className = tmp$ret$12;
    $this$invoke.w4r('Attacker');
    return Unit_getInstance();
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_7($this$invoke) {
    _init_properties_TradeOffBoard_kt__qccrih();
    // Inline function 'emotion.react.css' call
    var tmp1_css = $this$invoke;
    var tmp$ret$12;
    // Inline function 'emotion.css.ClassName' call
    var tmp$ret$11;
    // Inline function 'js.core.jso' call
    var tmp$ret$10;
    // Inline function 'kotlin.apply' call
    var tmp$ret$0;
    // Inline function 'js.core.jso' call
    tmp$ret$0 = {};
    var tmp0_apply = tmp$ret$0;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
    var tmp$ret$9;
    // Inline function 'csstype.Padding' call
    var tmp$ret$3;
    // Inline function 'csstype.px' call
    var tmp$ret$2;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = '4px';
    var tmp$ret$1;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$1 = tmp0_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    var tmp3_Padding = tmp$ret$3;
    var tmp$ret$6;
    // Inline function 'csstype.px' call
    var tmp$ret$5;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp1_unsafeCast = '4px';
    var tmp$ret$4;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$4 = tmp1_unsafeCast;
    tmp$ret$5 = tmp$ret$4;
    tmp$ret$6 = tmp$ret$5;
    var tmp4_Padding = tmp$ret$6;
    var tmp$ret$8;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp2_unsafeCast = '' + tmp3_Padding + ' ' + tmp4_Padding;
    var tmp$ret$7;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$7 = tmp2_unsafeCast;
    tmp$ret$8 = tmp$ret$7;
    tmp$ret$9 = tmp$ret$8;
    tmp0_apply.padding = tmp$ret$9;
    tmp$ret$10 = tmp0_apply;
    tmp$ret$11 = tmp$ret$10;
    tmp$ret$12 = css(tmp$ret$11);
    tmp1_css.className = tmp$ret$12;
    $this$invoke.colSpan = 2;
    $this$invoke.w4r('Likelihood');
    return Unit_getInstance();
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_8($iterator, $attackers, $domain) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$12;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$11;
      // Inline function 'js.core.jso' call
      var tmp$ret$10;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '10px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.paddingLeft = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '160px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      tmp0_apply.width = tmp$ret$6;
      tmp0_apply.textAlign = (/*union*/{center: 'center', end: 'end', justify: 'justify', left: 'left', matchParent: 'match-parent', right: 'right', start: 'start'}/*union*/).left;
      if (!$iterator.g()) {
        var tmp$ret$9;
        // Inline function 'csstype.px' call
        var tmp$ret$8;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp2_unsafeCast = '15px';
        var tmp$ret$7;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$7 = tmp2_unsafeCast;
        tmp$ret$8 = tmp$ret$7;
        tmp$ret$9 = tmp$ret$8;
        tmp0_apply.borderBottomLeftRadius = tmp$ret$9;
      }
      tmp$ret$10 = tmp0_apply;
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = css(tmp$ret$11);
      tmp1_css.className = tmp$ret$12;
      $this$invoke.rowSpan = $attackers.i();
      $this$invoke.w4r($domain.toString());
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($state$delegate) {
    return function (domain, attacker, newLikelihood) {
      changeLikelihood(invoke$lambda_27($state$delegate), domain, attacker, newLikelihood);
      invoke$lambda_28($state$delegate, invoke$lambda_27($state$delegate).p5o());
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_9($attackers, $iterator, $domain, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.defaultValueProp = Likelihood_High_getInstance();
      $this$invoke.lastProp = $attackers.i() === 1 ? !$iterator.g() : false;
      $this$invoke.domainProp = $domain;
      $this$invoke.attackerProp = first_1($attackers).x5n_1;
      $this$invoke.handleChangeLikelihoodProp = TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($state$delegate);
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_4($iterator, $attackers, $domain, $state$delegate) {
    return function ($this$invoke) {
      var tmp$ret$3;
      // Inline function 'react.dom.html.ReactHTML.td' call
      var tmp0__get_td__p4dsv3 = ReactHTML_getInstance();
      var tmp$ret$2;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = 'td';
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp = tmp$ret$3;
      $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_8($iterator, $attackers, $domain));
      var tmp_0 = get_TrustAssumptionsLikelihood();
      $this$invoke.x4r(tmp_0, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_9($attackers, $iterator, $domain, $state$delegate));
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2($state$delegate) {
    return function (domain, attacker, newLikelihood) {
      changeLikelihood(invoke$lambda_27($state$delegate), domain, attacker, newLikelihood);
      invoke$lambda_28($state$delegate, invoke$lambda_27($state$delegate).p5o());
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_10($tmp2__anonymous__bd8cc3, $attackers, $iterator, $domain, $item, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.defaultValueProp = Likelihood_High_getInstance();
      $this$invoke.lastProp = $tmp2__anonymous__bd8cc3 === ($attackers.i() - 1 | 0) ? !$iterator.g() : false;
      $this$invoke.domainProp = $domain;
      $this$invoke.attackerProp = $item.x5n_1;
      $this$invoke.handleChangeLikelihoodProp = TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2($state$delegate);
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_5($tmp2__anonymous__bd8cc3, $attackers, $iterator, $domain, $item, $state$delegate) {
    return function ($this$invoke) {
      var tmp = get_TrustAssumptionsLikelihood();
      $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_10($tmp2__anonymous__bd8cc3, $attackers, $iterator, $domain, $item, $state$delegate));
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_4($state$delegate) {
    return function ($this$invoke) {
      var tmp$ret$0;
      // Inline function 'kotlin.collections.iterator' call
      var tmp0_iterator = invoke$lambda_27($state$delegate).l5o_1;
      tmp$ret$0 = tmp0_iterator.o().f();
      var iterator = tmp$ret$0;
      while (iterator.g()) {
        var entry = iterator.h();
        var domain = entry.p();
        var attackers = entry.q();
        var tmp$ret$4;
        // Inline function 'react.dom.html.ReactHTML.tr' call
        var tmp1__get_tr__sddrbi = ReactHTML_getInstance();
        var tmp$ret$3;
        // Inline function 'react.IntrinsicType' call
        var tmp$ret$2;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp$ret$1;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$1 = 'tr';
        tmp$ret$2 = tmp$ret$1;
        tmp$ret$3 = tmp$ret$2;
        tmp$ret$4 = tmp$ret$3;
        var tmp = tmp$ret$4;
        $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_4(iterator, attackers, domain, $state$delegate));
        // Inline function 'kotlin.collections.forEachIndexed' call
        var index = 0;
        var tmp0_iterator_0 = attackers.f();
        while (tmp0_iterator_0.g()) {
          var item = tmp0_iterator_0.h();
          // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
          var tmp1 = index;
          index = tmp1 + 1 | 0;
          var tmp2__anonymous__z9zvc9 = checkIndexOverflow(tmp1);
          if (!(tmp2__anonymous__z9zvc9 === 0)) {
            var tmp$ret$8;
            // Inline function 'react.dom.html.ReactHTML.tr' call
            var tmp0__get_tr__p4dsj1 = ReactHTML_getInstance();
            var tmp$ret$7;
            // Inline function 'react.IntrinsicType' call
            var tmp$ret$6;
            // Inline function 'kotlin.js.unsafeCast' call
            var tmp$ret$5;
            // Inline function 'kotlin.js.asDynamic' call
            tmp$ret$5 = 'tr';
            tmp$ret$6 = tmp$ret$5;
            tmp$ret$7 = tmp$ret$6;
            tmp$ret$8 = tmp$ret$7;
            var tmp_0 = tmp$ret$8;
            $this$invoke.x4r(tmp_0, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_5(tmp2__anonymous__z9zvc9, attackers, iterator, domain, item, $state$delegate));
          }
        }
      }
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($state$delegate) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$6;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$5;
      // Inline function 'js.core.jso' call
      var tmp$ret$4;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      tmp0_apply.borderCollapse = (/*union*/{collapse: 'collapse', separate: 'separate'}/*union*/).collapse;
      var tmp$ret$3;
      // Inline function 'csstype.pct' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '100%';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.width = tmp$ret$3;
      tmp$ret$4 = tmp0_apply;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = css(tmp$ret$5);
      tmp1_css.className = tmp$ret$6;
      var tmp$ret$10;
      // Inline function 'react.dom.html.ReactHTML.thead' call
      var tmp2__get_thead__ud1bnr = ReactHTML_getInstance();
      var tmp$ret$9;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$8;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = 'thead';
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      tmp$ret$10 = tmp$ret$9;
      var tmp = tmp$ret$10;
      $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_3);
      var tmp$ret$14;
      // Inline function 'react.dom.html.ReactHTML.tbody' call
      var tmp3__get_tbody__zau9u0 = ReactHTML_getInstance();
      var tmp$ret$13;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$12;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$11;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$11 = 'tbody';
      tmp$ret$12 = tmp$ret$11;
      tmp$ret$13 = tmp$ret$12;
      tmp$ret$14 = tmp$ret$13;
      var tmp_0 = tmp$ret$14;
      $this$invoke.x4r(tmp_0, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_4($state$delegate));
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda_1($state$delegate) {
    return function ($this$FC, it) {
      var tmp$ret$3;
      // Inline function 'react.dom.html.ReactHTML.table' call
      var tmp0__get_table__krka6b = ReactHTML_getInstance();
      var tmp$ret$2;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = 'table';
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp = tmp$ret$3;
      $this$FC.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($state$delegate));
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda_1($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.titleStyleProp = Themes_getInstance().g58_1;
      $this$invoke.titleTextProp = 'Trust Assumptions';
      $this$invoke.titleVariantProp = 'subtitle1';
      $this$invoke.setDividerProp = false;
      var tmp$ret$2;
      // Inline function 'csstype.pct' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '95%';
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = tmp0_unsafeCast;
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      $this$invoke.dividerWidthProp = tmp$ret$2;
      $this$invoke.childProp = create(FC(TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda_1($state$delegate)));
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda_1($state$delegate) {
    return function ($this$invoke) {
      $this$invoke.item = true;
      $this$invoke.sm = 12;
      $this$invoke.md = 12;
      $this$invoke.lg = 12;
      $this$invoke.xl = 12;
      var tmp = get_CryptoACPaper();
      $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda_1($state$delegate));
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_5($this$invoke) {
    _init_properties_TradeOffBoard_kt__qccrih();
    // Inline function 'emotion.react.css' call
    var tmp1_css = $this$invoke;
    var tmp$ret$9;
    // Inline function 'emotion.css.ClassName' call
    var tmp$ret$8;
    // Inline function 'js.core.jso' call
    var tmp$ret$7;
    // Inline function 'kotlin.apply' call
    var tmp$ret$0;
    // Inline function 'js.core.jso' call
    tmp$ret$0 = {};
    var tmp0_apply = tmp$ret$0;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
    var tmp$ret$3;
    // Inline function 'csstype.Color' call
    var tmp$ret$2;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$1 = 'rgba(173, 173, 173, 0.2)';
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    tmp0_apply.borderBottomColor = tmp$ret$3;
    var tmp$ret$6;
    // Inline function 'csstype.px' call
    var tmp$ret$5;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = '1px';
    var tmp$ret$4;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$4 = tmp0_unsafeCast;
    tmp$ret$5 = tmp$ret$4;
    tmp$ret$6 = tmp$ret$5;
    tmp0_apply.borderBottomWidth = tmp$ret$6;
    tmp0_apply.borderBottomStyle = (/*union*/{dashed: 'dashed', dotted: 'dotted', double: 'double', groove: 'groove', hidden: 'hidden', inset: 'inset', outset: 'outset', ridge: 'ridge', solid: 'solid'}/*union*/).solid;
    tmp$ret$7 = tmp0_apply;
    tmp$ret$8 = tmp$ret$7;
    tmp$ret$9 = css(tmp$ret$8);
    tmp1_css.className = tmp$ret$9;
    var tmp$ret$13;
    // Inline function 'react.dom.html.ReactHTML.tr' call
    var tmp2__get_tr__vmdq3z = ReactHTML_getInstance();
    var tmp$ret$12;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$11;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$10;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$10 = 'tr';
    tmp$ret$11 = tmp$ret$10;
    tmp$ret$12 = tmp$ret$11;
    tmp$ret$13 = tmp$ret$12;
    var tmp = tmp$ret$13;
    $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_6);
    return Unit_getInstance();
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_6($this$invoke) {
    _init_properties_TradeOffBoard_kt__qccrih();
    var tmp$ret$3;
    // Inline function 'react.dom.html.ReactHTML.td' call
    var tmp0__get_td__p4dsv3 = ReactHTML_getInstance();
    var tmp$ret$2;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = 'td';
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    var tmp = tmp$ret$3;
    $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_11);
    var tmp$ret$7;
    // Inline function 'react.dom.html.ReactHTML.td' call
    var tmp1__get_td__sddrnk = ReactHTML_getInstance();
    var tmp$ret$6;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$5;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$4;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$4 = 'td';
    tmp$ret$5 = tmp$ret$4;
    tmp$ret$6 = tmp$ret$5;
    tmp$ret$7 = tmp$ret$6;
    var tmp_0 = tmp$ret$7;
    $this$invoke.x4r(tmp_0, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_12);
    var tmp$ret$11;
    // Inline function 'react.dom.html.ReactHTML.td' call
    var tmp2__get_td__vmdqg1 = ReactHTML_getInstance();
    var tmp$ret$10;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$9;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$8;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$8 = 'td';
    tmp$ret$9 = tmp$ret$8;
    tmp$ret$10 = tmp$ret$9;
    tmp$ret$11 = tmp$ret$10;
    var tmp_1 = tmp$ret$11;
    $this$invoke.x4r(tmp_1, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_13);
    var tmp$ret$15;
    // Inline function 'react.dom.html.ReactHTML.td' call
    var tmp3__get_td__yvdp8i = ReactHTML_getInstance();
    var tmp$ret$14;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$13;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$12;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$12 = 'td';
    tmp$ret$13 = tmp$ret$12;
    tmp$ret$14 = tmp$ret$13;
    tmp$ret$15 = tmp$ret$14;
    var tmp_2 = tmp$ret$15;
    $this$invoke.x4r(tmp_2, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_14);
    var tmp$ret$19;
    // Inline function 'react.dom.html.ReactHTML.td' call
    var tmp4__get_td__wwqdy5 = ReactHTML_getInstance();
    var tmp$ret$18;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$17;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$16;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$16 = 'td';
    tmp$ret$17 = tmp$ret$16;
    tmp$ret$18 = tmp$ret$17;
    tmp$ret$19 = tmp$ret$18;
    var tmp_3 = tmp$ret$19;
    $this$invoke.x4r(tmp_3, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_15);
    return Unit_getInstance();
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_11($this$invoke) {
    _init_properties_TradeOffBoard_kt__qccrih();
    // Inline function 'emotion.react.css' call
    var tmp1_css = $this$invoke;
    var tmp$ret$12;
    // Inline function 'emotion.css.ClassName' call
    var tmp$ret$11;
    // Inline function 'js.core.jso' call
    var tmp$ret$10;
    // Inline function 'kotlin.apply' call
    var tmp$ret$0;
    // Inline function 'js.core.jso' call
    tmp$ret$0 = {};
    var tmp0_apply = tmp$ret$0;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
    var tmp$ret$9;
    // Inline function 'csstype.Padding' call
    var tmp$ret$3;
    // Inline function 'csstype.px' call
    var tmp$ret$2;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = '4px';
    var tmp$ret$1;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$1 = tmp0_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    var tmp3_Padding = tmp$ret$3;
    var tmp$ret$6;
    // Inline function 'csstype.px' call
    var tmp$ret$5;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp1_unsafeCast = '4px';
    var tmp$ret$4;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$4 = tmp1_unsafeCast;
    tmp$ret$5 = tmp$ret$4;
    tmp$ret$6 = tmp$ret$5;
    var tmp4_Padding = tmp$ret$6;
    var tmp$ret$8;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp2_unsafeCast = '' + tmp3_Padding + ' ' + tmp4_Padding;
    var tmp$ret$7;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$7 = tmp2_unsafeCast;
    tmp$ret$8 = tmp$ret$7;
    tmp$ret$9 = tmp$ret$8;
    tmp0_apply.padding = tmp$ret$9;
    tmp$ret$10 = tmp0_apply;
    tmp$ret$11 = tmp$ret$10;
    tmp$ret$12 = css(tmp$ret$11);
    tmp1_css.className = tmp$ret$12;
    return Unit_getInstance();
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_12($this$invoke) {
    _init_properties_TradeOffBoard_kt__qccrih();
    // Inline function 'emotion.react.css' call
    var tmp1_css = $this$invoke;
    var tmp$ret$12;
    // Inline function 'emotion.css.ClassName' call
    var tmp$ret$11;
    // Inline function 'js.core.jso' call
    var tmp$ret$10;
    // Inline function 'kotlin.apply' call
    var tmp$ret$0;
    // Inline function 'js.core.jso' call
    tmp$ret$0 = {};
    var tmp0_apply = tmp$ret$0;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
    var tmp$ret$9;
    // Inline function 'csstype.Padding' call
    var tmp$ret$3;
    // Inline function 'csstype.px' call
    var tmp$ret$2;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = '4px';
    var tmp$ret$1;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$1 = tmp0_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    var tmp3_Padding = tmp$ret$3;
    var tmp$ret$6;
    // Inline function 'csstype.px' call
    var tmp$ret$5;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp1_unsafeCast = '4px';
    var tmp$ret$4;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$4 = tmp1_unsafeCast;
    tmp$ret$5 = tmp$ret$4;
    tmp$ret$6 = tmp$ret$5;
    var tmp4_Padding = tmp$ret$6;
    var tmp$ret$8;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp2_unsafeCast = '' + tmp3_Padding + ' ' + tmp4_Padding;
    var tmp$ret$7;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$7 = tmp2_unsafeCast;
    tmp$ret$8 = tmp$ret$7;
    tmp$ret$9 = tmp$ret$8;
    tmp0_apply.padding = tmp$ret$9;
    tmp$ret$10 = tmp0_apply;
    tmp$ret$11 = tmp$ret$10;
    tmp$ret$12 = css(tmp$ret$11);
    tmp1_css.className = tmp$ret$12;
    $this$invoke.w4r('Weight');
    return Unit_getInstance();
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_13($this$invoke) {
    _init_properties_TradeOffBoard_kt__qccrih();
    // Inline function 'emotion.react.css' call
    var tmp1_css = $this$invoke;
    var tmp$ret$12;
    // Inline function 'emotion.css.ClassName' call
    var tmp$ret$11;
    // Inline function 'js.core.jso' call
    var tmp$ret$10;
    // Inline function 'kotlin.apply' call
    var tmp$ret$0;
    // Inline function 'js.core.jso' call
    tmp$ret$0 = {};
    var tmp0_apply = tmp$ret$0;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
    var tmp$ret$9;
    // Inline function 'csstype.Padding' call
    var tmp$ret$3;
    // Inline function 'csstype.px' call
    var tmp$ret$2;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = '4px';
    var tmp$ret$1;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$1 = tmp0_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    var tmp3_Padding = tmp$ret$3;
    var tmp$ret$6;
    // Inline function 'csstype.px' call
    var tmp$ret$5;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp1_unsafeCast = '4px';
    var tmp$ret$4;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$4 = tmp1_unsafeCast;
    tmp$ret$5 = tmp$ret$4;
    tmp$ret$6 = tmp$ret$5;
    var tmp4_Padding = tmp$ret$6;
    var tmp$ret$8;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp2_unsafeCast = '' + tmp3_Padding + ' ' + tmp4_Padding;
    var tmp$ret$7;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$7 = tmp2_unsafeCast;
    tmp$ret$8 = tmp$ret$7;
    tmp$ret$9 = tmp$ret$8;
    tmp0_apply.padding = tmp$ret$9;
    tmp$ret$10 = tmp0_apply;
    tmp$ret$11 = tmp$ret$10;
    tmp$ret$12 = css(tmp$ret$11);
    tmp1_css.className = tmp$ret$12;
    $this$invoke.w4r('Threshold');
    return Unit_getInstance();
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_14($this$invoke) {
    _init_properties_TradeOffBoard_kt__qccrih();
    // Inline function 'emotion.react.css' call
    var tmp1_css = $this$invoke;
    var tmp$ret$12;
    // Inline function 'emotion.css.ClassName' call
    var tmp$ret$11;
    // Inline function 'js.core.jso' call
    var tmp$ret$10;
    // Inline function 'kotlin.apply' call
    var tmp$ret$0;
    // Inline function 'js.core.jso' call
    tmp$ret$0 = {};
    var tmp0_apply = tmp$ret$0;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
    var tmp$ret$9;
    // Inline function 'csstype.Padding' call
    var tmp$ret$3;
    // Inline function 'csstype.px' call
    var tmp$ret$2;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = '4px';
    var tmp$ret$1;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$1 = tmp0_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    var tmp3_Padding = tmp$ret$3;
    var tmp$ret$6;
    // Inline function 'csstype.px' call
    var tmp$ret$5;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp1_unsafeCast = '4px';
    var tmp$ret$4;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$4 = tmp1_unsafeCast;
    tmp$ret$5 = tmp$ret$4;
    tmp$ret$6 = tmp$ret$5;
    var tmp4_Padding = tmp$ret$6;
    var tmp$ret$8;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp2_unsafeCast = '' + tmp3_Padding + ' ' + tmp4_Padding;
    var tmp$ret$7;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$7 = tmp2_unsafeCast;
    tmp$ret$8 = tmp$ret$7;
    tmp$ret$9 = tmp$ret$8;
    tmp0_apply.padding = tmp$ret$9;
    tmp$ret$10 = tmp0_apply;
    tmp$ret$11 = tmp$ret$10;
    tmp$ret$12 = css(tmp$ret$11);
    tmp1_css.className = tmp$ret$12;
    $this$invoke.w4r('Threshold Value');
    return Unit_getInstance();
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_15($this$invoke) {
    _init_properties_TradeOffBoard_kt__qccrih();
    // Inline function 'emotion.react.css' call
    var tmp1_css = $this$invoke;
    var tmp$ret$12;
    // Inline function 'emotion.css.ClassName' call
    var tmp$ret$11;
    // Inline function 'js.core.jso' call
    var tmp$ret$10;
    // Inline function 'kotlin.apply' call
    var tmp$ret$0;
    // Inline function 'js.core.jso' call
    tmp$ret$0 = {};
    var tmp0_apply = tmp$ret$0;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
    var tmp$ret$9;
    // Inline function 'csstype.Padding' call
    var tmp$ret$3;
    // Inline function 'csstype.px' call
    var tmp$ret$2;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = '4px';
    var tmp$ret$1;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$1 = tmp0_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    var tmp3_Padding = tmp$ret$3;
    var tmp$ret$6;
    // Inline function 'csstype.px' call
    var tmp$ret$5;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp1_unsafeCast = '4px';
    var tmp$ret$4;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$4 = tmp1_unsafeCast;
    tmp$ret$5 = tmp$ret$4;
    tmp$ret$6 = tmp$ret$5;
    var tmp4_Padding = tmp$ret$6;
    var tmp$ret$8;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp2_unsafeCast = '' + tmp3_Padding + ' ' + tmp4_Padding;
    var tmp$ret$7;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$7 = tmp2_unsafeCast;
    tmp$ret$8 = tmp$ret$7;
    tmp$ret$9 = tmp$ret$8;
    tmp0_apply.padding = tmp$ret$9;
    tmp$ret$10 = tmp0_apply;
    tmp$ret$11 = tmp$ret$10;
    tmp$ret$12 = css(tmp$ret$11);
    tmp1_css.className = tmp$ret$12;
    $this$invoke.w4r('Penalty');
    return Unit_getInstance();
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_3($props, $item, $state$delegate) {
    return function (weight) {
      changeWeightValue($props, invoke$lambda_27($state$delegate), $item.b5o_1, weight);
      invoke$lambda_28($state$delegate, invoke$lambda_27($state$delegate).p5o());
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_4($props, $item, $state$delegate) {
    return function (type) {
      changeThresholdType($props, invoke$lambda_27($state$delegate), $item.b5o_1, type);
      invoke$lambda_28($state$delegate, invoke$lambda_27($state$delegate).p5o());
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_5($props, $item, $state$delegate) {
    return function (threshold) {
      changeThresholdValue($props, invoke$lambda_27($state$delegate), $item.b5o_1, threshold);
      invoke$lambda_28($state$delegate, invoke$lambda_27($state$delegate).p5o());
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_6($props, $item, $state$delegate) {
    return function (penalty) {
      changePenaltyValue($props, invoke$lambda_27($state$delegate), $item.b5o_1, penalty);
      invoke$lambda_28($state$delegate, invoke$lambda_27($state$delegate).p5o());
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_16($props, $item, $tmp0__anonymous__1nv1x1, $requirements, $state$delegate) {
    return function ($this$invoke) {
      var tmp$ret$1;
      $l$block: {
        // Inline function 'kotlin.collections.first' call
        var tmp0_subject = $props.metricProp;
        var tmp0 = tmp0_subject.n4_1;
        var tmp;
        switch (tmp0) {
          case 0:
            tmp = invoke$lambda_27($state$delegate).j5o_1;
            break;
          case 1:
            tmp = invoke$lambda_27($state$delegate).k5o_1;
            break;
          default:
            noWhenBranchMatchedException();
            break;
        }
        var tmp0_first = tmp;
        var tmp0_iterator = tmp0_first.f();
        while (tmp0_iterator.g()) {
          var element = tmp0_iterator.h();
          var tmp$ret$0;
          // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
          tmp$ret$0 = element.b5o_1 === $item.b5o_1;
          if (tmp$ret$0) {
            tmp$ret$1 = element;
            break $l$block;
          }
        }
        throw NoSuchElementException_init_$Create$('Collection contains no element matching the predicate.');
      }
      $this$invoke.defaultValueProp = tmp$ret$1;
      $this$invoke.lastProp = $tmp0__anonymous__1nv1x1 === ($requirements.i() - 1 | 0);
      $this$invoke.requirementProp = $item;
      $this$invoke.handleChangeWeightValueProp = TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_3($props, $item, $state$delegate);
      $this$invoke.handleChangeThresholdTypeProp = TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_4($props, $item, $state$delegate);
      $this$invoke.handleChangeThresholdValueProp = TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_5($props, $item, $state$delegate);
      $this$invoke.handleChangePenaltyValueProp = TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_6($props, $item, $state$delegate);
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_7($props, $item, $tmp0__anonymous__1nv1x1, $requirements, $state$delegate) {
    return function ($this$invoke) {
      var tmp = get_RequirementItem();
      $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_16($props, $item, $tmp0__anonymous__1nv1x1, $requirements, $state$delegate));
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_6($props, $state$delegate) {
    return function ($this$invoke) {
      var tmp0_subject = $props.metricProp;
      var tmp0 = tmp0_subject.n4_1;
      var tmp;
      switch (tmp0) {
        case 0:
          tmp = invoke$lambda_27($state$delegate).j5o_1;
          break;
        case 1:
          tmp = invoke$lambda_27($state$delegate).k5o_1;
          break;
        default:
          noWhenBranchMatchedException();
          break;
      }
      var requirements = tmp;
      var index = 0;
      var tmp0_iterator = requirements.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
        var tmp1 = index;
        index = tmp1 + 1 | 0;
        var tmp0__anonymous__q1qw7t = checkIndexOverflow(tmp1);
        $this$invoke.key = item.b5o_1;
        var tmp$ret$3;
        // Inline function 'react.dom.html.ReactHTML.tr' call
        var tmp0__get_tr__p4dsj1 = ReactHTML_getInstance();
        var tmp$ret$2;
        // Inline function 'react.IntrinsicType' call
        var tmp$ret$1;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp$ret$0;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$0 = 'tr';
        tmp$ret$1 = tmp$ret$0;
        tmp$ret$2 = tmp$ret$1;
        tmp$ret$3 = tmp$ret$2;
        var tmp_0 = tmp$ret$3;
        $this$invoke.x4r(tmp_0, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_7($props, item, tmp0__anonymous__q1qw7t, requirements, $state$delegate));
      }
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2($props, $state$delegate) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$6;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$5;
      // Inline function 'js.core.jso' call
      var tmp$ret$4;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      tmp0_apply.borderCollapse = (/*union*/{collapse: 'collapse', separate: 'separate'}/*union*/).collapse;
      var tmp$ret$3;
      // Inline function 'csstype.pct' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '100%';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.width = tmp$ret$3;
      tmp$ret$4 = tmp0_apply;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = css(tmp$ret$5);
      tmp1_css.className = tmp$ret$6;
      var tmp$ret$10;
      // Inline function 'react.dom.html.ReactHTML.thead' call
      var tmp2__get_thead__ud1bnr = ReactHTML_getInstance();
      var tmp$ret$9;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$8;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = 'thead';
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      tmp$ret$10 = tmp$ret$9;
      var tmp = tmp$ret$10;
      $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_5);
      var tmp$ret$14;
      // Inline function 'react.dom.html.ReactHTML.tbody' call
      var tmp3__get_tbody__zau9u0 = ReactHTML_getInstance();
      var tmp$ret$13;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$12;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$11;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$11 = 'tbody';
      tmp$ret$12 = tmp$ret$11;
      tmp$ret$13 = tmp$ret$12;
      tmp$ret$14 = tmp$ret$13;
      var tmp_0 = tmp$ret$14;
      $this$invoke.x4r(tmp_0, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_6($props, $state$delegate));
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda_2($props, $state$delegate) {
    return function ($this$FC, it) {
      var tmp$ret$3;
      // Inline function 'react.dom.html.ReactHTML.table' call
      var tmp0__get_table__krka6b = ReactHTML_getInstance();
      var tmp$ret$2;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = 'table';
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp = tmp$ret$3;
      $this$FC.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2($props, $state$delegate));
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda_2($props, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.titleStyleProp = Themes_getInstance().g58_1;
      var tmp0_subject = $props.metricProp;
      var tmp0 = tmp0_subject.n4_1;
      var tmp;
      switch (tmp0) {
        case 1:
          tmp = 'Security Requirements';
          break;
        case 0:
          tmp = 'Scenario Requirements';
          break;
        default:
          noWhenBranchMatchedException();
          break;
      }
      $this$invoke.titleTextProp = tmp;
      $this$invoke.titleVariantProp = 'subtitle1';
      $this$invoke.setDividerProp = false;
      var tmp$ret$2;
      // Inline function 'csstype.pct' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '95%';
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = tmp0_unsafeCast;
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      $this$invoke.dividerWidthProp = tmp$ret$2;
      $this$invoke.childProp = create(FC(TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda_2($props, $state$delegate)));
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda_2($props, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.item = true;
      $this$invoke.sm = 12;
      $this$invoke.md = 12;
      $this$invoke.lg = 12;
      $this$invoke.xl = 12;
      var tmp = get_CryptoACPaper();
      $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda_2($props, $state$delegate));
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda($props, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.container = true;
      $this$invoke.spacing = 3;
      var tmp = Grid;
      $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda($state$delegate));
      var tmp_0 = Grid;
      $this$invoke.x4r(tmp_0, TradeOffBoard$lambda$lambda$lambda$lambda_0($state$delegate));
      var tmp_1 = Grid;
      $this$invoke.x4r(tmp_1, TradeOffBoard$lambda$lambda$lambda$lambda_1($state$delegate));
      var tmp_2;
      if ($props.algorithmProp.equals(Algorithm_AdHoc_getInstance())) {
        var tmp_3 = Grid;
        $this$invoke.x4r(tmp_3, TradeOffBoard$lambda$lambda$lambda$lambda_2($props, $state$delegate));
        tmp_2 = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda_0($this$invoke) {
    _init_properties_TradeOffBoard_kt__qccrih();
    return Unit_getInstance();
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda_3($props, $state$delegate) {
    return function (it) {
      $props.handleChangeBackdropIsOpenProp(true);
      var newArchitectures = computePossibleArchitectures($props, invoke$lambda_27($state$delegate));
      invoke$lambda_28($state$delegate, invoke$lambda_27($state$delegate).p5o(VOID, VOID, newArchitectures));
      $props.handleChangeBackdropIsOpenProp(false);
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda_4($this$invoke) {
    _init_properties_TradeOffBoard_kt__qccrih();
    return Unit_getInstance();
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda_3($props, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.size = 'small';
      $this$invoke.label = 'refresh';
      $this$invoke.color = 'secondary';
      $this$invoke.onClick = TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda_3($props, $state$delegate);
      var tmp = FaUndoAlt;
      $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda_4);
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda_3($props, $state$delegate) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$3;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$2;
      // Inline function 'js.core.jso' call
      var tmp$ret$1;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      tmp0_apply.float = (/*union*/{inlineEnd: 'inline-end', inlineStart: 'inline-start', left: 'left', right: 'right'}/*union*/).right;
      tmp$ret$1 = tmp0_apply;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = css(tmp$ret$2);
      tmp1_css.className = tmp$ret$3;
      var tmp = IconButton;
      $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda_3($props, $state$delegate));
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_7($element) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$12;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$11;
      // Inline function 'js.core.jso' call
      var tmp$ret$10;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$9;
      // Inline function 'csstype.Padding' call
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '4px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp3_Padding = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '4px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      var tmp4_Padding = tmp$ret$6;
      var tmp$ret$8;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp2_unsafeCast = '' + tmp3_Padding + ' ' + tmp4_Padding;
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = tmp2_unsafeCast;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      tmp0_apply.padding = tmp$ret$9;
      tmp$ret$10 = tmp0_apply;
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = css(tmp$ret$11);
      tmp1_css.className = tmp$ret$12;
      $this$invoke.w4r($element.toString());
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_8($this$invoke) {
    _init_properties_TradeOffBoard_kt__qccrih();
    // Inline function 'emotion.react.css' call
    var tmp1_css = $this$invoke;
    var tmp$ret$12;
    // Inline function 'emotion.css.ClassName' call
    var tmp$ret$11;
    // Inline function 'js.core.jso' call
    var tmp$ret$10;
    // Inline function 'kotlin.apply' call
    var tmp$ret$0;
    // Inline function 'js.core.jso' call
    tmp$ret$0 = {};
    var tmp0_apply = tmp$ret$0;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
    var tmp$ret$9;
    // Inline function 'csstype.Padding' call
    var tmp$ret$3;
    // Inline function 'csstype.px' call
    var tmp$ret$2;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = '4px';
    var tmp$ret$1;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$1 = tmp0_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    var tmp3_Padding = tmp$ret$3;
    var tmp$ret$6;
    // Inline function 'csstype.px' call
    var tmp$ret$5;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp1_unsafeCast = '4px';
    var tmp$ret$4;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$4 = tmp1_unsafeCast;
    tmp$ret$5 = tmp$ret$4;
    tmp$ret$6 = tmp$ret$5;
    var tmp4_Padding = tmp$ret$6;
    var tmp$ret$8;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp2_unsafeCast = '' + tmp3_Padding + ' ' + tmp4_Padding;
    var tmp$ret$7;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$7 = tmp2_unsafeCast;
    tmp$ret$8 = tmp$ret$7;
    tmp$ret$9 = tmp$ret$8;
    tmp0_apply.padding = tmp$ret$9;
    tmp$ret$10 = tmp0_apply;
    tmp$ret$11 = tmp$ret$10;
    tmp$ret$12 = css(tmp$ret$11);
    tmp1_css.className = tmp$ret$12;
    $this$invoke.w4r('Score');
    return Unit_getInstance();
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda_5($state$delegate) {
    return function ($this$invoke) {
      var tmp0_forEach = invoke$lambda_27($state$delegate).m5o_1;
      var tmp0_iterator = tmp0_forEach.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
        var tmp$ret$3;
        // Inline function 'react.dom.html.ReactHTML.td' call
        var tmp0__get_td__p4dsv3 = ReactHTML_getInstance();
        var tmp$ret$2;
        // Inline function 'react.IntrinsicType' call
        var tmp$ret$1;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp$ret$0;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$0 = 'td';
        tmp$ret$1 = tmp$ret$0;
        tmp$ret$2 = tmp$ret$1;
        tmp$ret$3 = tmp$ret$2;
        var tmp = tmp$ret$3;
        $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_7(element));
      }
      var tmp$ret$7;
      // Inline function 'react.dom.html.ReactHTML.td' call
      var tmp1__get_td__sddrnk = ReactHTML_getInstance();
      var tmp$ret$6;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = 'td';
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      tmp$ret$7 = tmp$ret$6;
      var tmp_0 = tmp$ret$7;
      $this$invoke.x4r(tmp_0, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_8);
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda_4($state$delegate) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$9;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$8;
      // Inline function 'js.core.jso' call
      var tmp$ret$7;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'csstype.Color' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = 'rgba(173, 173, 173, 0.2)';
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.borderBottomColor = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '1px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp0_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      tmp0_apply.borderBottomWidth = tmp$ret$6;
      tmp0_apply.borderBottomStyle = (/*union*/{dashed: 'dashed', dotted: 'dotted', double: 'double', groove: 'groove', hidden: 'hidden', inset: 'inset', outset: 'outset', ridge: 'ridge', solid: 'solid'}/*union*/).solid;
      tmp$ret$7 = tmp0_apply;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = css(tmp$ret$8);
      tmp1_css.className = tmp$ret$9;
      var tmp$ret$13;
      // Inline function 'react.dom.html.ReactHTML.tr' call
      var tmp2__get_tr__vmdq3z = ReactHTML_getInstance();
      var tmp$ret$12;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$11;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$10;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$10 = 'tr';
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = tmp$ret$11;
      tmp$ret$13 = tmp$ret$12;
      var tmp = tmp$ret$13;
      $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda_5($state$delegate));
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda_6($architecturesToShow) {
    return function () {
      return 'Showing ' + $architecturesToShow.i() + ' architectures';
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_8($element) {
    return function ($this$invoke) {
      $this$invoke.srcProp = getImageFromEntity($element);
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_9($tmp0__anonymous__1nv1x1, $architecturesToShow, $tmp1__anonymous__6ijp4k, $entitiesInDomain) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$12;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$11;
      // Inline function 'js.core.jso' call
      var tmp$ret$10;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      if ($tmp0__anonymous__1nv1x1 === 0) {
        var tmp$ret$3;
        // Inline function 'csstype.px' call
        var tmp$ret$2;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp0_unsafeCast = '3px';
        var tmp$ret$1;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$1 = tmp0_unsafeCast;
        tmp$ret$2 = tmp$ret$1;
        tmp$ret$3 = tmp$ret$2;
        tmp0_apply.paddingTop = tmp$ret$3;
      } else if ($tmp0__anonymous__1nv1x1 === ($architecturesToShow.i() - 1 | 0)) {
        var tmp$ret$6;
        // Inline function 'csstype.px' call
        var tmp$ret$5;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp1_unsafeCast = '3px';
        var tmp$ret$4;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$4 = tmp1_unsafeCast;
        tmp$ret$5 = tmp$ret$4;
        tmp$ret$6 = tmp$ret$5;
        tmp0_apply.paddingBottom = tmp$ret$6;
        if ($tmp1__anonymous__6ijp4k === 0) {
          var tmp$ret$9;
          // Inline function 'csstype.px' call
          var tmp$ret$8;
          // Inline function 'kotlin.js.unsafeCast' call
          var tmp2_unsafeCast = '15px';
          var tmp$ret$7;
          // Inline function 'kotlin.js.asDynamic' call
          tmp$ret$7 = tmp2_unsafeCast;
          tmp$ret$8 = tmp$ret$7;
          tmp$ret$9 = tmp$ret$8;
          tmp0_apply.borderBottomLeftRadius = tmp$ret$9;
        }
      }
      tmp$ret$10 = tmp0_apply;
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = css(tmp$ret$11);
      tmp1_css.className = tmp$ret$12;
      var tmp0_iterator = $entitiesInDomain.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
        var tmp = get_EntityIcon();
        $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_8(element));
      }
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_7($score) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$9;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$8;
      // Inline function 'js.core.jso' call
      var tmp$ret$7;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'csstype.em' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '0.5em';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.marginRight = tmp$ret$3;
      tmp0_apply.fontFamily = (/*union*/{cursive: 'cursive', fantasy: 'fantasy', monospace: 'monospace', sansSerif: 'sans-serif', serif: 'serif'}/*union*/).monospace;
      var tmp$ret$6;
      // Inline function 'csstype.Color' call
      var tmp;
      if ($score < 0) {
        tmp = '#c0392b';
      } else if ($score === 0) {
        tmp = 'black';
      } else {
        tmp = '#27ae60';
      }
      var tmp1_Color = tmp;
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_Color;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      tmp0_apply.color = tmp$ret$6;
      tmp$ret$7 = tmp0_apply;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = css(tmp$ret$8);
      tmp1_css.className = tmp$ret$9;
      var tmp_0;
      if ($score >= 0) {
        tmp_0 = '+';
      } else {
        tmp_0 = '';
      }
      $this$invoke.w4r(tmp_0 + $score);
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_17($score) {
    return function ($this$FC, it) {
      var tmp$ret$3;
      // Inline function 'react.dom.html.ReactHTML.span' call
      var tmp0__get_span__8hjtqf = ReactHTML_getInstance();
      var tmp$ret$2;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = 'span';
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp = tmp$ret$3;
      $this$FC.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_7($score));
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_9($element, $score) {
    return function ($this$invoke) {
      $this$invoke.title = replace($element.p(), '_', '-');
      FC(TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_17($score));
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_10($tmp0__anonymous__1nv1x1, $architecturesToShow, $props, $item) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$12;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$11;
      // Inline function 'js.core.jso' call
      var tmp$ret$10;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      if ($tmp0__anonymous__1nv1x1 === 0) {
        var tmp$ret$3;
        // Inline function 'csstype.px' call
        var tmp$ret$2;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp0_unsafeCast = '3px';
        var tmp$ret$1;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$1 = tmp0_unsafeCast;
        tmp$ret$2 = tmp$ret$1;
        tmp$ret$3 = tmp$ret$2;
        tmp0_apply.paddingTop = tmp$ret$3;
      } else if ($tmp0__anonymous__1nv1x1 === ($architecturesToShow.i() - 1 | 0)) {
        var tmp$ret$6;
        // Inline function 'csstype.px' call
        var tmp$ret$5;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp1_unsafeCast = '3px';
        var tmp$ret$4;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$4 = tmp1_unsafeCast;
        tmp$ret$5 = tmp$ret$4;
        tmp$ret$6 = tmp$ret$5;
        tmp0_apply.paddingBottom = tmp$ret$6;
        var tmp$ret$9;
        // Inline function 'csstype.px' call
        var tmp$ret$8;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp2_unsafeCast = '15px';
        var tmp$ret$7;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$7 = tmp2_unsafeCast;
        tmp$ret$8 = tmp$ret$7;
        tmp$ret$9 = tmp$ret$8;
        tmp0_apply.borderBottomRightRadius = tmp$ret$9;
      }
      tmp$ret$10 = tmp0_apply;
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = css(tmp$ret$11);
      tmp1_css.className = tmp$ret$12;
      var tmp;
      if ($props.algorithmProp.equals(Algorithm_AdHoc_getInstance())) {
        $this$invoke.w4r($item.w5n_1.toString());
        tmp = Unit_getInstance();
      } else if ($props.algorithmProp.equals(Algorithm_Best_getInstance())) {
        var tmp2_forEach = $item.v5n_1;
        var tmp$ret$13;
        // Inline function 'kotlin.collections.iterator' call
        tmp$ret$13 = tmp2_forEach.o().f();
        var tmp0_iterator = tmp$ret$13;
        while (tmp0_iterator.g()) {
          var element = tmp0_iterator.h();
          // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
          var score = element.q();
          var tmp_0 = Tooltip;
          $this$invoke.x4r(tmp_0, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_9(element, score));
        }
        tmp = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda_7($item, $state$delegate, $tmp0__anonymous__1nv1x1, $architecturesToShow, $props) {
    return function ($this$invoke) {
      var tmp0_forEachIndexed = invoke$lambda_27($state$delegate).m5o_1;
      var index = 0;
      var tmp0_iterator = tmp0_forEachIndexed.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
        var tmp1 = index;
        index = tmp1 + 1 | 0;
        var tmp1__anonymous__uwfjfc = checkIndexOverflow(tmp1);
        var tmp0_elvis_lhs = $item.t5n_1.y1(item);
        var tmp;
        if (tmp0_elvis_lhs == null) {
          var tmp$ret$0;
          // Inline function 'kotlin.collections.listOf' call
          tmp$ret$0 = emptyList();
          tmp = tmp$ret$0;
        } else {
          tmp = tmp0_elvis_lhs;
        }
        var entitiesInDomain = tmp;
        var tmp$ret$4;
        // Inline function 'react.dom.html.ReactHTML.td' call
        var tmp0__get_td__p4dsv3 = ReactHTML_getInstance();
        var tmp$ret$3;
        // Inline function 'react.IntrinsicType' call
        var tmp$ret$2;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp$ret$1;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$1 = 'td';
        tmp$ret$2 = tmp$ret$1;
        tmp$ret$3 = tmp$ret$2;
        tmp$ret$4 = tmp$ret$3;
        var tmp_0 = tmp$ret$4;
        $this$invoke.x4r(tmp_0, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_9($tmp0__anonymous__1nv1x1, $architecturesToShow, tmp1__anonymous__uwfjfc, entitiesInDomain));
      }
      var tmp$ret$8;
      // Inline function 'react.dom.html.ReactHTML.td' call
      var tmp2__get_td__vmdqg1 = ReactHTML_getInstance();
      var tmp$ret$7;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$6;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$5 = 'td';
      tmp$ret$6 = tmp$ret$5;
      tmp$ret$7 = tmp$ret$6;
      tmp$ret$8 = tmp$ret$7;
      var tmp_1 = tmp$ret$8;
      $this$invoke.x4r(tmp_1, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_10($tmp0__anonymous__1nv1x1, $architecturesToShow, $props, $item));
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda_5($state$delegate, $props) {
    return function ($this$invoke) {
      var architecturesToShow = invoke$lambda_27($state$delegate).i5o_1;
      var tmp = get_logger_7();
      tmp.h4r(TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda_6(architecturesToShow));
      var index = 0;
      var tmp0_iterator = architecturesToShow.f();
      while (tmp0_iterator.g()) {
        var item = tmp0_iterator.h();
        // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
        var tmp1 = index;
        index = tmp1 + 1 | 0;
        var tmp0__anonymous__q1qw7t = checkIndexOverflow(tmp1);
        var tmp$ret$3;
        // Inline function 'react.dom.html.ReactHTML.tr' call
        var tmp0__get_tr__p4dsj1 = ReactHTML_getInstance();
        var tmp$ret$2;
        // Inline function 'react.IntrinsicType' call
        var tmp$ret$1;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp$ret$0;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$0 = 'tr';
        tmp$ret$1 = tmp$ret$0;
        tmp$ret$2 = tmp$ret$1;
        tmp$ret$3 = tmp$ret$2;
        var tmp_0 = tmp$ret$3;
        $this$invoke.x4r(tmp_0, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda$lambda_7(item, $state$delegate, tmp0__anonymous__q1qw7t, architecturesToShow, $props));
      }
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda$lambda_4($state$delegate, $props) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$6;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$5;
      // Inline function 'js.core.jso' call
      var tmp$ret$4;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      tmp0_apply.borderCollapse = (/*union*/{collapse: 'collapse', separate: 'separate'}/*union*/).collapse;
      var tmp$ret$3;
      // Inline function 'csstype.pct' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '100%';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.width = tmp$ret$3;
      tmp$ret$4 = tmp0_apply;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = css(tmp$ret$5);
      tmp1_css.className = tmp$ret$6;
      var tmp$ret$10;
      // Inline function 'react.dom.html.ReactHTML.thead' call
      var tmp2__get_thead__ud1bnr = ReactHTML_getInstance();
      var tmp$ret$9;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$8;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = 'thead';
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      tmp$ret$10 = tmp$ret$9;
      var tmp = tmp$ret$10;
      $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda_4($state$delegate));
      var tmp$ret$14;
      // Inline function 'react.dom.html.ReactHTML.tbody' call
      var tmp3__get_tbody__zau9u0 = ReactHTML_getInstance();
      var tmp$ret$13;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$12;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$11;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$11 = 'tbody';
      tmp$ret$12 = tmp$ret$11;
      tmp$ret$13 = tmp$ret$12;
      tmp$ret$14 = tmp$ret$13;
      var tmp_0 = tmp$ret$14;
      $this$invoke.x4r(tmp_0, TradeOffBoard$lambda$lambda$lambda$lambda$lambda$lambda_5($state$delegate, $props));
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda$lambda_3($props, $state$delegate) {
    return function ($this$FC, it) {
      var tmp$ret$3;
      // Inline function 'react.dom.html.ReactHTML.div' call
      var tmp0__get_div__2k2o9m = ReactHTML_getInstance();
      var tmp$ret$2;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = 'div';
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp = tmp$ret$3;
      $this$FC.x4r(tmp, TradeOffBoard$lambda$lambda$lambda$lambda$lambda_3($props, $state$delegate));
      var tmp$ret$7;
      // Inline function 'react.dom.html.ReactHTML.table' call
      var tmp1__get_table__pm8xdu = ReactHTML_getInstance();
      var tmp$ret$6;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = 'table';
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      tmp$ret$7 = tmp$ret$6;
      var tmp_0 = tmp$ret$7;
      $this$FC.x4r(tmp_0, TradeOffBoard$lambda$lambda$lambda$lambda$lambda_4($state$delegate, $props));
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda$lambda_1($props, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.titleStyleProp = Themes_getInstance().g58_1;
      $this$invoke.titleTextProp = 'Best Architectures';
      $this$invoke.titleVariantProp = 'subtitle1';
      $this$invoke.setDividerProp = false;
      var tmp$ret$2;
      // Inline function 'csstype.pct' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '95%';
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = tmp0_unsafeCast;
      tmp$ret$1 = tmp$ret$0;
      tmp$ret$2 = tmp$ret$1;
      $this$invoke.dividerWidthProp = tmp$ret$2;
      $this$invoke.childProp = create(FC(TradeOffBoard$lambda$lambda$lambda$lambda_3($props, $state$delegate)));
      return Unit_getInstance();
    };
  }
  function TradeOffBoard$lambda$lambda($props, $state$delegate) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$9;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$8;
      // Inline function 'js.core.jso' call
      var tmp$ret$7;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TradeOffBoard.<anonymous>.<anonymous>.<anonymous>' call
      tmp0_apply.textAlign = (/*union*/{center: 'center', end: 'end', justify: 'justify', left: 'left', matchParent: 'match-parent', right: 'right', start: 'start'}/*union*/).center;
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '10px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.paddingTop = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '10px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      tmp0_apply.paddingBottom = tmp$ret$6;
      tmp$ret$7 = tmp0_apply;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = css(tmp$ret$8);
      tmp1_css.className = tmp$ret$9;
      var tmp = Grid;
      $this$invoke.x4r(tmp, TradeOffBoard$lambda$lambda$lambda($props, $state$delegate));
      var tmp$ret$13;
      // Inline function 'react.dom.html.ReactHTML.br' call
      var tmp2__get_br__vme3gh = ReactHTML_getInstance();
      var tmp$ret$12;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$11;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$10;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$10 = 'br';
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = tmp$ret$11;
      tmp$ret$13 = tmp$ret$12;
      var tmp_0 = tmp$ret$13;
      $this$invoke.x4r(tmp_0, TradeOffBoard$lambda$lambda$lambda_0);
      var tmp_1 = get_CryptoACPaper();
      $this$invoke.x4r(tmp_1, TradeOffBoard$lambda$lambda$lambda_1($props, $state$delegate));
      return Unit_getInstance();
    };
  }
  function changeNumberOfInstances$lambda($entity, $newNumberOfInstances) {
    return function () {
      return 'changeNumberOfInstances, entity ' + $entity + ', newNumberOfInstances ' + $newNumberOfInstances;
    };
  }
  function changePenaltyValue$lambda($requirement, $penalty) {
    return function () {
      return 'changePenalty, requirement ' + $requirement + ', penalty ' + $penalty;
    };
  }
  function changeThresholdValue$lambda($requirement, $value) {
    return function () {
      return 'changeThresholdValue, requirement ' + $requirement + ', value ' + $value;
    };
  }
  function changeThresholdType$lambda($requirement, $threshold) {
    return function () {
      return 'changeThresholdType, requirement ' + $requirement + ', threshold ' + $threshold;
    };
  }
  function changeWeightValue$lambda($requirement, $weight) {
    return function () {
      return 'changeWeight, requirement ' + $requirement + ', weight ' + $weight;
    };
  }
  function changeLikelihood$lambda($domain, $attacker, $newLikelihood) {
    return function () {
      return 'ChangeLikelihood, domain ' + $domain + ', attacker ' + $attacker + ', newLikelihood ' + $newLikelihood;
    };
  }
  function toggleAssignment$lambda($entity, $domain, $accepted) {
    return function () {
      return 'ToggleAssignment, entity ' + $entity + ', domain ' + $domain + ', accepted ' + $accepted;
    };
  }
  function computePossibleArchitectures$lambda() {
    _init_properties_TradeOffBoard_kt__qccrih();
    return 'Derive the list of possible assignments in the form of <domain, entity> tuples';
  }
  function computePossibleArchitectures$lambda_0() {
    _init_properties_TradeOffBoard_kt__qccrih();
    return 'Compute the power set of possible assignments, so to have all possible architectures';
  }
  function computePossibleArchitectures$lambda_1() {
    _init_properties_TradeOffBoard_kt__qccrih();
    return 'Compute the score of each architecture for each (security or performance) requirement';
  }
  function computePossibleArchitectures$lambda_2($architectures) {
    return function () {
      return 'There are ' + $architectures.i() + ' architectures';
    };
  }
  function orderArchitectures$lambda($possibleArchitectures) {
    return function () {
      return '' + $possibleArchitectures.i() + ' architectures are being ordered';
    };
  }
  function orderArchitectures$lambda_0(a, b) {
    _init_properties_TradeOffBoard_kt__qccrih();
    var tmp$ret$2;
    // Inline function 'kotlin.comparisons.compareValuesBy' call
    var tmp$ret$0;
    // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.orderArchitectures.<anonymous>' call
    tmp$ret$0 = b.w5n_1;
    var tmp = tmp$ret$0;
    var tmp$ret$1;
    // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.orderArchitectures.<anonymous>' call
    tmp$ret$1 = a.w5n_1;
    tmp$ret$2 = compareValues(tmp, tmp$ret$1);
    return tmp$ret$2;
  }
  function orderArchitectures$lambda_1($possibleArchitectures) {
    return function () {
      return '' + $possibleArchitectures.i() + ' architectures are optimal';
    };
  }
  function Scenario_CryptoAC_getInstance() {
    Scenario_initEntries();
    return Scenario_CryptoAC_instance;
  }
  function Scenario_MQTT_getInstance() {
    Scenario_initEntries();
    return Scenario_MQTT_instance;
  }
  function Algorithm_Best_getInstance() {
    Algorithm_initEntries();
    return Algorithm_Best_instance;
  }
  function Algorithm_AdHoc_getInstance() {
    Algorithm_initEntries();
    return Algorithm_AdHoc_instance;
  }
  function Metric_Goals_getInstance() {
    Metric_initEntries();
    return Metric_Goals_instance;
  }
  function Metric_Protection_getInstance() {
    Metric_initEntries();
    return Metric_Protection_instance;
  }
  function Domains_Client_getInstance() {
    Domains_initEntries();
    return Domains_Client_instance;
  }
  function Domains_ESP_getInstance() {
    Domains_initEntries();
    return Domains_ESP_instance;
  }
  function Domains_OnPremise_getInstance() {
    Domains_initEntries();
    return Domains_OnPremise_instance;
  }
  function Domains_CSP_getInstance() {
    Domains_initEntries();
    return Domains_CSP_instance;
  }
  function DomainsWithChannels_Client_getInstance() {
    DomainsWithChannels_initEntries();
    return DomainsWithChannels_Client_instance;
  }
  function DomainsWithChannels_ESP_getInstance() {
    DomainsWithChannels_initEntries();
    return DomainsWithChannels_ESP_instance;
  }
  function DomainsWithChannels_OnPremise_getInstance() {
    DomainsWithChannels_initEntries();
    return DomainsWithChannels_OnPremise_instance;
  }
  function DomainsWithChannels_CSP_getInstance() {
    DomainsWithChannels_initEntries();
    return DomainsWithChannels_CSP_instance;
  }
  function DomainsWithChannels_Client_ESP_getInstance() {
    DomainsWithChannels_initEntries();
    return DomainsWithChannels_Client_ESP_instance;
  }
  function DomainsWithChannels_Client_OnPremise_getInstance() {
    DomainsWithChannels_initEntries();
    return DomainsWithChannels_Client_OnPremise_instance;
  }
  function DomainsWithChannels_Client_CSP_getInstance() {
    DomainsWithChannels_initEntries();
    return DomainsWithChannels_Client_CSP_instance;
  }
  function DomainsWithChannels_ESP_OnPremise_getInstance() {
    DomainsWithChannels_initEntries();
    return DomainsWithChannels_ESP_OnPremise_instance;
  }
  function DomainsWithChannels_ESP_CSP_getInstance() {
    DomainsWithChannels_initEntries();
    return DomainsWithChannels_ESP_CSP_instance;
  }
  function DomainsWithChannels_OnPremise_CSP_getInstance() {
    DomainsWithChannels_initEntries();
    return DomainsWithChannels_OnPremise_CSP_instance;
  }
  function Entities_CryptoAC_getInstance() {
    Entities_initEntries();
    return Entities_CryptoAC_instance;
  }
  function Entities_RM_getInstance() {
    Entities_initEntries();
    return Entities_RM_instance;
  }
  function Entities_MM_getInstance() {
    Entities_initEntries();
    return Entities_MM_instance;
  }
  function Entities_DM_getInstance() {
    Entities_initEntries();
    return Entities_DM_instance;
  }
  function EntitiesWithChannels_CryptoAC_getInstance() {
    EntitiesWithChannels_initEntries();
    return EntitiesWithChannels_CryptoAC_instance;
  }
  function EntitiesWithChannels_RM_getInstance() {
    EntitiesWithChannels_initEntries();
    return EntitiesWithChannels_RM_instance;
  }
  function EntitiesWithChannels_MM_getInstance() {
    EntitiesWithChannels_initEntries();
    return EntitiesWithChannels_MM_instance;
  }
  function EntitiesWithChannels_DM_getInstance() {
    EntitiesWithChannels_initEntries();
    return EntitiesWithChannels_DM_instance;
  }
  function EntitiesWithChannels_CryptoAC_RM_getInstance() {
    EntitiesWithChannels_initEntries();
    return EntitiesWithChannels_CryptoAC_RM_instance;
  }
  function EntitiesWithChannels_CryptoAC_DM_getInstance() {
    EntitiesWithChannels_initEntries();
    return EntitiesWithChannels_CryptoAC_DM_instance;
  }
  function EntitiesWithChannels_CryptoAC_MM_getInstance() {
    EntitiesWithChannels_initEntries();
    return EntitiesWithChannels_CryptoAC_MM_instance;
  }
  function EntitiesWithChannels_RM_MM_getInstance() {
    EntitiesWithChannels_initEntries();
    return EntitiesWithChannels_RM_MM_instance;
  }
  function EntitiesWithChannels_RM_DM_getInstance() {
    EntitiesWithChannels_initEntries();
    return EntitiesWithChannels_RM_DM_instance;
  }
  function EntitiesWithChannels_MM_DM_getInstance() {
    EntitiesWithChannels_initEntries();
    return EntitiesWithChannels_MM_DM_instance;
  }
  function Attackers_MitM_getInstance() {
    Attackers_initEntries();
    return Attackers_MitM_instance;
  }
  function Attackers_Insider_getInstance() {
    Attackers_initEntries();
    return Attackers_Insider_instance;
  }
  function Attackers_MatD_getInstance() {
    Attackers_initEntries();
    return Attackers_MatD_instance;
  }
  function Likelihood_High_getInstance() {
    Likelihood_initEntries();
    return Likelihood_High_instance;
  }
  function Likelihood_Medium_getInstance() {
    Likelihood_initEntries();
    return Likelihood_Medium_instance;
  }
  function Likelihood_Low_getInstance() {
    Likelihood_initEntries();
    return Likelihood_Low_instance;
  }
  function Likelihood_None_getInstance() {
    Likelihood_initEntries();
    return Likelihood_None_instance;
  }
  function Impact_High_getInstance() {
    Impact_initEntries();
    return Impact_High_instance;
  }
  function Impact_Medium_getInstance() {
    Impact_initEntries();
    return Impact_Medium_instance;
  }
  function Impact_Low_getInstance() {
    Impact_initEntries();
    return Impact_Low_instance;
  }
  function Impact_None_getInstance() {
    Impact_initEntries();
    return Impact_None_instance;
  }
  function Threshold_None_getInstance() {
    Threshold_initEntries();
    return Threshold_None_instance;
  }
  function Threshold_Soft_getInstance() {
    Threshold_initEntries();
    return Threshold_Soft_instance;
  }
  function Threshold_Hard_getInstance() {
    Threshold_initEntries();
    return Threshold_Hard_instance;
  }
  function SecurityRequirements_Confidentiality_getInstance() {
    SecurityRequirements_initEntries();
    return SecurityRequirements_Confidentiality_instance;
  }
  function SecurityRequirements_Integrity_getInstance() {
    SecurityRequirements_initEntries();
    return SecurityRequirements_Integrity_instance;
  }
  function SecurityRequirements_Availability_getInstance() {
    SecurityRequirements_initEntries();
    return SecurityRequirements_Availability_instance;
  }
  function PerformanceRequirements_Redundancy_getInstance() {
    PerformanceRequirements_initEntries();
    return PerformanceRequirements_Redundancy_instance;
  }
  function PerformanceRequirements_Scalability_getInstance() {
    PerformanceRequirements_initEntries();
    return PerformanceRequirements_Scalability_instance;
  }
  function PerformanceRequirements_Reliability_getInstance() {
    PerformanceRequirements_initEntries();
    return PerformanceRequirements_Reliability_instance;
  }
  function PerformanceRequirements_Maintenance_getInstance() {
    PerformanceRequirements_initEntries();
    return PerformanceRequirements_Maintenance_instance;
  }
  function PerformanceRequirements_DoS_Resilience_getInstance() {
    PerformanceRequirements_initEntries();
    return PerformanceRequirements_DoS_Resilience_instance;
  }
  function PerformanceRequirements_CSP_Vendor_Lock_in_getInstance() {
    PerformanceRequirements_initEntries();
    return PerformanceRequirements_CSP_Vendor_Lock_in_instance;
  }
  function PerformanceRequirements_On_premise_Savings_getInstance() {
    PerformanceRequirements_initEntries();
    return PerformanceRequirements_On_premise_Savings_instance;
  }
  function PerformanceRequirements_CSP_Savings_getInstance() {
    PerformanceRequirements_initEntries();
    return PerformanceRequirements_CSP_Savings_instance;
  }
  function PerformanceRequirements_Latency_getInstance() {
    PerformanceRequirements_initEntries();
    return PerformanceRequirements_Latency_instance;
  }
  function PerformanceRequirements_Throughput_getInstance() {
    PerformanceRequirements_initEntries();
    return PerformanceRequirements_Throughput_instance;
  }
  function PerformanceRequirements_Computational_Power_getInstance() {
    PerformanceRequirements_initEntries();
    return PerformanceRequirements_Computational_Power_instance;
  }
  function PerformanceRequirements_Storage_capacity_getInstance() {
    PerformanceRequirements_initEntries();
    return PerformanceRequirements_Storage_capacity_instance;
  }
  function PerformanceRequirements_ESP_Vendor_Lock_in_getInstance() {
    PerformanceRequirements_initEntries();
    return PerformanceRequirements_ESP_Vendor_Lock_in_instance;
  }
  function PerformanceRequirements_ESP_Savings_getInstance() {
    PerformanceRequirements_initEntries();
    return PerformanceRequirements_ESP_Savings_instance;
  }
  var properties_initialized_TradeOffBoard_kt_woubw5;
  function _init_properties_TradeOffBoard_kt__qccrih() {
    if (properties_initialized_TradeOffBoard_kt_woubw5) {
    } else {
      properties_initialized_TradeOffBoard_kt_woubw5 = true;
      var tmp = KotlinLogging_getInstance();
      logger_9 = tmp.b4r(logger$lambda_9);
      TradeOffBoard = FC(TradeOffBoard$lambda);
      performanceRequirementsImpact = hashMapOf([to(PerformanceRequirements_Redundancy_getInstance(), hashMapOf([to(new Assignment(Domains_Client_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_RM_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_MM_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_DM_getInstance()), 0), to(new Assignment(Domains_OnPremise_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_OnPremise_getInstance(), Entities_RM_getInstance()), -1), to(new Assignment(Domains_OnPremise_getInstance(), Entities_MM_getInstance()), -1), to(new Assignment(Domains_OnPremise_getInstance(), Entities_DM_getInstance()), -1), to(new Assignment(Domains_ESP_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_RM_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_MM_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_DM_getInstance()), 0), to(new Assignment(Domains_CSP_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_CSP_getInstance(), Entities_RM_getInstance()), 1), to(new Assignment(Domains_CSP_getInstance(), Entities_MM_getInstance()), 1), to(new Assignment(Domains_CSP_getInstance(), Entities_DM_getInstance()), 1)])), to(PerformanceRequirements_Scalability_getInstance(), hashMapOf([to(new Assignment(Domains_Client_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_RM_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_MM_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_DM_getInstance()), 0), to(new Assignment(Domains_OnPremise_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_OnPremise_getInstance(), Entities_RM_getInstance()), -1), to(new Assignment(Domains_OnPremise_getInstance(), Entities_MM_getInstance()), -1), to(new Assignment(Domains_OnPremise_getInstance(), Entities_DM_getInstance()), -1), to(new Assignment(Domains_ESP_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_RM_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_MM_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_DM_getInstance()), 0), to(new Assignment(Domains_CSP_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_CSP_getInstance(), Entities_RM_getInstance()), 1), to(new Assignment(Domains_CSP_getInstance(), Entities_MM_getInstance()), 1), to(new Assignment(Domains_CSP_getInstance(), Entities_DM_getInstance()), 1)])), to(PerformanceRequirements_Reliability_getInstance(), hashMapOf([to(new Assignment(Domains_Client_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_RM_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_MM_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_DM_getInstance()), 0), to(new Assignment(Domains_OnPremise_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_OnPremise_getInstance(), Entities_RM_getInstance()), -1), to(new Assignment(Domains_OnPremise_getInstance(), Entities_MM_getInstance()), -1), to(new Assignment(Domains_OnPremise_getInstance(), Entities_DM_getInstance()), -1), to(new Assignment(Domains_ESP_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_RM_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_MM_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_DM_getInstance()), 0), to(new Assignment(Domains_CSP_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_CSP_getInstance(), Entities_RM_getInstance()), 1), to(new Assignment(Domains_CSP_getInstance(), Entities_MM_getInstance()), 1), to(new Assignment(Domains_CSP_getInstance(), Entities_DM_getInstance()), 1)])), to(PerformanceRequirements_Maintenance_getInstance(), hashMapOf([to(new Assignment(Domains_Client_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_RM_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_MM_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_DM_getInstance()), 0), to(new Assignment(Domains_OnPremise_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_OnPremise_getInstance(), Entities_RM_getInstance()), -1), to(new Assignment(Domains_OnPremise_getInstance(), Entities_MM_getInstance()), -1), to(new Assignment(Domains_OnPremise_getInstance(), Entities_DM_getInstance()), -1), to(new Assignment(Domains_ESP_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_RM_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_MM_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_DM_getInstance()), 0), to(new Assignment(Domains_CSP_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_CSP_getInstance(), Entities_RM_getInstance()), 1), to(new Assignment(Domains_CSP_getInstance(), Entities_MM_getInstance()), 1), to(new Assignment(Domains_CSP_getInstance(), Entities_DM_getInstance()), 1)])), to(PerformanceRequirements_DoS_Resilience_getInstance(), hashMapOf([to(new Assignment(Domains_Client_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_RM_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_MM_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_DM_getInstance()), 0), to(new Assignment(Domains_OnPremise_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_OnPremise_getInstance(), Entities_RM_getInstance()), -1), to(new Assignment(Domains_OnPremise_getInstance(), Entities_MM_getInstance()), -1), to(new Assignment(Domains_OnPremise_getInstance(), Entities_DM_getInstance()), -1), to(new Assignment(Domains_ESP_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_RM_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_MM_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_DM_getInstance()), 0), to(new Assignment(Domains_CSP_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_CSP_getInstance(), Entities_RM_getInstance()), 1), to(new Assignment(Domains_CSP_getInstance(), Entities_MM_getInstance()), 1), to(new Assignment(Domains_CSP_getInstance(), Entities_DM_getInstance()), 1)])), to(PerformanceRequirements_On_premise_Savings_getInstance(), hashMapOf([to(new Assignment(Domains_Client_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_RM_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_MM_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_DM_getInstance()), 0), to(new Assignment(Domains_OnPremise_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_OnPremise_getInstance(), Entities_RM_getInstance()), -1), to(new Assignment(Domains_OnPremise_getInstance(), Entities_MM_getInstance()), -1), to(new Assignment(Domains_OnPremise_getInstance(), Entities_DM_getInstance()), -1), to(new Assignment(Domains_ESP_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_RM_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_MM_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_DM_getInstance()), 0), to(new Assignment(Domains_CSP_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_CSP_getInstance(), Entities_RM_getInstance()), 1), to(new Assignment(Domains_CSP_getInstance(), Entities_MM_getInstance()), 1), to(new Assignment(Domains_CSP_getInstance(), Entities_DM_getInstance()), 1)])), to(PerformanceRequirements_CSP_Vendor_Lock_in_getInstance(), hashMapOf([to(new Assignment(Domains_Client_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_RM_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_MM_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_DM_getInstance()), 0), to(new Assignment(Domains_OnPremise_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_OnPremise_getInstance(), Entities_RM_getInstance()), -1), to(new Assignment(Domains_OnPremise_getInstance(), Entities_MM_getInstance()), -1), to(new Assignment(Domains_OnPremise_getInstance(), Entities_DM_getInstance()), -1), to(new Assignment(Domains_ESP_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_RM_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_MM_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_DM_getInstance()), 0), to(new Assignment(Domains_CSP_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_CSP_getInstance(), Entities_RM_getInstance()), 1), to(new Assignment(Domains_CSP_getInstance(), Entities_MM_getInstance()), 1), to(new Assignment(Domains_CSP_getInstance(), Entities_DM_getInstance()), 1)])), to(PerformanceRequirements_CSP_Savings_getInstance(), hashMapOf([to(new Assignment(Domains_Client_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_RM_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_MM_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_DM_getInstance()), 0), to(new Assignment(Domains_OnPremise_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_OnPremise_getInstance(), Entities_RM_getInstance()), -1), to(new Assignment(Domains_OnPremise_getInstance(), Entities_MM_getInstance()), -1), to(new Assignment(Domains_OnPremise_getInstance(), Entities_DM_getInstance()), -1), to(new Assignment(Domains_ESP_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_RM_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_MM_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_DM_getInstance()), 0), to(new Assignment(Domains_CSP_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_CSP_getInstance(), Entities_RM_getInstance()), 1), to(new Assignment(Domains_CSP_getInstance(), Entities_MM_getInstance()), 1), to(new Assignment(Domains_CSP_getInstance(), Entities_DM_getInstance()), 1)])), to(PerformanceRequirements_Latency_getInstance(), hashMapOf([to(new Assignment(Domains_Client_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_RM_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_MM_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_DM_getInstance()), 0), to(new Assignment(Domains_OnPremise_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_OnPremise_getInstance(), Entities_RM_getInstance()), -1), to(new Assignment(Domains_OnPremise_getInstance(), Entities_MM_getInstance()), -1), to(new Assignment(Domains_OnPremise_getInstance(), Entities_DM_getInstance()), -1), to(new Assignment(Domains_ESP_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_RM_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_MM_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_DM_getInstance()), 0), to(new Assignment(Domains_CSP_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_CSP_getInstance(), Entities_RM_getInstance()), 1), to(new Assignment(Domains_CSP_getInstance(), Entities_MM_getInstance()), 1), to(new Assignment(Domains_CSP_getInstance(), Entities_DM_getInstance()), 1)])), to(PerformanceRequirements_Throughput_getInstance(), hashMapOf([to(new Assignment(Domains_Client_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_RM_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_MM_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_DM_getInstance()), 0), to(new Assignment(Domains_OnPremise_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_OnPremise_getInstance(), Entities_RM_getInstance()), -1), to(new Assignment(Domains_OnPremise_getInstance(), Entities_MM_getInstance()), -1), to(new Assignment(Domains_OnPremise_getInstance(), Entities_DM_getInstance()), -1), to(new Assignment(Domains_ESP_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_RM_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_MM_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_DM_getInstance()), 0), to(new Assignment(Domains_CSP_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_CSP_getInstance(), Entities_RM_getInstance()), 1), to(new Assignment(Domains_CSP_getInstance(), Entities_MM_getInstance()), 1), to(new Assignment(Domains_CSP_getInstance(), Entities_DM_getInstance()), 1)])), to(PerformanceRequirements_Computational_Power_getInstance(), hashMapOf([to(new Assignment(Domains_Client_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_RM_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_MM_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_DM_getInstance()), 0), to(new Assignment(Domains_OnPremise_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_OnPremise_getInstance(), Entities_RM_getInstance()), -1), to(new Assignment(Domains_OnPremise_getInstance(), Entities_MM_getInstance()), -1), to(new Assignment(Domains_OnPremise_getInstance(), Entities_DM_getInstance()), -1), to(new Assignment(Domains_ESP_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_RM_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_MM_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_DM_getInstance()), 0), to(new Assignment(Domains_CSP_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_CSP_getInstance(), Entities_RM_getInstance()), 1), to(new Assignment(Domains_CSP_getInstance(), Entities_MM_getInstance()), 1), to(new Assignment(Domains_CSP_getInstance(), Entities_DM_getInstance()), 1)])), to(PerformanceRequirements_Storage_capacity_getInstance(), hashMapOf([to(new Assignment(Domains_Client_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_RM_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_MM_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_DM_getInstance()), 0), to(new Assignment(Domains_OnPremise_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_OnPremise_getInstance(), Entities_RM_getInstance()), -1), to(new Assignment(Domains_OnPremise_getInstance(), Entities_MM_getInstance()), -1), to(new Assignment(Domains_OnPremise_getInstance(), Entities_DM_getInstance()), -1), to(new Assignment(Domains_ESP_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_RM_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_MM_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_DM_getInstance()), 0), to(new Assignment(Domains_CSP_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_CSP_getInstance(), Entities_RM_getInstance()), 1), to(new Assignment(Domains_CSP_getInstance(), Entities_MM_getInstance()), 1), to(new Assignment(Domains_CSP_getInstance(), Entities_DM_getInstance()), 1)])), to(PerformanceRequirements_ESP_Vendor_Lock_in_getInstance(), hashMapOf([to(new Assignment(Domains_Client_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_RM_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_MM_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_DM_getInstance()), 0), to(new Assignment(Domains_OnPremise_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_OnPremise_getInstance(), Entities_RM_getInstance()), -1), to(new Assignment(Domains_OnPremise_getInstance(), Entities_MM_getInstance()), -1), to(new Assignment(Domains_OnPremise_getInstance(), Entities_DM_getInstance()), -1), to(new Assignment(Domains_ESP_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_RM_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_MM_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_DM_getInstance()), 0), to(new Assignment(Domains_CSP_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_CSP_getInstance(), Entities_RM_getInstance()), 1), to(new Assignment(Domains_CSP_getInstance(), Entities_MM_getInstance()), 1), to(new Assignment(Domains_CSP_getInstance(), Entities_DM_getInstance()), 1)])), to(PerformanceRequirements_ESP_Savings_getInstance(), hashMapOf([to(new Assignment(Domains_Client_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_RM_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_MM_getInstance()), 0), to(new Assignment(Domains_Client_getInstance(), Entities_DM_getInstance()), 0), to(new Assignment(Domains_OnPremise_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_OnPremise_getInstance(), Entities_RM_getInstance()), -1), to(new Assignment(Domains_OnPremise_getInstance(), Entities_MM_getInstance()), -1), to(new Assignment(Domains_OnPremise_getInstance(), Entities_DM_getInstance()), -1), to(new Assignment(Domains_ESP_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_RM_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_MM_getInstance()), 0), to(new Assignment(Domains_ESP_getInstance(), Entities_DM_getInstance()), 0), to(new Assignment(Domains_CSP_getInstance(), Entities_CryptoAC_getInstance()), 0), to(new Assignment(Domains_CSP_getInstance(), Entities_RM_getInstance()), 1), to(new Assignment(Domains_CSP_getInstance(), Entities_MM_getInstance()), 1), to(new Assignment(Domains_CSP_getInstance(), Entities_DM_getInstance()), 1)]))]);
      securityRequirementsImpact = hashMapOf([to(SecurityRequirements_Confidentiality_getInstance(), hashMapOf([to(EntitiesWithChannels_CryptoAC_getInstance(), Impact_High_getInstance()), to(EntitiesWithChannels_RM_getInstance(), Impact_None_getInstance()), to(EntitiesWithChannels_MM_getInstance(), Impact_None_getInstance()), to(EntitiesWithChannels_DM_getInstance(), Impact_None_getInstance()), to(EntitiesWithChannels_CryptoAC_RM_getInstance(), Impact_None_getInstance()), to(EntitiesWithChannels_CryptoAC_DM_getInstance(), Impact_None_getInstance()), to(EntitiesWithChannels_CryptoAC_MM_getInstance(), Impact_None_getInstance()), to(EntitiesWithChannels_RM_MM_getInstance(), Impact_None_getInstance()), to(EntitiesWithChannels_RM_DM_getInstance(), Impact_None_getInstance()), to(EntitiesWithChannels_MM_DM_getInstance(), Impact_None_getInstance())])), to(SecurityRequirements_Integrity_getInstance(), hashMapOf([to(EntitiesWithChannels_CryptoAC_getInstance(), Impact_High_getInstance()), to(EntitiesWithChannels_RM_getInstance(), Impact_None_getInstance()), to(EntitiesWithChannels_MM_getInstance(), Impact_None_getInstance()), to(EntitiesWithChannels_DM_getInstance(), Impact_None_getInstance()), to(EntitiesWithChannels_CryptoAC_RM_getInstance(), Impact_None_getInstance()), to(EntitiesWithChannels_CryptoAC_DM_getInstance(), Impact_None_getInstance()), to(EntitiesWithChannels_CryptoAC_MM_getInstance(), Impact_None_getInstance()), to(EntitiesWithChannels_RM_MM_getInstance(), Impact_None_getInstance()), to(EntitiesWithChannels_RM_DM_getInstance(), Impact_None_getInstance()), to(EntitiesWithChannels_MM_DM_getInstance(), Impact_None_getInstance())])), to(SecurityRequirements_Availability_getInstance(), hashMapOf([to(EntitiesWithChannels_CryptoAC_getInstance(), Impact_High_getInstance()), to(EntitiesWithChannels_RM_getInstance(), Impact_None_getInstance()), to(EntitiesWithChannels_MM_getInstance(), Impact_None_getInstance()), to(EntitiesWithChannels_DM_getInstance(), Impact_None_getInstance()), to(EntitiesWithChannels_CryptoAC_RM_getInstance(), Impact_None_getInstance()), to(EntitiesWithChannels_CryptoAC_DM_getInstance(), Impact_None_getInstance()), to(EntitiesWithChannels_CryptoAC_MM_getInstance(), Impact_None_getInstance()), to(EntitiesWithChannels_RM_MM_getInstance(), Impact_None_getInstance()), to(EntitiesWithChannels_RM_DM_getInstance(), Impact_None_getInstance()), to(EntitiesWithChannels_MM_DM_getInstance(), Impact_None_getInstance())]))]);
    }
  }
  function get_TrustAssumptionsLikelihood() {
    _init_properties_TrustAssumptionsLikelihood_kt__jhdnk0();
    return TrustAssumptionsLikelihood;
  }
  var TrustAssumptionsLikelihood;
  function TrustAssumptionsLikelihoodState(currentLikelihoodState) {
    this.r5o_1 = currentLikelihoodState;
  }
  protoOf(TrustAssumptionsLikelihoodState).s5o = function (currentLikelihoodState) {
    return new TrustAssumptionsLikelihoodState(currentLikelihoodState);
  };
  protoOf(TrustAssumptionsLikelihoodState).t5o = function (currentLikelihoodState, $super) {
    currentLikelihoodState = currentLikelihoodState === VOID ? this.r5o_1 : currentLikelihoodState;
    return $super === VOID ? this.s5o(currentLikelihoodState) : $super.s5o.call(this, currentLikelihoodState);
  };
  protoOf(TrustAssumptionsLikelihoodState).toString = function () {
    return 'TrustAssumptionsLikelihoodState(currentLikelihoodState=' + this.r5o_1 + ')';
  };
  protoOf(TrustAssumptionsLikelihoodState).hashCode = function () {
    return this.r5o_1.hashCode();
  };
  protoOf(TrustAssumptionsLikelihoodState).equals = function (other) {
    if (this === other)
      return true;
    if (!(other instanceof TrustAssumptionsLikelihoodState))
      return false;
    var tmp0_other_with_cast = other instanceof TrustAssumptionsLikelihoodState ? other : THROW_CCE();
    if (!this.r5o_1.equals(tmp0_other_with_cast.r5o_1))
      return false;
    return true;
  };
  function getStateFromProps_8(props, oldState) {
    oldState = oldState === VOID ? new TrustAssumptionsLikelihoodState(props.defaultValueProp) : oldState;
    _init_properties_TrustAssumptionsLikelihood_kt__jhdnk0();
    oldState.r5o_1 = props.defaultValueProp;
    return oldState.t5o();
  }
  function TrustAssumptionsLikelihood$lambda($this$FC, props) {
    _init_properties_TrustAssumptionsLikelihood_kt__jhdnk0();
    var state$delegate = useState(getStateFromProps_8(props));
    useEffect([props], TrustAssumptionsLikelihood$lambda$lambda(props, state$delegate));
    var tmp$ret$3;
    // Inline function 'react.dom.html.ReactHTML.td' call
    var tmp0__get_td__p4dsv3 = ReactHTML_getInstance();
    var tmp$ret$2;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = 'td';
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    var tmp = tmp$ret$3;
    $this$FC.x4r(tmp, TrustAssumptionsLikelihood$lambda$lambda_0(props));
    var tmp$ret$7;
    // Inline function 'react.dom.html.ReactHTML.td' call
    var tmp1__get_td__sddrnk = ReactHTML_getInstance();
    var tmp$ret$6;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$5;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$4;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$4 = 'td';
    tmp$ret$5 = tmp$ret$4;
    tmp$ret$6 = tmp$ret$5;
    tmp$ret$7 = tmp$ret$6;
    var tmp_0 = tmp$ret$7;
    $this$FC.x4r(tmp_0, TrustAssumptionsLikelihood$lambda$lambda_1(state$delegate));
    var tmp$ret$11;
    // Inline function 'react.dom.html.ReactHTML.td' call
    var tmp2__get_td__vmdqg1 = ReactHTML_getInstance();
    var tmp$ret$10;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$9;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$8;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$8 = 'td';
    tmp$ret$9 = tmp$ret$8;
    tmp$ret$10 = tmp$ret$9;
    tmp$ret$11 = tmp$ret$10;
    var tmp_1 = tmp$ret$11;
    $this$FC.x4r(tmp_1, TrustAssumptionsLikelihood$lambda$lambda_2(props, state$delegate));
    return Unit_getInstance();
  }
  function invoke$lambda_29($state$delegate) {
    _init_properties_TrustAssumptionsLikelihood_kt__jhdnk0();
    var tmp$ret$2;
    // Inline function 'react.StateInstance.getValue' call
    var tmp1_getValue = getLocalDelegateReference('state', KMutableProperty0, true, function () {
      return THROW_ISE();
    });
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = $state$delegate;
    var tmp0_unsafeCast = tmp$ret$0[0];
    tmp$ret$1 = tmp0_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    return tmp$ret$2;
  }
  function invoke$lambda_30($state$delegate, value) {
    _init_properties_TrustAssumptionsLikelihood_kt__jhdnk0();
    var tmp1_setValue = getLocalDelegateReference('state', KMutableProperty0, true, function () {
      return THROW_ISE();
    });
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = $state$delegate;
    var tmp0_unsafeCast = tmp$ret$0[1];
    tmp$ret$1 = tmp0_unsafeCast;
    return tmp$ret$1(value);
  }
  function TrustAssumptionsLikelihood$lambda$lambda($props, $state$delegate) {
    return function ($this$useEffect) {
      invoke$lambda_30($state$delegate, getStateFromProps_8($props, invoke$lambda_29($state$delegate)));
      return Unit_getInstance();
    };
  }
  function TrustAssumptionsLikelihood$lambda$lambda_0($props) {
    return function ($this$invoke) {
      $this$invoke.w4r($props.attackerProp.toString());
      return Unit_getInstance();
    };
  }
  function TrustAssumptionsLikelihood$lambda$lambda_1($state$delegate) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$9;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$8;
      // Inline function 'js.core.jso' call
      var tmp$ret$7;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TrustAssumptionsLikelihood.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'csstype.Color' call
      var tmp0_subject = invoke$lambda_29($state$delegate).r5o_1;
      var tmp0 = tmp0_subject.n4_1;
      var tmp;
      switch (tmp0) {
        case 0:
          tmp = '#c0392b';
          break;
        case 1:
          tmp = '#f39c12';
          break;
        case 2:
          tmp = '#27ae60';
          break;
        case 3:
          tmp = '#bdc3c7';
          break;
        default:
          noWhenBranchMatchedException();
          break;
      }
      var tmp0_Color = tmp;
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_Color;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.color = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '100px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      tmp0_apply.width = tmp$ret$6;
      tmp$ret$7 = tmp0_apply;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = css(tmp$ret$8);
      tmp1_css.className = tmp$ret$9;
      $this$invoke.w4r(invoke$lambda_29($state$delegate).r5o_1.toString());
      return Unit_getInstance();
    };
  }
  function TrustAssumptionsLikelihood$lambda$lambda$lambda$lambda$lambda($props, $state$delegate) {
    return function (event) {
      var tmp = event.target;
      var newLikelihood = valueOf_10((tmp instanceof HTMLInputElement ? tmp : THROW_CCE()).value);
      invoke$lambda_30($state$delegate, invoke$lambda_29($state$delegate).s5o(newLikelihood));
      $props.handleChangeLikelihoodProp($props.domainProp, $props.attackerProp, newLikelihood);
      return true;
    };
  }
  function TrustAssumptionsLikelihood$lambda$lambda$lambda$lambda($props, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.rowProp = true;
      $this$invoke.defaultValueProp = $props.defaultValueProp.toString();
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp1_map = values_15();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$_0(tmp1_map.length);
      var indexedObject = tmp1_map;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var item = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TrustAssumptionsLikelihood.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
        tmp$ret$0 = new CryptoACRadioOption('', item.toString(), 'primary');
        tmp0_mapTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo;
      tmp$ret$2 = tmp$ret$1;
      $this$invoke.optionsProp = tmp$ret$2;
      $this$invoke.onChangeProp = TrustAssumptionsLikelihood$lambda$lambda$lambda$lambda$lambda($props, $state$delegate);
      return Unit_getInstance();
    };
  }
  function TrustAssumptionsLikelihood$lambda$lambda$lambda($props, $state$delegate) {
    return function ($this$invoke) {
      $this$invoke.key = $props.domainProp.toString();
      var tmp1_css = $this$invoke;
      var tmp$ret$3;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$2;
      // Inline function 'js.core.jso' call
      var tmp$ret$1;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TrustAssumptionsLikelihood.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      tmp0_apply.display = (/*union*/{block: 'block', inline: 'inline', runIn: 'run-in', flex: 'flex', flow: 'flow', flowRoot: 'flow-root', grid: 'grid', ruby: 'ruby', table: 'table', rubyBase: 'ruby-base', rubyBaseContainer: 'ruby-base-container', rubyText: 'ruby-text', rubyTextContainer: 'ruby-text-container', tableCaption: 'table-caption', tableCell: 'table-cell', tableColumn: 'table-column', tableColumnGroup: 'table-column-group', tableFooterGroup: 'table-footer-group', tableHeaderGroup: 'table-header-group', tableRow: 'table-row', tableRowGroup: 'table-row-group', inlineBlock: 'inline-block', inlineFlex: 'inline-flex', inlineGrid: 'inline-grid', inlineListItem: 'inline-list-item', inlineTable: 'inline-table', contents: 'contents', listItem: 'list-item'}/*union*/).block;
      tmp$ret$1 = tmp0_apply;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = css(tmp$ret$2);
      tmp1_css.className = tmp$ret$3;
      var tmp = get_CryptoACRadioGroup();
      $this$invoke.x4r(tmp, TrustAssumptionsLikelihood$lambda$lambda$lambda$lambda($props, $state$delegate));
      return Unit_getInstance();
    };
  }
  function TrustAssumptionsLikelihood$lambda$lambda_2($props, $state$delegate) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$6;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$5;
      // Inline function 'js.core.jso' call
      var tmp$ret$4;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.content.tradeoffboard.TrustAssumptionsLikelihood.<anonymous>.<anonymous>.<anonymous>' call
      if ($props.lastProp) {
        var tmp$ret$3;
        // Inline function 'csstype.px' call
        var tmp$ret$2;
        // Inline function 'kotlin.js.unsafeCast' call
        var tmp0_unsafeCast = '15px';
        var tmp$ret$1;
        // Inline function 'kotlin.js.asDynamic' call
        tmp$ret$1 = tmp0_unsafeCast;
        tmp$ret$2 = tmp$ret$1;
        tmp$ret$3 = tmp$ret$2;
        tmp0_apply.borderBottomRightRadius = tmp$ret$3;
      }
      tmp$ret$4 = tmp0_apply;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = css(tmp$ret$5);
      tmp1_css.className = tmp$ret$6;
      var tmp$ret$10;
      // Inline function 'react.dom.html.ReactHTML.div' call
      var tmp2__get_div__e5gx5o = ReactHTML_getInstance();
      var tmp$ret$9;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$8;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = 'div';
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      tmp$ret$10 = tmp$ret$9;
      var tmp = tmp$ret$10;
      $this$invoke.x4r(tmp, TrustAssumptionsLikelihood$lambda$lambda$lambda($props, $state$delegate));
      return Unit_getInstance();
    };
  }
  var properties_initialized_TrustAssumptionsLikelihood_kt_94zcke;
  function _init_properties_TrustAssumptionsLikelihood_kt__jhdnk0() {
    if (properties_initialized_TrustAssumptionsLikelihood_kt_94zcke) {
    } else {
      properties_initialized_TrustAssumptionsLikelihood_kt_94zcke = true;
      TrustAssumptionsLikelihood = FC(TrustAssumptionsLikelihood$lambda);
    }
  }
  function get_logger_8() {
    _init_properties_Actions_kt__coato5();
    return logger_10;
  }
  var logger_10;
  function get_Actions() {
    _init_properties_Actions_kt__coato5();
    return Actions;
  }
  var Actions;
  function submitCryptoACForm(props, method, endpoint, values, callback) {
    _init_properties_Actions_kt__coato5();
    var tmp = get_logger_8();
    tmp.h4r(submitCryptoACForm$lambda(method, endpoint));
    // Inline function 'kotlin.collections.forEach' call
    var tmp$ret$0;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$0 = values.o().f();
    var tmp0_iterator = tmp$ret$0;
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      // Inline function 'eu.fbk.st.cryptoac.view.sidebar.submitCryptoACForm.<anonymous>' call
      var tmp_0 = get_logger_8();
      tmp_0.h4r(submitCryptoACForm$lambda_0(element));
    }
    props.handleChangeBackdropIsOpenProp(true);
    var tmp_1 = MainScope();
    launch(tmp_1, VOID, VOID, submitCryptoACForm$slambda_0(method, callback, props, values, endpoint, null));
  }
  function submitCryptoACFormWithBinaryData(props, method, endpoint, values, files, callback) {
    _init_properties_Actions_kt__coato5();
    var tmp = get_logger_8();
    tmp.h4r(submitCryptoACFormWithBinaryData$lambda(method, endpoint, files, values));
    // Inline function 'kotlin.collections.forEach' call
    var tmp$ret$0;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$0 = values.o().f();
    var tmp0_iterator = tmp$ret$0;
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      // Inline function 'eu.fbk.st.cryptoac.view.sidebar.submitCryptoACFormWithBinaryData.<anonymous>' call
      var tmp_0 = get_logger_8();
      tmp_0.h4r(submitCryptoACFormWithBinaryData$lambda_0(element));
    }
    props.handleChangeBackdropIsOpenProp(true);
    var tmp_1 = MainScope();
    launch(tmp_1, VOID, VOID, submitCryptoACFormWithBinaryData$slambda_0(method, values, files, props, callback, endpoint, null));
  }
  function submitCryptoACFormInNewTab(props, method, endpoint, values, query) {
    _init_properties_Actions_kt__coato5();
    var tmp = get_logger_8();
    tmp.h4r(submitCryptoACFormInNewTab$lambda(method, endpoint, query));
    // Inline function 'kotlin.collections.forEach' call
    var tmp$ret$0;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$0 = values.o().f();
    var tmp0_iterator = tmp$ret$0;
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      // Inline function 'eu.fbk.st.cryptoac.view.sidebar.submitCryptoACFormInNewTab.<anonymous>' call
      var tmp_0 = get_logger_8();
      tmp_0.h4r(submitCryptoACFormInNewTab$lambda_0(element));
    }
    props.handleChangeBackdropIsOpenProp(true);
    var tmp_1 = MainScope();
    launch(tmp_1, VOID, VOID, submitCryptoACFormInNewTab$slambda_0(method, endpoint, query, values, props, null));
  }
  function submitCryptoACForm_0(props, method, endpoint, values, query, callback) {
    _init_properties_Actions_kt__coato5();
    var tmp = get_logger_8();
    tmp.h4r(submitCryptoACForm$lambda_1(method, endpoint, query));
    // Inline function 'kotlin.collections.forEach' call
    var tmp$ret$0;
    // Inline function 'kotlin.collections.iterator' call
    tmp$ret$0 = values.o().f();
    var tmp0_iterator = tmp$ret$0;
    while (tmp0_iterator.g()) {
      var element = tmp0_iterator.h();
      // Inline function 'eu.fbk.st.cryptoac.view.sidebar.submitCryptoACForm.<anonymous>' call
      var tmp_0 = get_logger_8();
      tmp_0.h4r(submitCryptoACForm$lambda_2(element));
    }
    props.handleChangeBackdropIsOpenProp(true);
    var tmp_1 = MainScope();
    launch(tmp_1, VOID, VOID, submitCryptoACForm$slambda_2(method, endpoint, query, values, callback, props, null));
  }
  function callbackShowOutcomeCode(props, response) {
    _init_properties_Actions_kt__coato5();
    props.handleChangeBackdropIsOpenProp(false);
    var tmp = MainScope();
    launch(tmp, VOID, VOID, callbackShowOutcomeCode$slambda_0(response, props, null));
  }
  function callbackDownloadUserProfile(props, response, values) {
    _init_properties_Actions_kt__coato5();
    props.handleChangeBackdropIsOpenProp(false);
    var tmp = MainScope();
    launch(tmp, VOID, VOID, callbackDownloadUserProfile$slambda_0(response, values, props, null));
  }
  function callbackSubscribeToTopic(props, response, values) {
    _init_properties_Actions_kt__coato5();
    props.handleChangeBackdropIsOpenProp(false);
    var tmp = MainScope();
    launch(tmp, VOID, VOID, callbackSubscribeToTopic$slambda_0(response, props, values, null));
  }
  function logger$lambda_10() {
    _init_properties_Actions_kt__coato5();
    return Unit_getInstance();
  }
  function Actions$lambda($this$FC, props) {
    _init_properties_Actions_kt__coato5();
    var tmp0_icon = FaUserPlus;
    API_getInstance();
    API_getInstance();
    var tmp1_endpoint = '/v1/CryptoAC/' + 'users/{Core}/';
    var tmp2_method = Companion_getInstance().c21_1;
    var tmp3_coreType = CoreType_RBAC_AT_REST_getInstance();
    SERVER_getInstance();
    SERVER_getInstance();
    var tmp4_cryptoACFormFields = listOf_0(listOf_0(new CryptoACFormField('Username', 'Username', InputType_text_getInstance())));
    var tmp = new CryptoACFormData('add_user', 'Add User', tmp0_icon, tmp1_endpoint, tmp2_method, tmp3_coreType, tmp4_cryptoACFormFields, Actions$lambda$lambda(props));
    var tmp5_icon = FaUserSecret;
    API_getInstance();
    API_getInstance();
    var tmp6_endpoint = '/v1/CryptoAC/' + 'roles/{Core}/';
    var tmp7_method = Companion_getInstance().c21_1;
    var tmp8_coreType = CoreType_RBAC_AT_REST_getInstance();
    SERVER_getInstance();
    SERVER_getInstance();
    var tmp9_cryptoACFormFields = listOf_0(listOf_0(new CryptoACFormField('Role_Name', replace('Role_Name', '_', ' '), InputType_text_getInstance())));
    var tmp_0 = new CryptoACFormData('add_role', 'Add Role', tmp5_icon, tmp6_endpoint, tmp7_method, tmp8_coreType, tmp9_cryptoACFormFields, Actions$lambda$lambda_0(props));
    var tmp10_icon = FaUserFriends;
    API_getInstance();
    API_getInstance();
    var tmp11_endpoint = '/v1/CryptoAC/' + 'assignments/{Core}/';
    var tmp12_method = Companion_getInstance().c21_1;
    var tmp13_coreType = CoreType_RBAC_AT_REST_getInstance();
    SERVER_getInstance();
    SERVER_getInstance();
    var tmp_1 = listOf_0(new CryptoACFormField('Username', 'Username', InputType_text_getInstance()));
    SERVER_getInstance();
    SERVER_getInstance();
    var tmp14_cryptoACFormFields = listOf([tmp_1, listOf_0(new CryptoACFormField('Role_Name', replace('Role_Name', '_', ' '), InputType_text_getInstance()))]);
    var tmp_2 = new CryptoACFormData('assign_user_to_role', 'Assign User to Role', tmp10_icon, tmp11_endpoint, tmp12_method, tmp13_coreType, tmp14_cryptoACFormFields, Actions$lambda$lambda_1(props));
    var tmp15_icon = FaUserShield;
    API_getInstance();
    API_getInstance();
    var tmp16_endpoint = '/v1/CryptoAC/' + 'permissions/{Core}/';
    var tmp17_method = Companion_getInstance().c21_1;
    var tmp18_coreType = CoreType_RBAC_AT_REST_getInstance();
    SERVER_getInstance();
    SERVER_getInstance();
    var tmp_3 = listOf_0(new CryptoACFormField('Role_Name', replace('Role_Name', '_', ' '), InputType_text_getInstance()));
    SERVER_getInstance();
    SERVER_getInstance();
    var tmp_4 = listOf_0(new CryptoACFormField('Resource_Name', replace('Resource_Name', '_', ' '), InputType_text_getInstance()));
    SERVER_getInstance();
    SERVER_getInstance();
    var tmp19_cryptoACFormFields = listOf([tmp_3, tmp_4, listOf_0(new CryptoACFormField('Permission', 'Permission', InputType_radio_getInstance(), listOf([PermissionType_READ_getInstance().toString(), PermissionType_READWRITE_getInstance().toString()]), PermissionType_READ_getInstance().toString()))]);
    var tmp_5 = new CryptoACFormData('assign_permission_to_role', 'Assign Permission to Role', tmp15_icon, tmp16_endpoint, tmp17_method, tmp18_coreType, tmp19_cryptoACFormFields, Actions$lambda$lambda_2(props), true);
    var tmp20_icon = FaUserMinus;
    API_getInstance();
    API_getInstance();
    var tmp21_endpoint = '/v1/CryptoAC/' + 'users/{Core}/';
    var tmp22_method = Companion_getInstance().f21_1;
    var tmp23_coreType = CoreType_RBAC_AT_REST_getInstance();
    SERVER_getInstance();
    SERVER_getInstance();
    var tmp24_cryptoACFormFields = listOf_0(listOf_0(new CryptoACFormField('Username', 'Username', InputType_text_getInstance())));
    var tmp_6 = new CryptoACFormData('delete_user', 'Delete User', tmp20_icon, tmp21_endpoint, tmp22_method, tmp23_coreType, tmp24_cryptoACFormFields, Actions$lambda$lambda_3(props));
    var tmp25_icon = FaUserNinja;
    API_getInstance();
    API_getInstance();
    var tmp26_endpoint = '/v1/CryptoAC/' + 'roles/{Core}/';
    var tmp27_method = Companion_getInstance().f21_1;
    var tmp28_coreType = CoreType_RBAC_AT_REST_getInstance();
    SERVER_getInstance();
    SERVER_getInstance();
    var tmp29_cryptoACFormFields = listOf_0(listOf_0(new CryptoACFormField('Role_Name', replace('Role_Name', '_', ' '), InputType_text_getInstance())));
    var tmp_7 = new CryptoACFormData('delete_role', 'Delete Role', tmp25_icon, tmp26_endpoint, tmp27_method, tmp28_coreType, tmp29_cryptoACFormFields, Actions$lambda$lambda_4(props));
    var tmp30_icon = FaFileExcel;
    API_getInstance();
    API_getInstance();
    var tmp31_endpoint = '/v1/CryptoAC/' + 'resources/{Core}/';
    var tmp32_method = Companion_getInstance().f21_1;
    var tmp33_coreType = CoreType_RBAC_AT_REST_getInstance();
    SERVER_getInstance();
    SERVER_getInstance();
    var tmp34_cryptoACFormFields = listOf_0(listOf_0(new CryptoACFormField('Resource_Name', replace('Resource_Name', '_', ' '), InputType_text_getInstance())));
    var tmp_8 = new CryptoACFormData('delete_resource', 'Delete File', tmp30_icon, tmp31_endpoint, tmp32_method, tmp33_coreType, tmp34_cryptoACFormFields, Actions$lambda$lambda_5(props));
    var tmp35_icon = FaUserTimes;
    API_getInstance();
    API_getInstance();
    var tmp36_endpoint = '/v1/CryptoAC/' + 'assignments/{Core}/';
    var tmp37_method = Companion_getInstance().f21_1;
    var tmp38_coreType = CoreType_RBAC_AT_REST_getInstance();
    SERVER_getInstance();
    SERVER_getInstance();
    var tmp_9 = listOf_0(new CryptoACFormField('Username', 'Username', InputType_text_getInstance()));
    SERVER_getInstance();
    SERVER_getInstance();
    var tmp39_cryptoACFormFields = listOf([tmp_9, listOf_0(new CryptoACFormField('Role_Name', replace('Role_Name', '_', ' '), InputType_text_getInstance()))]);
    var tmp_10 = new CryptoACFormData('revoke_user_from_role', 'Revoke User from Role', tmp35_icon, tmp36_endpoint, tmp37_method, tmp38_coreType, tmp39_cryptoACFormFields, Actions$lambda$lambda_6(props));
    var tmp40_icon = FaUserLock;
    API_getInstance();
    API_getInstance();
    var tmp41_endpoint = '/v1/CryptoAC/' + 'permissions/{Core}/';
    var tmp42_method = Companion_getInstance().f21_1;
    var tmp43_coreType = CoreType_RBAC_AT_REST_getInstance();
    SERVER_getInstance();
    SERVER_getInstance();
    var tmp_11 = listOf_0(new CryptoACFormField('Role_Name', replace('Role_Name', '_', ' '), InputType_text_getInstance()));
    SERVER_getInstance();
    SERVER_getInstance();
    var tmp_12 = listOf_0(new CryptoACFormField('Resource_Name', replace('Resource_Name', '_', ' '), InputType_text_getInstance()));
    SERVER_getInstance();
    SERVER_getInstance();
    var tmp44_cryptoACFormFields = listOf([tmp_11, tmp_12, listOf_0(new CryptoACFormField('Permission', 'Permission', InputType_radio_getInstance(), listOf([PermissionType_READWRITE_getInstance().toString(), PermissionType_WRITE_getInstance().toString()]), PermissionType_READWRITE_getInstance().toString()))]);
    var adminCryptoACFormsRBACCryptoAC = listOf([tmp, tmp_0, tmp_2, tmp_5, tmp_6, tmp_7, tmp_8, tmp_10, new CryptoACFormData('revoke_permission_from_role', 'Revoke Permission from Role', tmp40_icon, tmp41_endpoint, tmp42_method, tmp43_coreType, tmp44_cryptoACFormFields, Actions$lambda$lambda_7(props), true)]);
    var tmp45_icon = FaFileMedical;
    API_getInstance();
    API_getInstance();
    var tmp46_endpoint = '/v1/CryptoAC/' + 'resources/{Core}/';
    var tmp47_method = Companion_getInstance().c21_1;
    var tmp48_coreType = CoreType_RBAC_AT_REST_getInstance();
    SERVER_getInstance();
    var tmp_13 = listOf_0(new CryptoACFormField('Resource_Name', 'Upload here your file', InputType_file_getInstance()));
    SERVER_getInstance();
    SERVER_getInstance();
    var tmp49_cryptoACFormFields = listOf([tmp_13, listOf_0(new CryptoACFormField('Access_Control_Enforcement', 'Access_Control_Enforcement', InputType_radio_getInstance(), listOf([EnforcementType_COMBINED_getInstance().toString(), EnforcementType_TRADITIONAL_getInstance().toString()]), EnforcementType_COMBINED_getInstance().toString()))]);
    var tmp_14 = new CryptoACFormData('add_resource', 'Add File', tmp45_icon, tmp46_endpoint, tmp47_method, tmp48_coreType, tmp49_cryptoACFormFields, Actions$lambda$lambda_8(props));
    var tmp50_icon = FaFileSignature;
    API_getInstance();
    API_getInstance();
    var tmp51_endpoint = '/v1/CryptoAC/' + 'resources/{Core}/';
    var tmp52_method = Companion_getInstance().e21_1;
    var tmp53_coreType = CoreType_RBAC_AT_REST_getInstance();
    SERVER_getInstance();
    var tmp54_cryptoACFormFields = listOf_0(listOf_0(new CryptoACFormField('Resource_Name', 'Upload here your file', InputType_file_getInstance())));
    var tmp_15 = new CryptoACFormData('write_resource', 'Write File', tmp50_icon, tmp51_endpoint, tmp52_method, tmp53_coreType, tmp54_cryptoACFormFields, Actions$lambda$lambda_9(props));
    var tmp55_icon = FaFileDownload;
    API_getInstance();
    API_getInstance();
    var tmp56_endpoint = '/v1/CryptoAC/' + 'resources/{Core}/';
    var tmp57_method = Companion_getInstance().b21_1;
    var tmp58_coreType = CoreType_RBAC_AT_REST_getInstance();
    SERVER_getInstance();
    SERVER_getInstance();
    var tmp59_cryptoACFormFields = listOf_0(listOf_0(new CryptoACFormField('Resource_Name', replace('Resource_Name', '_', ' '), InputType_text_getInstance())));
    var userCryptoACFormsRBACCloud = listOf([tmp_14, tmp_15, new CryptoACFormData('read_resource', 'Read File', tmp55_icon, tmp56_endpoint, tmp57_method, tmp58_coreType, tmp59_cryptoACFormFields, Actions$lambda$lambda_10(props))]);
    var tmp60_icon = FaUserPlus;
    API_getInstance();
    API_getInstance();
    var tmp61_endpoint = '/v1/CryptoAC/' + 'users/{Core}/';
    var tmp62_method = Companion_getInstance().c21_1;
    var tmp63_coreType = CoreType_RBAC_MQTT_getInstance();
    SERVER_getInstance();
    SERVER_getInstance();
    var tmp64_cryptoACFormFields = listOf_0(listOf_0(new CryptoACFormField('Username', 'Username', InputType_text_getInstance())));
    var tmp_16 = new CryptoACFormData('add_user', 'Add User', tmp60_icon, tmp61_endpoint, tmp62_method, tmp63_coreType, tmp64_cryptoACFormFields, Actions$lambda$lambda_11(props));
    var tmp65_icon = FaUserSecret;
    API_getInstance();
    API_getInstance();
    var tmp66_endpoint = '/v1/CryptoAC/' + 'roles/{Core}/';
    var tmp67_method = Companion_getInstance().c21_1;
    var tmp68_coreType = CoreType_RBAC_MQTT_getInstance();
    SERVER_getInstance();
    SERVER_getInstance();
    var tmp69_cryptoACFormFields = listOf_0(listOf_0(new CryptoACFormField('Role_Name', replace('Role_Name', '_', ' '), InputType_text_getInstance())));
    var tmp_17 = new CryptoACFormData('add_role', 'Add Role', tmp65_icon, tmp66_endpoint, tmp67_method, tmp68_coreType, tmp69_cryptoACFormFields, Actions$lambda$lambda_12(props));
    var tmp70_icon = FaFileMedical;
    API_getInstance();
    API_getInstance();
    var tmp71_endpoint = '/v1/CryptoAC/' + 'resources/{Core}/';
    var tmp72_method = Companion_getInstance().c21_1;
    var tmp73_coreType = CoreType_RBAC_MQTT_getInstance();
    SERVER_getInstance();
    SERVER_getInstance();
    var tmp_18 = listOf_0(new CryptoACFormField('Resource_Name', 'Resource_Name', InputType_text_getInstance()));
    SERVER_getInstance();
    SERVER_getInstance();
    var tmp74_cryptoACFormFields = listOf([tmp_18, listOf_0(new CryptoACFormField('Access_Control_Enforcement', 'Access_Control_Enforcement', InputType_radio_getInstance(), listOf([EnforcementType_COMBINED_getInstance().toString(), EnforcementType_TRADITIONAL_getInstance().toString()]), EnforcementType_COMBINED_getInstance().toString()))]);
    var tmp_19 = new CryptoACFormData('add_resource', 'Add Topic', tmp70_icon, tmp71_endpoint, tmp72_method, tmp73_coreType, tmp74_cryptoACFormFields, Actions$lambda$lambda_13(props));
    var tmp75_icon = FaUserFriends;
    API_getInstance();
    API_getInstance();
    var tmp76_endpoint = '/v1/CryptoAC/' + 'assignments/{Core}/';
    var tmp77_method = Companion_getInstance().c21_1;
    var tmp78_coreType = CoreType_RBAC_MQTT_getInstance();
    SERVER_getInstance();
    SERVER_getInstance();
    var tmp_20 = listOf_0(new CryptoACFormField('Username', 'Username', InputType_text_getInstance()));
    SERVER_getInstance();
    SERVER_getInstance();
    var tmp79_cryptoACFormFields = listOf([tmp_20, listOf_0(new CryptoACFormField('Role_Name', replace('Role_Name', '_', ' '), InputType_text_getInstance()))]);
    var tmp_21 = new CryptoACFormData('assign_user_to_role', 'Assign User to Role', tmp75_icon, tmp76_endpoint, tmp77_method, tmp78_coreType, tmp79_cryptoACFormFields, Actions$lambda$lambda_14(props));
    var tmp80_icon = FaUserShield;
    API_getInstance();
    API_getInstance();
    var tmp81_endpoint = '/v1/CryptoAC/' + 'permissions/{Core}/';
    var tmp82_method = Companion_getInstance().c21_1;
    var tmp83_coreType = CoreType_RBAC_MQTT_getInstance();
    SERVER_getInstance();
    SERVER_getInstance();
    var tmp_22 = listOf_0(new CryptoACFormField('Role_Name', replace('Role_Name', '_', ' '), InputType_text_getInstance()));
    SERVER_getInstance();
    var tmp_23 = listOf_0(new CryptoACFormField('Resource_Name', 'Topic Name', InputType_text_getInstance()));
    SERVER_getInstance();
    SERVER_getInstance();
    var tmp84_cryptoACFormFields = listOf([tmp_22, tmp_23, listOf_0(new CryptoACFormField('Permission', 'Permission', InputType_radio_getInstance(), listOf([PermissionType_READ_getInstance().toString(), PermissionType_READWRITE_getInstance().toString()]), PermissionType_READ_getInstance().toString()))]);
    var tmp_24 = new CryptoACFormData('assign_permission_to_role', 'Assign Permission to Role', tmp80_icon, tmp81_endpoint, tmp82_method, tmp83_coreType, tmp84_cryptoACFormFields, Actions$lambda$lambda_15(props), true);
    var tmp85_icon = FaUserMinus;
    API_getInstance();
    API_getInstance();
    var tmp86_endpoint = '/v1/CryptoAC/' + 'users/{Core}/';
    var tmp87_method = Companion_getInstance().f21_1;
    var tmp88_coreType = CoreType_RBAC_MQTT_getInstance();
    SERVER_getInstance();
    SERVER_getInstance();
    var tmp89_cryptoACFormFields = listOf_0(listOf_0(new CryptoACFormField('Username', 'Username', InputType_text_getInstance())));
    var tmp_25 = new CryptoACFormData('delete_user', 'Delete User', tmp85_icon, tmp86_endpoint, tmp87_method, tmp88_coreType, tmp89_cryptoACFormFields, Actions$lambda$lambda_16(props));
    var tmp90_icon = FaUserNinja;
    API_getInstance();
    API_getInstance();
    var tmp91_endpoint = '/v1/CryptoAC/' + 'roles/{Core}/';
    var tmp92_method = Companion_getInstance().f21_1;
    var tmp93_coreType = CoreType_RBAC_MQTT_getInstance();
    SERVER_getInstance();
    SERVER_getInstance();
    var tmp94_cryptoACFormFields = listOf_0(listOf_0(new CryptoACFormField('Role_Name', replace('Role_Name', '_', ' '), InputType_text_getInstance())));
    var tmp_26 = new CryptoACFormData('delete_role', 'Delete Role', tmp90_icon, tmp91_endpoint, tmp92_method, tmp93_coreType, tmp94_cryptoACFormFields, Actions$lambda$lambda_17(props));
    var tmp95_icon = FaFileExcel;
    API_getInstance();
    API_getInstance();
    var tmp96_endpoint = '/v1/CryptoAC/' + 'resources/{Core}/';
    var tmp97_method = Companion_getInstance().f21_1;
    var tmp98_coreType = CoreType_RBAC_MQTT_getInstance();
    SERVER_getInstance();
    var tmp99_cryptoACFormFields = listOf_0(listOf_0(new CryptoACFormField('Resource_Name', 'Topic Name', InputType_text_getInstance())));
    var tmp_27 = new CryptoACFormData('delete_resource', 'Delete Topic', tmp95_icon, tmp96_endpoint, tmp97_method, tmp98_coreType, tmp99_cryptoACFormFields, Actions$lambda$lambda_18(props));
    var tmp100_icon = FaUserTimes;
    API_getInstance();
    API_getInstance();
    var tmp101_endpoint = '/v1/CryptoAC/' + 'assignments/{Core}/';
    var tmp102_method = Companion_getInstance().f21_1;
    var tmp103_coreType = CoreType_RBAC_MQTT_getInstance();
    SERVER_getInstance();
    SERVER_getInstance();
    var tmp_28 = listOf_0(new CryptoACFormField('Username', 'Username', InputType_text_getInstance()));
    SERVER_getInstance();
    SERVER_getInstance();
    var tmp104_cryptoACFormFields = listOf([tmp_28, listOf_0(new CryptoACFormField('Role_Name', replace('Role_Name', '_', ' '), InputType_text_getInstance()))]);
    var tmp_29 = new CryptoACFormData('revoke_user_from_role', 'Revoke User from Role', tmp100_icon, tmp101_endpoint, tmp102_method, tmp103_coreType, tmp104_cryptoACFormFields, Actions$lambda$lambda_19(props));
    var tmp105_icon = FaUserLock;
    API_getInstance();
    API_getInstance();
    var tmp106_endpoint = '/v1/CryptoAC/' + 'permissions/{Core}/';
    var tmp107_method = Companion_getInstance().f21_1;
    var tmp108_coreType = CoreType_RBAC_MQTT_getInstance();
    SERVER_getInstance();
    SERVER_getInstance();
    var tmp_30 = listOf_0(new CryptoACFormField('Role_Name', replace('Role_Name', '_', ' '), InputType_text_getInstance()));
    SERVER_getInstance();
    var tmp_31 = listOf_0(new CryptoACFormField('Resource_Name', 'Topic Name', InputType_text_getInstance()));
    SERVER_getInstance();
    SERVER_getInstance();
    var tmp109_cryptoACFormFields = listOf([tmp_30, tmp_31, listOf_0(new CryptoACFormField('Permission', 'Permission', InputType_radio_getInstance(), listOf([PermissionType_READWRITE_getInstance().toString(), PermissionType_WRITE_getInstance().toString()]), PermissionType_READWRITE_getInstance().toString()))]);
    var adminCryptoACFormsRBACMQTT = listOf([tmp_16, tmp_17, tmp_19, tmp_21, tmp_24, tmp_25, tmp_26, tmp_27, tmp_29, new CryptoACFormData('revoke_permission_from_role', 'Revoke Permission from Role', tmp105_icon, tmp106_endpoint, tmp107_method, tmp108_coreType, tmp109_cryptoACFormFields, Actions$lambda$lambda_20(props), true)]);
    var tmp110_icon = FaFileSignature;
    API_getInstance();
    API_getInstance();
    var tmp111_endpoint = '/v1/CryptoAC/' + 'resources/{Core}/';
    var tmp112_method = Companion_getInstance().e21_1;
    var tmp113_coreType = CoreType_RBAC_MQTT_getInstance();
    SERVER_getInstance();
    var tmp_32 = new CryptoACFormField('Resource_Name', 'Topic Name', InputType_text_getInstance());
    SERVER_getInstance();
    var tmp114_cryptoACFormFields = listOf_0(listOf([tmp_32, new CryptoACFormField('Resource_Content', 'Message', InputType_text_getInstance())]));
    var tmp_33 = new CryptoACFormData('write_resource', 'Publish to Topic', tmp110_icon, tmp111_endpoint, tmp112_method, tmp113_coreType, tmp114_cryptoACFormFields, Actions$lambda$lambda_21(props));
    var tmp115_icon = FaFileDownload;
    API_getInstance();
    API_getInstance();
    var tmp116_endpoint = '/v1/CryptoAC/' + 'resources/{Core}/';
    var tmp117_method = Companion_getInstance().b21_1;
    var tmp118_coreType = CoreType_RBAC_MQTT_getInstance();
    SERVER_getInstance();
    var tmp119_cryptoACFormFields = listOf_0(listOf_0(new CryptoACFormField('Resource_Name', 'Topic Name', InputType_text_getInstance())));
    var userCryptoACFormsRBACMQTT = listOf([tmp_33, new CryptoACFormData('read_resource', 'Subscribe to Topic', tmp115_icon, tmp116_endpoint, tmp117_method, tmp118_coreType, tmp119_cryptoACFormFields, Actions$lambda$lambda_22(props))]);
    var tmp$ret$3;
    // Inline function 'react.dom.html.ReactHTML.div' call
    var tmp0__get_div__2k2o9m = ReactHTML_getInstance();
    var tmp$ret$2;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = 'div';
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    var tmp_34 = tmp$ret$3;
    $this$FC.x4r(tmp_34, Actions$lambda$lambda_23(props, adminCryptoACFormsRBACCryptoAC, userCryptoACFormsRBACCloud, adminCryptoACFormsRBACMQTT, userCryptoACFormsRBACMQTT));
    return Unit_getInstance();
  }
  function Actions$lambda$lambda$lambda($props) {
    return function (response, params) {
      callbackDownloadUserProfile($props, response, params);
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda($props) {
    return function (method, endpoint, values, _anonymous_parameter_3__qggqen) {
      submitCryptoACForm($props, method, endpoint, values, Actions$lambda$lambda$lambda($props));
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda$lambda_0($props) {
    return function (response, _anonymous_parameter_1__qggqgd) {
      callbackShowOutcomeCode($props, response);
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda_0($props) {
    return function (method, endpoint, values, _anonymous_parameter_3__qggqen) {
      submitCryptoACForm($props, method, endpoint, values, Actions$lambda$lambda$lambda_0($props));
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda$lambda_1($props) {
    return function (response, _anonymous_parameter_1__qggqgd) {
      callbackShowOutcomeCode($props, response);
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda_1($props) {
    return function (method, endpoint, values, _anonymous_parameter_3__qggqen) {
      submitCryptoACForm($props, method, endpoint, values, Actions$lambda$lambda$lambda_1($props));
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda$lambda_2($props) {
    return function (response, _anonymous_parameter_1__qggqgd) {
      callbackShowOutcomeCode($props, response);
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda_2($props) {
    return function (method, endpoint, values, _anonymous_parameter_3__qggqen) {
      submitCryptoACForm($props, method, endpoint, values, Actions$lambda$lambda$lambda_2($props));
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda$lambda_3($props) {
    return function (response, _anonymous_parameter_1__qggqgd) {
      callbackShowOutcomeCode($props, response);
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda_3($props) {
    return function (method, endpoint, values, _anonymous_parameter_3__qggqen) {
      submitCryptoACForm_0($props, method, endpoint, values, false, Actions$lambda$lambda$lambda_3($props));
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda$lambda_4($props) {
    return function (response, _anonymous_parameter_1__qggqgd) {
      callbackShowOutcomeCode($props, response);
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda_4($props) {
    return function (method, endpoint, values, _anonymous_parameter_3__qggqen) {
      submitCryptoACForm_0($props, method, endpoint, values, false, Actions$lambda$lambda$lambda_4($props));
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda$lambda_5($props) {
    return function (response, _anonymous_parameter_1__qggqgd) {
      callbackShowOutcomeCode($props, response);
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda_5($props) {
    return function (method, endpoint, values, _anonymous_parameter_3__qggqen) {
      submitCryptoACForm_0($props, method, endpoint, values, false, Actions$lambda$lambda$lambda_5($props));
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda$lambda_6($props) {
    return function (response, _anonymous_parameter_1__qggqgd) {
      callbackShowOutcomeCode($props, response);
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda_6($props) {
    return function (method, endpoint, values, _anonymous_parameter_3__qggqen) {
      submitCryptoACForm_0($props, method, endpoint, values, false, Actions$lambda$lambda$lambda_6($props));
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda$lambda_7($props) {
    return function (response, _anonymous_parameter_1__qggqgd) {
      callbackShowOutcomeCode($props, response);
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda_7($props) {
    return function (method, endpoint, values, _anonymous_parameter_3__qggqen) {
      submitCryptoACForm_0($props, method, endpoint, values, false, Actions$lambda$lambda$lambda_7($props));
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda$lambda_8($props) {
    return function (response) {
      callbackShowOutcomeCode($props, response);
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda_8($props) {
    return function (method, endpoint, values, files) {
      submitCryptoACFormWithBinaryData($props, method, endpoint, values, files, Actions$lambda$lambda$lambda_8($props));
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda$lambda_9($props) {
    return function (response) {
      callbackShowOutcomeCode($props, response);
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda_9($props) {
    return function (method, endpoint, values, files) {
      submitCryptoACFormWithBinaryData($props, method, endpoint, values, files, Actions$lambda$lambda$lambda_9($props));
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda_10($props) {
    return function (method, endpoint, values, _anonymous_parameter_3__qggqen) {
      submitCryptoACFormInNewTab($props, method, endpoint, values, false);
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda$lambda_10($props) {
    return function (response, params) {
      callbackDownloadUserProfile($props, response, params);
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda_11($props) {
    return function (method, endpoint, values, _anonymous_parameter_3__qggqen) {
      submitCryptoACForm($props, method, endpoint, values, Actions$lambda$lambda$lambda_10($props));
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda$lambda_11($props) {
    return function (response, _anonymous_parameter_1__qggqgd) {
      callbackShowOutcomeCode($props, response);
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda_12($props) {
    return function (method, endpoint, values, _anonymous_parameter_3__qggqen) {
      submitCryptoACForm($props, method, endpoint, values, Actions$lambda$lambda$lambda_11($props));
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda$lambda_12($props) {
    return function (response, _anonymous_parameter_1__qggqgd) {
      callbackShowOutcomeCode($props, response);
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda_13($props) {
    return function (method, endpoint, values, _anonymous_parameter_3__qggqen) {
      submitCryptoACForm($props, method, endpoint, values, Actions$lambda$lambda$lambda_12($props));
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda$lambda_13($props) {
    return function (response, _anonymous_parameter_1__qggqgd) {
      callbackShowOutcomeCode($props, response);
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda_14($props) {
    return function (method, endpoint, values, _anonymous_parameter_3__qggqen) {
      submitCryptoACForm($props, method, endpoint, values, Actions$lambda$lambda$lambda_13($props));
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda$lambda_14($props) {
    return function (response, _anonymous_parameter_1__qggqgd) {
      callbackShowOutcomeCode($props, response);
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda_15($props) {
    return function (method, endpoint, values, _anonymous_parameter_3__qggqen) {
      submitCryptoACForm($props, method, endpoint, values, Actions$lambda$lambda$lambda_14($props));
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda$lambda_15($props) {
    return function (response, _anonymous_parameter_1__qggqgd) {
      callbackShowOutcomeCode($props, response);
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda_16($props) {
    return function (method, endpoint, values, _anonymous_parameter_3__qggqen) {
      submitCryptoACForm_0($props, method, endpoint, values, false, Actions$lambda$lambda$lambda_15($props));
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda$lambda_16($props) {
    return function (response, _anonymous_parameter_1__qggqgd) {
      callbackShowOutcomeCode($props, response);
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda_17($props) {
    return function (method, endpoint, values, _anonymous_parameter_3__qggqen) {
      submitCryptoACForm_0($props, method, endpoint, values, false, Actions$lambda$lambda$lambda_16($props));
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda$lambda_17($props) {
    return function (response, _anonymous_parameter_1__qggqgd) {
      callbackShowOutcomeCode($props, response);
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda_18($props) {
    return function (method, endpoint, values, _anonymous_parameter_3__qggqen) {
      submitCryptoACForm_0($props, method, endpoint, values, false, Actions$lambda$lambda$lambda_17($props));
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda$lambda_18($props) {
    return function (response, _anonymous_parameter_1__qggqgd) {
      callbackShowOutcomeCode($props, response);
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda_19($props) {
    return function (method, endpoint, values, _anonymous_parameter_3__qggqen) {
      submitCryptoACForm_0($props, method, endpoint, values, false, Actions$lambda$lambda$lambda_18($props));
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda$lambda_19($props) {
    return function (response, _anonymous_parameter_1__qggqgd) {
      callbackShowOutcomeCode($props, response);
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda_20($props) {
    return function (method, endpoint, values, _anonymous_parameter_3__qggqen) {
      submitCryptoACForm_0($props, method, endpoint, values, false, Actions$lambda$lambda$lambda_19($props));
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda$lambda_20($props) {
    return function (response, _anonymous_parameter_1__qggqgd) {
      callbackShowOutcomeCode($props, response);
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda_21($props) {
    return function (method, endpoint, values, _anonymous_parameter_3__qggqen) {
      submitCryptoACForm($props, method, endpoint, values, Actions$lambda$lambda$lambda_20($props));
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda$lambda_21($props) {
    return function (response, params) {
      callbackSubscribeToTopic($props, response, params);
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda_22($props) {
    return function (method, endpoint, values, _anonymous_parameter_3__qggqen) {
      submitCryptoACForm_0($props, method, endpoint, values, false, Actions$lambda$lambda$lambda_21($props));
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda$lambda$lambda$lambda$lambda($this$invoke) {
    _init_properties_Actions_kt__coato5();
    return Unit_getInstance();
  }
  function Actions$lambda$lambda$lambda$lambda$lambda($element) {
    return function ($this$createElement) {
      $this$createElement.o4r($element.x59_1, Actions$lambda$lambda$lambda$lambda$lambda$lambda);
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda$lambda$lambda$lambda_0($element, $props) {
    return function ($this$invoke) {
      $this$invoke.acceptDisabledElementsProp = false;
      $this$invoke.submitButtonTextProp = $element.w59_1;
      $this$invoke.endpointProp = $element.y59_1;
      $this$invoke.coreTypeProp = $element.a5a_1;
      $this$invoke.methodProp = $element.z59_1;
      $this$invoke.cryptoACFormFieldsProp = $element.b5a_1;
      $this$invoke.handleSubmitEventProp = $element.c5a_1;
      $this$invoke.handleDisplayAlertProp = $props.handleDisplayAlertProp;
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda$lambda$lambda($element, $props) {
    return function ($this$invoke) {
      $this$invoke.title = $element.w59_1;
      $this$invoke.icon = ensureNotNull(createElement(Actions$lambda$lambda$lambda$lambda$lambda($element)));
      var tmp = get_CryptoACForm();
      $this$invoke.x4r(tmp, Actions$lambda$lambda$lambda$lambda$lambda_0($element, $props));
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda$lambda_22($element, $props) {
    return function ($this$invoke) {
      $this$invoke.iconShape = 'circle';
      var tmp = SubMenu;
      $this$invoke.x4r(tmp, Actions$lambda$lambda$lambda$lambda($element, $props));
      return Unit_getInstance();
    };
  }
  function Actions$lambda$lambda$lambda_23($this$invoke) {
    _init_properties_Actions_kt__coato5();
    var tmp$ret$2;
    // Inline function 'csstype.pct' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = '100%';
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = tmp0_unsafeCast;
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    $this$invoke.widthProp = tmp$ret$2;
    var tmp$ret$5;
    // Inline function 'csstype.px' call
    var tmp$ret$4;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp1_unsafeCast = '0px';
    var tmp$ret$3;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$3 = tmp1_unsafeCast;
    tmp$ret$4 = tmp$ret$3;
    tmp$ret$5 = tmp$ret$4;
    $this$invoke.marginTopProp = tmp$ret$5;
    var tmp$ret$8;
    // Inline function 'csstype.px' call
    var tmp$ret$7;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp2_unsafeCast = '0px';
    var tmp$ret$6;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$6 = tmp2_unsafeCast;
    tmp$ret$7 = tmp$ret$6;
    tmp$ret$8 = tmp$ret$7;
    $this$invoke.marginBottomProp = tmp$ret$8;
    return Unit_getInstance();
  }
  function Actions$lambda$lambda_23($props, $adminCryptoACFormsRBACCryptoAC, $userCryptoACFormsRBACCloud, $adminCryptoACFormsRBACMQTT, $userCryptoACFormsRBACMQTT) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$9;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$8;
      // Inline function 'js.core.jso' call
      var tmp$ret$7;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.sidebar.Actions.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'csstype.number' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = 1.0;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.flex = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.number' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = 1.0;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      tmp0_apply.flexGrow = tmp$ret$6;
      tmp$ret$7 = tmp0_apply;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = css(tmp$ret$8);
      tmp1_css.className = tmp$ret$9;
      var tmp0_subject = $props.coreTypeProp;
      var tmp0 = tmp0_subject.n4_1;
      var tmp;
      switch (tmp0) {
        case 0:
          var tmp_0;
          if ($props.userIsAdminProp) {
            tmp_0 = plus_0($adminCryptoACFormsRBACCryptoAC, $userCryptoACFormsRBACCloud);
          } else {
            tmp_0 = $userCryptoACFormsRBACCloud;
          }

          tmp = tmp_0;
          break;
        case 1:
          var tmp_1;
          if ($props.userIsAdminProp) {
            tmp_1 = plus_0($adminCryptoACFormsRBACMQTT, $userCryptoACFormsRBACMQTT);
          } else {
            tmp_1 = $userCryptoACFormsRBACMQTT;
          }

          tmp = tmp_1;
          break;
        case 2:
          throw new NotImplementedError();
        case 3:
          throw new NotImplementedError();
        default:
          noWhenBranchMatchedException();
          break;
      }
      var cryptoACForm = tmp;
      var tmp0_iterator = cryptoACForm.f();
      while (tmp0_iterator.g()) {
        var element = tmp0_iterator.h();
        // Inline function 'eu.fbk.st.cryptoac.view.sidebar.Actions.<anonymous>.<anonymous>.<anonymous>' call
        $this$invoke.key = element.v59_1;
        var tmp_2 = Menu;
        $this$invoke.x4r(tmp_2, Actions$lambda$lambda$lambda_22(element, $props));
        if (element.d5a_1) {
          var tmp_3 = get_CryptoACDivider();
          $this$invoke.x4r(tmp_3, Actions$lambda$lambda$lambda_23);
        }
      }
      return Unit_getInstance();
    };
  }
  function submitCryptoACForm$lambda($method, $endpoint) {
    return function () {
      return 'Submitting CryptoAC form (method ' + $method + ', endpoint ' + $endpoint + ') with the following values:';
    };
  }
  function submitCryptoACForm$lambda_0($element) {
    return function () {
      return '- key: ' + $element.p() + ', value: ' + $element.q();
    };
  }
  function submitCryptoACForm$slambda$lambda($endpoint) {
    return function ($this$submitFormPatch) {
      url($this$submitFormPatch, $endpoint);
      return Unit_getInstance();
    };
  }
  function submitCryptoACForm$slambda$lambda_0($method) {
    return function () {
      return 'Method ' + $method + ' is not supported';
    };
  }
  function submitCryptoACForm$slambda$lambda_1($e) {
    return function () {
      return 'Error during HTTP request (' + $e.message + '), see console log for details';
    };
  }
  function submitCryptoACForm$slambda($method, $callback, $props, $values, $endpoint, resultContinuation) {
    this.c5p_1 = $method;
    this.d5p_1 = $callback;
    this.e5p_1 = $props;
    this.f5p_1 = $values;
    this.g5p_1 = $endpoint;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(submitCryptoACForm$slambda).f1e = function ($this$launch, $completion) {
    var tmp = this.g1e($this$launch, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  };
  protoOf(submitCryptoACForm$slambda).si = function (p1, $completion) {
    return this.f1e((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(submitCryptoACForm$slambda).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 6;
            this.yh_1 = 5;
            if (this.c5p_1.equals(Companion_getInstance().c21_1) ? true : this.c5p_1.equals(Companion_getInstance().e21_1)) {
              if (this.c5p_1.equals(Companion_getInstance().c21_1)) {
                var tmp_0 = this;
                tmp_0.i5p_1 = this.e5p_1.httpClientProp;
                var tmp_1 = this;
                var tmp1_build = Companion_getInstance_1();
                var tmp0_apply = ParametersBuilder();
                var tmp0_iterator = this.f5p_1.o().f();
                while (tmp0_iterator.g()) {
                  var element = tmp0_iterator.h();
                  tmp0_apply.e1p(element.p(), element.q());
                }
                tmp_1.j5p_1 = tmp0_apply.u1a();
                var tmp_2 = this;
                var tmp2_apply = new HttpRequestBuilder();
                if (false) {
                  tmp2_apply.x3h_1 = Companion_getInstance().b21_1;
                  tmp2_apply.w3h_1.j24_1.f1p(this.j5p_1);
                } else {
                  tmp2_apply.x3h_1 = Companion_getInstance().c21_1;
                  var tmp0_setBody = new FormDataContent(this.j5p_1);
                  var tmp0_subject = tmp0_setBody;
                  if (tmp0_subject == null) {
                    tmp2_apply.z3h_1 = NullBody_getInstance();
                    var tmp_3 = JsType_getInstance();
                    var tmp_4 = getKClass(FormDataContent);
                    var tmp_5;
                    try {
                      tmp_5 = createKType(getKClass(FormDataContent), arrayOf([]), false);
                    } catch ($p) {
                      var tmp_6;
                      if ($p instanceof Error) {
                        var cause = $p;
                        tmp_6 = null;
                      } else {
                        throw $p;
                      }
                      tmp_5 = tmp_6;
                    }
                    tmp2_apply.v3n(typeInfoImpl(tmp_3, tmp_4, tmp_5));
                  } else {
                    if (tmp0_subject instanceof OutgoingContent) {
                      tmp2_apply.z3h_1 = tmp0_setBody;
                      tmp2_apply.v3n(null);
                    } else {
                      tmp2_apply.z3h_1 = tmp0_setBody;
                      var tmp_7 = JsType_getInstance();
                      var tmp_8 = getKClass(FormDataContent);
                      var tmp_9;
                      try {
                        tmp_9 = createKType(getKClass(FormDataContent), arrayOf([]), false);
                      } catch ($p) {
                        var tmp_10;
                        if ($p instanceof Error) {
                          var cause_0 = $p;
                          tmp_10 = null;
                        } else {
                          throw $p;
                        }
                        tmp_9 = tmp_10;
                      }
                      tmp2_apply.v3n(typeInfoImpl(tmp_7, tmp_8, tmp_9));
                    }
                  }
                }
                url(tmp2_apply, this.g5p_1);
                tmp_2.k5p_1 = tmp2_apply;
                this.xh_1 = 2;
                suspendResult = (new HttpStatement(this.k5p_1, this.i5p_1)).o4i(this);
                if (suspendResult === get_COROUTINE_SUSPENDED()) {
                  return suspendResult;
                }
                continue $sm;
              } else {
                this.xh_1 = 1;
                var tmp_11 = this.e5p_1.httpClientProp;
                var tmp7_build = Companion_getInstance_1();
                var tmp6_apply = ParametersBuilder();
                var tmp0_iterator_0 = this.f5p_1.o().f();
                while (tmp0_iterator_0.g()) {
                  var element_0 = tmp0_iterator_0.h();
                  tmp6_apply.e1p(element_0.p(), element_0.q());
                }
                var tmp_12 = tmp6_apply.u1a();
                suspendResult = submitFormPatch(tmp_11, tmp_12, submitCryptoACForm$slambda$lambda(this.g5p_1), this);
                if (suspendResult === get_COROUTINE_SUSPENDED()) {
                  return suspendResult;
                }
                continue $sm;
              }
            } else {
              this.e5p_1.handleChangeBackdropIsOpenProp(false);
              var tmp_13 = get_logger_8();
              tmp_13.j4r(submitCryptoACForm$slambda$lambda_0(this.c5p_1));
              this.e5p_1.handleDisplayAlertProp(OutcomeCode_CODE_048_HTTP_METHOD_NOT_SUPPORTED_getInstance(), CryptoACAlertSeverity_ERROR_getInstance());
              this.xh_1 = 4;
              continue $sm;
            }

            break;
          case 1:
            var ARGUMENT = suspendResult;
            this.d5p_1(ARGUMENT, this.f5p_1);
            this.xh_1 = 3;
            continue $sm;
          case 2:
            var ARGUMENT_0 = suspendResult;
            this.d5p_1(ARGUMENT_0, this.f5p_1);
            this.xh_1 = 3;
            continue $sm;
          case 3:
            this.xh_1 = 4;
            continue $sm;
          case 4:
            this.yh_1 = 6;
            this.xh_1 = 7;
            continue $sm;
          case 5:
            this.yh_1 = 6;
            var tmp_14 = this.ai_1;
            if (tmp_14 instanceof Exception) {
              var e = this.ai_1;
              this.e5p_1.handleChangeBackdropIsOpenProp(false);
              var tmp_15 = get_logger_8();
              tmp_15.j4r(submitCryptoACForm$slambda$lambda_1(e));
              console.log(e);
              this.e5p_1.handleDisplayAlertProp(OutcomeCode_CODE_049_UNEXPECTED_getInstance(), CryptoACAlertSeverity_ERROR_getInstance());
              this.xh_1 = 7;
              continue $sm;
            } else {
              throw this.ai_1;
            }

            break;
          case 6:
            throw this.ai_1;
          case 7:
            this.yh_1 = 6;
            return Unit_getInstance();
        }
      } catch ($p) {
        var e_0 = $p;
        if (this.yh_1 === 6) {
          throw e_0;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e_0;
        }
      }
     while (true);
  };
  protoOf(submitCryptoACForm$slambda).g1e = function ($this$launch, completion) {
    var i = new submitCryptoACForm$slambda(this.c5p_1, this.d5p_1, this.e5p_1, this.f5p_1, this.g5p_1, completion);
    i.h5p_1 = $this$launch;
    return i;
  };
  function submitCryptoACForm$slambda_0($method, $callback, $props, $values, $endpoint, resultContinuation) {
    var i = new submitCryptoACForm$slambda($method, $callback, $props, $values, $endpoint, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.f1e($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function submitCryptoACFormWithBinaryData$lambda($method, $endpoint, $files, $values) {
    return function () {
      return 'Submitting CryptoAC form, method ' + $method + ', endpoint ' + $endpoint + ', ' + $files.i() + ' files' + ($values.i() > 0 ? ' and the following values:' : '');
    };
  }
  function submitCryptoACFormWithBinaryData$lambda_0($element) {
    return function () {
      return '- key: ' + $element.p() + ', value: ' + $element.q();
    };
  }
  function submitCryptoACFormWithBinaryData$slambda$lambda$slambda($callback, $props, $parts, $endpoint, $method, resultContinuation) {
    this.t5p_1 = $callback;
    this.u5p_1 = $props;
    this.v5p_1 = $parts;
    this.w5p_1 = $endpoint;
    this.x5p_1 = $method;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(submitCryptoACFormWithBinaryData$slambda$lambda$slambda).f1e = function ($this$launch, $completion) {
    var tmp = this.g1e($this$launch, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  };
  protoOf(submitCryptoACFormWithBinaryData$slambda$lambda$slambda).si = function (p1, $completion) {
    return this.f1e((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(submitCryptoACFormWithBinaryData$slambda$lambda$slambda).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 2;
            var tmp_0 = this;
            tmp_0.z5p_1 = this.u5p_1.httpClientProp;
            var tmp_1 = this;
            tmp_1.a5q_1 = formData(copyToArray(this.v5p_1).slice());
            var tmp_2 = this;
            var tmp0_apply = new HttpRequestBuilder();
            tmp0_apply.x3h_1 = Companion_getInstance().c21_1;
            var tmp0_setBody = new MultiPartFormDataContent(this.a5q_1);
            var tmp0_subject = tmp0_setBody;
            if (tmp0_subject == null) {
              tmp0_apply.z3h_1 = NullBody_getInstance();
              var tmp_3 = JsType_getInstance();
              var tmp_4 = getKClass(MultiPartFormDataContent);
              var tmp_5;
              try {
                tmp_5 = createKType(getKClass(MultiPartFormDataContent), arrayOf([]), false);
              } catch ($p) {
                var tmp_6;
                if ($p instanceof Error) {
                  var cause = $p;
                  tmp_6 = null;
                } else {
                  throw $p;
                }
                tmp_5 = tmp_6;
              }
              tmp0_apply.v3n(typeInfoImpl(tmp_3, tmp_4, tmp_5));
            } else {
              if (tmp0_subject instanceof OutgoingContent) {
                tmp0_apply.z3h_1 = tmp0_setBody;
                tmp0_apply.v3n(null);
              } else {
                tmp0_apply.z3h_1 = tmp0_setBody;
                var tmp_7 = JsType_getInstance();
                var tmp_8 = getKClass(MultiPartFormDataContent);
                var tmp_9;
                try {
                  tmp_9 = createKType(getKClass(MultiPartFormDataContent), arrayOf([]), false);
                } catch ($p) {
                  var tmp_10;
                  if ($p instanceof Error) {
                    var cause_0 = $p;
                    tmp_10 = null;
                  } else {
                    throw $p;
                  }
                  tmp_9 = tmp_10;
                }
                tmp0_apply.v3n(typeInfoImpl(tmp_7, tmp_8, tmp_9));
              }
            }

            url(tmp0_apply, this.w5p_1);
            tmp0_apply.x3h_1 = this.x5p_1;
            tmp_2.b5q_1 = tmp0_apply;
            this.xh_1 = 1;
            suspendResult = (new HttpStatement(this.b5q_1, this.z5p_1)).o4i(this);
            if (suspendResult === get_COROUTINE_SUSPENDED()) {
              return suspendResult;
            }

            continue $sm;
          case 1:
            var ARGUMENT = suspendResult;
            this.t5p_1(ARGUMENT);
            return Unit_getInstance();
          case 2:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 2) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  protoOf(submitCryptoACFormWithBinaryData$slambda$lambda$slambda).g1e = function ($this$launch, completion) {
    var i = new submitCryptoACFormWithBinaryData$slambda$lambda$slambda(this.t5p_1, this.u5p_1, this.v5p_1, this.w5p_1, this.x5p_1, completion);
    i.y5p_1 = $this$launch;
    return i;
  };
  function submitCryptoACFormWithBinaryData$slambda$lambda$slambda_0($callback, $props, $parts, $endpoint, $method, resultContinuation) {
    var i = new submitCryptoACFormWithBinaryData$slambda$lambda$slambda($callback, $props, $parts, $endpoint, $method, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.f1e($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function submitCryptoACFormWithBinaryData$slambda$lambda($fileEntriesUploaded, $reader, $element, $parts, $files, $callback, $props, $endpoint, $method) {
    return function (_anonymous_parameter_0__qggqh8) {
      $fileEntriesUploaded._v = $fileEntriesUploaded._v + 1 | 0;
      var tmp$ret$1;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp = $reader.result;
      var tmp0_unsafeCast = new Int8Array(tmp instanceof ArrayBuffer ? tmp : THROW_CCE());
      var tmp$ret$0;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$0 = tmp0_unsafeCast;
      tmp$ret$1 = tmp$ret$0;
      var fileContent = tmp$ret$1;
      var tmp_0 = $element.p();
      var tmp$ret$3;
      // Inline function 'io.ktor.http.Companion.build' call
      var tmp2_build = Companion_getInstance_3();
      var tmp$ret$2;
      // Inline function 'kotlin.apply' call
      var tmp1_apply = new HeadersBuilder();
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.sidebar.submitCryptoACFormWithBinaryData.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      tmp1_apply.e1p(HttpHeaders_getInstance().j1x_1, 'filename=' + $element.q().name);
      tmp$ret$2 = tmp1_apply;
      tmp$ret$3 = tmp$ret$2.u1a();
      var formPart = new FormPart(tmp_0, fileContent, tmp$ret$3);
      $parts.a(formPart);
      var tmp_1;
      if ($fileEntriesUploaded._v === $files.i()) {
        var tmp_2 = MainScope();
        launch(tmp_2, VOID, VOID, submitCryptoACFormWithBinaryData$slambda$lambda$slambda_0($callback, $props, $parts, $endpoint, $method, null));
        tmp_1 = Unit_getInstance();
      }
      return Unit_getInstance();
    };
  }
  function submitCryptoACFormWithBinaryData$slambda$lambda_0($method) {
    return function () {
      return 'Method ' + $method + ' is not supported';
    };
  }
  function submitCryptoACFormWithBinaryData$slambda$lambda_1($e) {
    return function () {
      return 'Error during HTTP request (' + $e.message + '), see console log for details';
    };
  }
  function submitCryptoACFormWithBinaryData$slambda($method, $values, $files, $props, $callback, $endpoint, resultContinuation) {
    this.k5q_1 = $method;
    this.l5q_1 = $values;
    this.m5q_1 = $files;
    this.n5q_1 = $props;
    this.o5q_1 = $callback;
    this.p5q_1 = $endpoint;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(submitCryptoACFormWithBinaryData$slambda).f1e = function ($this$launch, $completion) {
    var tmp = this.g1e($this$launch, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  };
  protoOf(submitCryptoACFormWithBinaryData$slambda).si = function (p1, $completion) {
    return this.f1e((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(submitCryptoACFormWithBinaryData$slambda).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        if (tmp === 0) {
          this.yh_1 = 1;
          try {
            if (this.k5q_1.equals(Companion_getInstance().c21_1) ? true : this.k5q_1.equals(Companion_getInstance().e21_1)) {
              var parts = ArrayList_init_$Create$();
              var tmp0_forEach = this.l5q_1.o();
              var tmp0_iterator = tmp0_forEach.f();
              while (tmp0_iterator.g()) {
                var element = tmp0_iterator.h();
                var tmp0_plusAssign = new FormPart(element.p(), element.q());
                parts.a(tmp0_plusAssign);
              }
              var fileEntriesUploaded = {_v: 0};
              var tmp1_forEach = this.m5q_1.o();
              var tmp0_iterator_0 = tmp1_forEach.f();
              while (tmp0_iterator_0.g()) {
                var element_0 = tmp0_iterator_0.h();
                var reader = new FileReader();
                reader.readAsArrayBuffer(element_0.q());
                reader.onload = submitCryptoACFormWithBinaryData$slambda$lambda(fileEntriesUploaded, reader, element_0, parts, this.m5q_1, this.o5q_1, this.n5q_1, this.p5q_1, this.k5q_1);
              }
            } else {
              this.n5q_1.handleChangeBackdropIsOpenProp(false);
              var tmp_0 = get_logger_8();
              tmp_0.j4r(submitCryptoACFormWithBinaryData$slambda$lambda_0(this.k5q_1));
              this.n5q_1.handleDisplayAlertProp(OutcomeCode_CODE_048_HTTP_METHOD_NOT_SUPPORTED_getInstance(), CryptoACAlertSeverity_ERROR_getInstance());
            }
          } catch ($p) {
            if ($p instanceof Error_0) {
              var e = $p;
              this.n5q_1.handleChangeBackdropIsOpenProp(false);
              var tmp_1 = get_logger_8();
              tmp_1.j4r(submitCryptoACFormWithBinaryData$slambda$lambda_1(e));
              console.log(e);
              this.n5q_1.handleDisplayAlertProp(OutcomeCode_CODE_049_UNEXPECTED_getInstance(), CryptoACAlertSeverity_ERROR_getInstance());
            } else {
              throw $p;
            }
          }
          return Unit_getInstance();
        } else if (tmp === 1) {
          throw this.ai_1;
        }
      } catch ($p) {
        var e_0 = $p;
        throw e_0;
      }
     while (true);
  };
  protoOf(submitCryptoACFormWithBinaryData$slambda).g1e = function ($this$launch, completion) {
    var i = new submitCryptoACFormWithBinaryData$slambda(this.k5q_1, this.l5q_1, this.m5q_1, this.n5q_1, this.o5q_1, this.p5q_1, completion);
    i.q5q_1 = $this$launch;
    return i;
  };
  function submitCryptoACFormWithBinaryData$slambda_0($method, $values, $files, $props, $callback, $endpoint, resultContinuation) {
    var i = new submitCryptoACFormWithBinaryData$slambda($method, $values, $files, $props, $callback, $endpoint, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.f1e($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function submitCryptoACFormInNewTab$lambda($method, $endpoint, $query) {
    return function () {
      return 'Submitting CryptoAC form (method ' + $method + ', endpoint ' + $endpoint + ', query ' + $query + ') with the following values:';
    };
  }
  function submitCryptoACFormInNewTab$lambda_0($element) {
    return function () {
      return '- key: ' + $element.p() + ', value: ' + $element.q();
    };
  }
  function submitCryptoACFormInNewTab$slambda$lambda$lambda() {
    return 'Get request successful';
  }
  function submitCryptoACFormInNewTab$slambda$lambda($win, $props) {
    return function (it) {
      var tmp;
      if (equals(ensureNotNull($win).document, undefined)) {
        var tmp_0 = get_logger_8();
        tmp_0.h4r(submitCryptoACFormInNewTab$slambda$lambda$lambda);
        tmp = $props.handleDisplayAlertProp(OutcomeCode_CODE_000_SUCCESS_getInstance(), CryptoACAlertSeverity_SUCCESS_getInstance());
      }
      $win.close();
      return Unit_getInstance();
    };
  }
  function submitCryptoACFormInNewTab$slambda$lambda_0($method) {
    return function () {
      return 'Method ' + $method + ' is not supported';
    };
  }
  function submitCryptoACFormInNewTab$slambda$lambda_1($e) {
    return function () {
      return 'Error during HTTP request (' + $e.message + '), see console log for details';
    };
  }
  function submitCryptoACFormInNewTab$slambda($method, $endpoint, $query, $values, $props, resultContinuation) {
    this.z5q_1 = $method;
    this.a5r_1 = $endpoint;
    this.b5r_1 = $query;
    this.c5r_1 = $values;
    this.d5r_1 = $props;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(submitCryptoACFormInNewTab$slambda).f1e = function ($this$launch, $completion) {
    var tmp = this.g1e($this$launch, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  };
  protoOf(submitCryptoACFormInNewTab$slambda).si = function (p1, $completion) {
    return this.f1e((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(submitCryptoACFormInNewTab$slambda).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        if (tmp === 0) {
          this.yh_1 = 1;
          try {
            if (this.z5q_1.equals(Companion_getInstance().b21_1)) {
              var tmp0_substring = this.a5r_1.length - 1 | 0;
              var endpointWithParameters = new StringBuilder(this.a5r_1.substring(0, tmp0_substring));
              if (this.b5r_1) {
                endpointWithParameters.h7('?');
                var tmp0_iterator = this.c5r_1.o().f();
                while (tmp0_iterator.g()) {
                  var element = tmp0_iterator.h();
                  endpointWithParameters.h7(element.p()).h7('=').h7(element.q());
                }
              } else {
                var tmp0_iterator_0 = this.c5r_1.o().f();
                while (tmp0_iterator_0.g()) {
                  var element_0 = tmp0_iterator_0.h();
                  endpointWithParameters.h7('/').h7(element_0.q());
                }
              }
              var win = window.open(endpointWithParameters.toString(), '_blank');
              this.d5r_1.handleChangeBackdropIsOpenProp(false);
              var tmp0_safe_receiver = win;
              if (tmp0_safe_receiver == null) {
              } else {
                tmp0_safe_receiver.onload = submitCryptoACFormInNewTab$slambda$lambda(win, this.d5r_1);
              }
            } else {
              this.d5r_1.handleChangeBackdropIsOpenProp(false);
              var tmp_0 = get_logger_8();
              tmp_0.j4r(submitCryptoACFormInNewTab$slambda$lambda_0(this.z5q_1));
              this.d5r_1.handleDisplayAlertProp(OutcomeCode_CODE_048_HTTP_METHOD_NOT_SUPPORTED_getInstance(), CryptoACAlertSeverity_ERROR_getInstance());
            }
          } catch ($p) {
            if ($p instanceof Error_0) {
              var e = $p;
              this.d5r_1.handleChangeBackdropIsOpenProp(false);
              var tmp_1 = get_logger_8();
              tmp_1.j4r(submitCryptoACFormInNewTab$slambda$lambda_1(e));
              console.log(e);
              this.d5r_1.handleDisplayAlertProp(OutcomeCode_CODE_049_UNEXPECTED_getInstance(), CryptoACAlertSeverity_ERROR_getInstance());
            } else {
              throw $p;
            }
          }
          return Unit_getInstance();
        } else if (tmp === 1) {
          throw this.ai_1;
        }
      } catch ($p) {
        var e_0 = $p;
        throw e_0;
      }
     while (true);
  };
  protoOf(submitCryptoACFormInNewTab$slambda).g1e = function ($this$launch, completion) {
    var i = new submitCryptoACFormInNewTab$slambda(this.z5q_1, this.a5r_1, this.b5r_1, this.c5r_1, this.d5r_1, completion);
    i.e5r_1 = $this$launch;
    return i;
  };
  function submitCryptoACFormInNewTab$slambda_0($method, $endpoint, $query, $values, $props, resultContinuation) {
    var i = new submitCryptoACFormInNewTab$slambda($method, $endpoint, $query, $values, $props, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.f1e($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function submitCryptoACForm$lambda_1($method, $endpoint, $query) {
    return function () {
      return 'Submitting CryptoAC form (method ' + $method + ', endpoint ' + $endpoint + ', query ' + $query + ') with the following values:';
    };
  }
  function submitCryptoACForm$lambda_2($element) {
    return function () {
      return '- key: ' + $element.p() + ', value: ' + $element.q();
    };
  }
  function submitCryptoACForm$slambda$lambda_2($method) {
    return function () {
      return 'Method ' + $method + ' is not supported';
    };
  }
  function submitCryptoACForm$slambda$lambda_3($e) {
    return function () {
      return 'Error during HTTP request (' + $e.message + '), see console log for details';
    };
  }
  function submitCryptoACForm$slambda_1($method, $endpoint, $query, $values, $callback, $props, resultContinuation) {
    this.n5r_1 = $method;
    this.o5r_1 = $endpoint;
    this.p5r_1 = $query;
    this.q5r_1 = $values;
    this.r5r_1 = $callback;
    this.s5r_1 = $props;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(submitCryptoACForm$slambda_1).f1e = function ($this$launch, $completion) {
    var tmp = this.g1e($this$launch, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  };
  protoOf(submitCryptoACForm$slambda_1).si = function (p1, $completion) {
    return this.f1e((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(submitCryptoACForm$slambda_1).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 6;
            this.yh_1 = 5;
            if (this.n5r_1.equals(Companion_getInstance().f21_1) ? true : this.n5r_1.equals(Companion_getInstance().b21_1)) {
              var tmp_0 = this;
              var tmp0_substring = this.o5r_1.length - 1 | 0;
              tmp_0.u5r_1 = new StringBuilder(this.o5r_1.substring(0, tmp0_substring));
              if (this.p5r_1) {
                this.u5r_1.h7('?');
                var tmp0_iterator = this.q5r_1.o().f();
                while (tmp0_iterator.g()) {
                  var element = tmp0_iterator.h();
                  this.u5r_1.h7(element.p()).h7('=').h7(replace(element.q(), '/', '%2F'));
                }
              } else {
                var tmp0_iterator_0 = this.q5r_1.o().f();
                while (tmp0_iterator_0.g()) {
                  var element_0 = tmp0_iterator_0.h();
                  this.u5r_1.h7('/').h7(replace(element_0.q(), '/', '%2F'));
                }
              }
              if (this.n5r_1.equals(Companion_getInstance().f21_1)) {
                var tmp_1 = this;
                tmp_1.v5r_1 = this.s5r_1.httpClientProp;
                var tmp_2 = this;
                var tmp1_apply = new HttpRequestBuilder();
                url(tmp1_apply, this.u5r_1.toString());
                tmp_2.w5r_1 = tmp1_apply;
                this.w5r_1.x3h_1 = Companion_getInstance().f21_1;
                this.xh_1 = 2;
                suspendResult = (new HttpStatement(this.w5r_1, this.v5r_1)).o4i(this);
                if (suspendResult === get_COROUTINE_SUSPENDED()) {
                  return suspendResult;
                }
                continue $sm;
              } else {
                if (this.n5r_1.equals(Companion_getInstance().b21_1)) {
                  var tmp_3 = this;
                  tmp_3.x5r_1 = this.s5r_1.httpClientProp;
                  var tmp_4 = this;
                  var tmp4_apply = new HttpRequestBuilder();
                  url(tmp4_apply, this.u5r_1.toString());
                  tmp_4.y5r_1 = tmp4_apply;
                  this.y5r_1.x3h_1 = Companion_getInstance().b21_1;
                  this.xh_1 = 1;
                  suspendResult = (new HttpStatement(this.y5r_1, this.x5r_1)).o4i(this);
                  if (suspendResult === get_COROUTINE_SUSPENDED()) {
                    return suspendResult;
                  }
                  continue $sm;
                } else {
                  this.xh_1 = 3;
                  continue $sm;
                }
              }
            } else {
              this.s5r_1.handleChangeBackdropIsOpenProp(false);
              var tmp_5 = get_logger_8();
              tmp_5.j4r(submitCryptoACForm$slambda$lambda_2(this.n5r_1));
              this.s5r_1.handleDisplayAlertProp(OutcomeCode_CODE_048_HTTP_METHOD_NOT_SUPPORTED_getInstance(), CryptoACAlertSeverity_ERROR_getInstance());
              this.xh_1 = 4;
              continue $sm;
            }

            break;
          case 1:
            var ARGUMENT = suspendResult;
            this.r5r_1(ARGUMENT, this.q5r_1);
            this.xh_1 = 3;
            continue $sm;
          case 2:
            var ARGUMENT_0 = suspendResult;
            this.r5r_1(ARGUMENT_0, this.q5r_1);
            this.xh_1 = 3;
            continue $sm;
          case 3:
            this.xh_1 = 4;
            continue $sm;
          case 4:
            this.yh_1 = 6;
            this.xh_1 = 7;
            continue $sm;
          case 5:
            this.yh_1 = 6;
            var tmp_6 = this.ai_1;
            if (tmp_6 instanceof Exception) {
              var e = this.ai_1;
              this.s5r_1.handleChangeBackdropIsOpenProp(false);
              var tmp_7 = get_logger_8();
              tmp_7.j4r(submitCryptoACForm$slambda$lambda_3(e));
              console.log(e);
              this.s5r_1.handleDisplayAlertProp(OutcomeCode_CODE_049_UNEXPECTED_getInstance(), CryptoACAlertSeverity_ERROR_getInstance());
              this.xh_1 = 7;
              continue $sm;
            } else {
              throw this.ai_1;
            }

            break;
          case 6:
            throw this.ai_1;
          case 7:
            this.yh_1 = 6;
            return Unit_getInstance();
        }
      } catch ($p) {
        var e_0 = $p;
        if (this.yh_1 === 6) {
          throw e_0;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e_0;
        }
      }
     while (true);
  };
  protoOf(submitCryptoACForm$slambda_1).g1e = function ($this$launch, completion) {
    var i = new submitCryptoACForm$slambda_1(this.n5r_1, this.o5r_1, this.p5r_1, this.q5r_1, this.r5r_1, this.s5r_1, completion);
    i.t5r_1 = $this$launch;
    return i;
  };
  function submitCryptoACForm$slambda_2($method, $endpoint, $query, $values, $callback, $props, resultContinuation) {
    var i = new submitCryptoACForm$slambda_1($method, $endpoint, $query, $values, $callback, $props, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.f1e($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function callbackShowOutcomeCode$slambda$lambda($status) {
    return function () {
      return 'Response status is ' + $status;
    };
  }
  function callbackShowOutcomeCode$slambda$lambda_0($status, $outcomeCode) {
    return function () {
      return 'Response status is ' + $status + ', outcome code is ' + $outcomeCode;
    };
  }
  function callbackShowOutcomeCode$slambda($response, $props, resultContinuation) {
    this.h5s_1 = $response;
    this.i5s_1 = $props;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(callbackShowOutcomeCode$slambda).f1e = function ($this$launch, $completion) {
    var tmp = this.g1e($this$launch, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  };
  protoOf(callbackShowOutcomeCode$slambda).si = function (p1, $completion) {
    return this.f1e((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(callbackShowOutcomeCode$slambda).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 3;
            this.k5s_1 = this.h5s_1.j3k();
            if (this.k5s_1.equals(Companion_getInstance_2().v21_1)) {
              var tmp_0 = get_logger_8();
              tmp_0.h4r(callbackShowOutcomeCode$slambda$lambda(this.k5s_1));
              this.i5s_1.handleDisplayAlertProp(OutcomeCode_CODE_000_SUCCESS_getInstance(), CryptoACAlertSeverity_SUCCESS_getInstance());
              this.xh_1 = 2;
              continue $sm;
            } else {
              var tmp_1 = this;
              tmp_1.l5s_1 = get_myJson();
              this.xh_1 = 1;
              suspendResult = bodyAsText(this.h5s_1, VOID, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            }

            break;
          case 1:
            var tmp3_decodeFromString = suspendResult;
            var tmp1_serializer = this.l5s_1.w2j();
            var tmp0_cast = serializer_0(tmp1_serializer, createKType(getKClass(OutcomeCode), arrayOf([]), false));
            var outcomeCode = this.l5s_1.v2j(isInterface(tmp0_cast, KSerializer) ? tmp0_cast : THROW_CCE(), tmp3_decodeFromString);
            var tmp_2 = get_logger_8();
            tmp_2.i4r(callbackShowOutcomeCode$slambda$lambda_0(this.k5s_1, outcomeCode));
            this.i5s_1.handleDisplayAlertProp(outcomeCode, CryptoACAlertSeverity_ERROR_getInstance());
            this.xh_1 = 2;
            continue $sm;
          case 2:
            return Unit_getInstance();
          case 3:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 3) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  protoOf(callbackShowOutcomeCode$slambda).g1e = function ($this$launch, completion) {
    var i = new callbackShowOutcomeCode$slambda(this.h5s_1, this.i5s_1, completion);
    i.j5s_1 = $this$launch;
    return i;
  };
  function callbackShowOutcomeCode$slambda_0($response, $props, resultContinuation) {
    var i = new callbackShowOutcomeCode$slambda($response, $props, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.f1e($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function callbackDownloadUserProfile$slambda$lambda($status) {
    return function () {
      return 'Response status is ' + $status;
    };
  }
  function callbackDownloadUserProfile$slambda$lambda_0($status, $outcomeCode) {
    return function () {
      return 'Response status is ' + $status + ', outcome code is ' + $outcomeCode;
    };
  }
  function callbackDownloadUserProfile$slambda($response, $values, $props, resultContinuation) {
    this.u5s_1 = $response;
    this.v5s_1 = $values;
    this.w5s_1 = $props;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(callbackDownloadUserProfile$slambda).f1e = function ($this$launch, $completion) {
    var tmp = this.g1e($this$launch, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  };
  protoOf(callbackDownloadUserProfile$slambda).si = function (p1, $completion) {
    return this.f1e((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(callbackDownloadUserProfile$slambda).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 4;
            this.y5s_1 = this.u5s_1.j3k();
            if (this.y5s_1.equals(Companion_getInstance_2().v21_1)) {
              var tmp_0 = get_logger_8();
              tmp_0.h4r(callbackDownloadUserProfile$slambda$lambda(this.y5s_1));
              this.xh_1 = 2;
              suspendResult = bodyAsText(this.u5s_1, VOID, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            } else {
              var tmp_1 = this;
              tmp_1.z5s_1 = get_myJson();
              this.xh_1 = 1;
              suspendResult = bodyAsText(this.u5s_1, VOID, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            }

            break;
          case 1:
            var tmp3_decodeFromString = suspendResult;
            var tmp1_serializer = this.z5s_1.w2j();
            var tmp0_cast = serializer_0(tmp1_serializer, createKType(getKClass(OutcomeCode), arrayOf([]), false));
            var outcomeCode = this.z5s_1.v2j(isInterface(tmp0_cast, KSerializer) ? tmp0_cast : THROW_CCE(), tmp3_decodeFromString);
            var tmp_2 = get_logger_8();
            tmp_2.i4r(callbackDownloadUserProfile$slambda$lambda_0(this.y5s_1, outcomeCode));
            this.w5s_1.handleDisplayAlertProp(outcomeCode, CryptoACAlertSeverity_ERROR_getInstance());
            this.xh_1 = 3;
            continue $sm;
          case 2:
            var text = suspendResult;
            var element = document.createElement('a');
            element.setAttribute('href', 'data:application/json;charset=utf-8,' + text);
            SERVER_getInstance();
            element.setAttribute('download', '' + this.v5s_1.y1('Username') + '.json');
            element.setAttribute('display', 'none');
            document.body.appendChild(element);
            ;
            element.click();
            document.body.removeChild(element);
            ;
            this.xh_1 = 3;
            continue $sm;
          case 3:
            return Unit_getInstance();
          case 4:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 4) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  protoOf(callbackDownloadUserProfile$slambda).g1e = function ($this$launch, completion) {
    var i = new callbackDownloadUserProfile$slambda(this.u5s_1, this.v5s_1, this.w5s_1, completion);
    i.x5s_1 = $this$launch;
    return i;
  };
  function callbackDownloadUserProfile$slambda_0($response, $values, $props, resultContinuation) {
    var i = new callbackDownloadUserProfile$slambda($response, $values, $props, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.f1e($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  function callbackSubscribeToTopic$slambda$lambda($status) {
    return function () {
      return 'Response status is ' + $status;
    };
  }
  function callbackSubscribeToTopic$slambda$lambda_0($status, $outcomeCode) {
    return function () {
      return 'Response status is ' + $status + ', outcome code is ' + $outcomeCode;
    };
  }
  function callbackSubscribeToTopic$slambda($response, $props, $values, resultContinuation) {
    this.i5t_1 = $response;
    this.j5t_1 = $props;
    this.k5t_1 = $values;
    CoroutineImpl.call(this, resultContinuation);
  }
  protoOf(callbackSubscribeToTopic$slambda).f1e = function ($this$launch, $completion) {
    var tmp = this.g1e($this$launch, $completion);
    tmp.zh_1 = Unit_getInstance();
    tmp.ai_1 = null;
    return tmp.gi();
  };
  protoOf(callbackSubscribeToTopic$slambda).si = function (p1, $completion) {
    return this.f1e((!(p1 == null) ? isInterface(p1, CoroutineScope) : false) ? p1 : THROW_CCE(), $completion);
  };
  protoOf(callbackSubscribeToTopic$slambda).gi = function () {
    var suspendResult = this.zh_1;
    $sm: do
      try {
        var tmp = this.xh_1;
        switch (tmp) {
          case 0:
            this.yh_1 = 3;
            this.m5t_1 = this.i5t_1.j3k();
            if (this.m5t_1.equals(Companion_getInstance_2().v21_1)) {
              var tmp_0 = get_logger_8();
              tmp_0.h4r(callbackSubscribeToTopic$slambda$lambda(this.m5t_1));
              this.j5t_1.handleDisplayAlertProp(OutcomeCode_CODE_000_SUCCESS_getInstance(), CryptoACAlertSeverity_SUCCESS_getInstance());
              var tmp_1 = this.j5t_1.handleAddTableInContentProp;
              SERVER_getInstance();
              tmp_1(ensureNotNull(this.k5t_1.y1('Resource_Name')));
              this.xh_1 = 2;
              continue $sm;
            } else {
              var tmp_2 = this;
              tmp_2.n5t_1 = get_myJson();
              this.xh_1 = 1;
              suspendResult = bodyAsText(this.i5t_1, VOID, this);
              if (suspendResult === get_COROUTINE_SUSPENDED()) {
                return suspendResult;
              }
              continue $sm;
            }

            break;
          case 1:
            var tmp3_decodeFromString = suspendResult;
            var tmp1_serializer = this.n5t_1.w2j();
            var tmp0_cast = serializer_0(tmp1_serializer, createKType(getKClass(OutcomeCode), arrayOf([]), false));
            var outcomeCode = this.n5t_1.v2j(isInterface(tmp0_cast, KSerializer) ? tmp0_cast : THROW_CCE(), tmp3_decodeFromString);
            var tmp_3 = get_logger_8();
            tmp_3.i4r(callbackSubscribeToTopic$slambda$lambda_0(this.m5t_1, outcomeCode));
            this.j5t_1.handleDisplayAlertProp(outcomeCode, CryptoACAlertSeverity_ERROR_getInstance());
            this.xh_1 = 2;
            continue $sm;
          case 2:
            return Unit_getInstance();
          case 3:
            throw this.ai_1;
        }
      } catch ($p) {
        var e = $p;
        if (this.yh_1 === 3) {
          throw e;
        } else {
          this.xh_1 = this.yh_1;
          this.ai_1 = e;
        }
      }
     while (true);
  };
  protoOf(callbackSubscribeToTopic$slambda).g1e = function ($this$launch, completion) {
    var i = new callbackSubscribeToTopic$slambda(this.i5t_1, this.j5t_1, this.k5t_1, completion);
    i.l5t_1 = $this$launch;
    return i;
  };
  function callbackSubscribeToTopic$slambda_0($response, $props, $values, resultContinuation) {
    var i = new callbackSubscribeToTopic$slambda($response, $props, $values, resultContinuation);
    var l = function ($this$launch, $completion) {
      return i.f1e($this$launch, $completion);
    };
    l.$arity = 1;
    return l;
  }
  var properties_initialized_Actions_kt_es8j1v;
  function _init_properties_Actions_kt__coato5() {
    if (properties_initialized_Actions_kt_es8j1v) {
    } else {
      properties_initialized_Actions_kt_es8j1v = true;
      var tmp = KotlinLogging_getInstance();
      logger_10 = tmp.b4r(logger$lambda_10);
      Actions = FC(Actions$lambda);
    }
  }
  function get_Configuration() {
    _init_properties_Configuration_kt__48zwcc();
    return Configuration;
  }
  var Configuration;
  function Configuration$lambda($this$FC, props) {
    _init_properties_Configuration_kt__48zwcc();
    var tmp$ret$3;
    // Inline function 'react.dom.html.ReactHTML.div' call
    var tmp0__get_div__2k2o9m = ReactHTML_getInstance();
    var tmp$ret$2;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = 'div';
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    var tmp = tmp$ret$3;
    $this$FC.x4r(tmp, Configuration$lambda$lambda(props));
    return Unit_getInstance();
  }
  function Configuration$lambda$lambda$lambda($this$invoke) {
    _init_properties_Configuration_kt__48zwcc();
    // Inline function 'emotion.react.css' call
    var tmp1_css = $this$invoke;
    var tmp$ret$6;
    // Inline function 'emotion.css.ClassName' call
    var tmp$ret$5;
    // Inline function 'js.core.jso' call
    var tmp$ret$4;
    // Inline function 'kotlin.apply' call
    var tmp$ret$0;
    // Inline function 'js.core.jso' call
    tmp$ret$0 = {};
    var tmp0_apply = tmp$ret$0;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'eu.fbk.st.cryptoac.view.sidebar.Configuration.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
    tmp0_apply.textAlign = (/*union*/{center: 'center', end: 'end', justify: 'justify', left: 'left', matchParent: 'match-parent', right: 'right', start: 'start'}/*union*/).center;
    var tmp$ret$3;
    // Inline function 'csstype.px' call
    var tmp$ret$2;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp0_unsafeCast = '50px';
    var tmp$ret$1;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$1 = tmp0_unsafeCast;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    tmp0_apply.marginBottom = tmp$ret$3;
    tmp$ret$4 = tmp0_apply;
    tmp$ret$5 = tmp$ret$4;
    tmp$ret$6 = css(tmp$ret$5);
    tmp1_css.className = tmp$ret$6;
    $this$invoke.w4r('Configure TradeOffBoard');
    return Unit_getInstance();
  }
  function Configuration$lambda$lambda$lambda$lambda$lambda$lambda$lambda($props) {
    return function (it) {
      $props.handleChangeScenarioProp(valueOf_5(it));
      return Unit_getInstance();
    };
  }
  function Configuration$lambda$lambda$lambda$lambda$lambda$lambda($props) {
    return function ($this$invoke) {
      $this$invoke.nameProp = 'scenario';
      $this$invoke.idProp = 'scenario';
      $this$invoke.labelProp = 'Scenario';
      $this$invoke.labelIdProp = 'scenario-label';
      $this$invoke.autoWidthProp = true;
      $this$invoke.selectStyleProp = JSON.parse('{\n                        "width": "100%"\n                    }');
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp1_map = values_10();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$_0(tmp1_map.length);
      var indexedObject = tmp1_map;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var item = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        // Inline function 'eu.fbk.st.cryptoac.view.sidebar.Configuration.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
        tmp$ret$0 = item.toString();
        tmp0_mapTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo;
      tmp$ret$2 = tmp$ret$1;
      $this$invoke.optionsProp = tmp$ret$2;
      $this$invoke.defaultValueProp = $props.currentScenarioProp.toString();
      $this$invoke.onChangeProp = Configuration$lambda$lambda$lambda$lambda$lambda$lambda$lambda($props);
      return Unit_getInstance();
    };
  }
  function Configuration$lambda$lambda$lambda$lambda$lambda($props) {
    return function ($this$invoke) {
      $this$invoke.item = true;
      $this$invoke.xs = 12;
      $this$invoke.xl = 12;
      var tmp = get_CryptoACSelect();
      $this$invoke.x4r(tmp, Configuration$lambda$lambda$lambda$lambda$lambda$lambda($props));
      return Unit_getInstance();
    };
  }
  function Configuration$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($props) {
    return function (it) {
      $props.handleChangeAlgorithmProp(valueOf_6(it));
      return Unit_getInstance();
    };
  }
  function Configuration$lambda$lambda$lambda$lambda$lambda$lambda_0($props) {
    return function ($this$invoke) {
      $this$invoke.nameProp = 'algorithm';
      $this$invoke.idProp = 'algorithm';
      $this$invoke.labelProp = 'Algorithm';
      $this$invoke.labelIdProp = 'algorithm-label';
      $this$invoke.autoWidthProp = true;
      $this$invoke.selectStyleProp = JSON.parse('{\n                        "width": "100%"\n                    }');
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp1_map = values_11();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$_0(tmp1_map.length);
      var indexedObject = tmp1_map;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var item = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        // Inline function 'eu.fbk.st.cryptoac.view.sidebar.Configuration.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
        tmp$ret$0 = item.toString();
        tmp0_mapTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo;
      tmp$ret$2 = tmp$ret$1;
      $this$invoke.optionsProp = tmp$ret$2;
      $this$invoke.defaultValueProp = $props.currentAlgorithmProp.toString();
      $this$invoke.onChangeProp = Configuration$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($props);
      return Unit_getInstance();
    };
  }
  function Configuration$lambda$lambda$lambda$lambda$lambda_0($props) {
    return function ($this$invoke) {
      $this$invoke.item = true;
      $this$invoke.xs = 12;
      $this$invoke.xl = 12;
      var tmp = get_CryptoACSelect();
      $this$invoke.x4r(tmp, Configuration$lambda$lambda$lambda$lambda$lambda$lambda_0($props));
      return Unit_getInstance();
    };
  }
  function Configuration$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($props) {
    return function (it) {
      $props.handleChangeMetricProp(valueOf_7(it));
      return Unit_getInstance();
    };
  }
  function Configuration$lambda$lambda$lambda$lambda$lambda$lambda_1($props) {
    return function ($this$invoke) {
      $this$invoke.nameProp = 'metric';
      $this$invoke.idProp = 'metric';
      $this$invoke.labelProp = 'Metric';
      $this$invoke.labelIdProp = 'metric-label';
      $this$invoke.autoWidthProp = true;
      $this$invoke.selectStyleProp = JSON.parse('{\n                        "width": "100%"\n                    }');
      var tmp$ret$2;
      // Inline function 'kotlin.collections.map' call
      var tmp1_map = values_12();
      var tmp$ret$1;
      // Inline function 'kotlin.collections.mapTo' call
      var tmp0_mapTo = ArrayList_init_$Create$_0(tmp1_map.length);
      var indexedObject = tmp1_map;
      var inductionVariable = 0;
      var last = indexedObject.length;
      while (inductionVariable < last) {
        var item = indexedObject[inductionVariable];
        inductionVariable = inductionVariable + 1 | 0;
        var tmp$ret$0;
        // Inline function 'eu.fbk.st.cryptoac.view.sidebar.Configuration.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
        tmp$ret$0 = item.toString();
        tmp0_mapTo.a(tmp$ret$0);
      }
      tmp$ret$1 = tmp0_mapTo;
      tmp$ret$2 = tmp$ret$1;
      $this$invoke.optionsProp = tmp$ret$2;
      $this$invoke.defaultValueProp = $props.currentMetricProp.toString();
      $this$invoke.onChangeProp = Configuration$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($props);
      return Unit_getInstance();
    };
  }
  function Configuration$lambda$lambda$lambda$lambda$lambda_1($props) {
    return function ($this$invoke) {
      $this$invoke.item = true;
      $this$invoke.xs = 12;
      $this$invoke.xl = 12;
      var tmp = get_CryptoACSelect();
      $this$invoke.x4r(tmp, Configuration$lambda$lambda$lambda$lambda$lambda$lambda_1($props));
      return Unit_getInstance();
    };
  }
  function Configuration$lambda$lambda$lambda$lambda($props) {
    return function ($this$invoke) {
      $this$invoke.container = true;
      $this$invoke.spacing = 6;
      var tmp = Grid;
      $this$invoke.x4r(tmp, Configuration$lambda$lambda$lambda$lambda$lambda($props));
      var tmp_0 = Grid;
      $this$invoke.x4r(tmp_0, Configuration$lambda$lambda$lambda$lambda$lambda_0($props));
      var tmp_1 = Grid;
      $this$invoke.x4r(tmp_1, Configuration$lambda$lambda$lambda$lambda$lambda_1($props));
      return Unit_getInstance();
    };
  }
  function Configuration$lambda$lambda$lambda_0($props) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$12;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$11;
      // Inline function 'js.core.jso' call
      var tmp$ret$10;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.sidebar.Configuration.<anonymous>.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$9;
      // Inline function 'csstype.Padding' call
      var tmp$ret$3;
      // Inline function 'csstype.px' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp0_unsafeCast = '20px';
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = tmp0_unsafeCast;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      var tmp3_Padding = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.px' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp1_unsafeCast = '20px';
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = tmp1_unsafeCast;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      var tmp4_Padding = tmp$ret$6;
      var tmp$ret$8;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp2_unsafeCast = '' + tmp3_Padding + ' ' + tmp4_Padding;
      var tmp$ret$7;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$7 = tmp2_unsafeCast;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = tmp$ret$8;
      tmp0_apply.padding = tmp$ret$9;
      tmp$ret$10 = tmp0_apply;
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = css(tmp$ret$11);
      tmp1_css.className = tmp$ret$12;
      var tmp = Grid;
      $this$invoke.x4r(tmp, Configuration$lambda$lambda$lambda$lambda($props));
      return Unit_getInstance();
    };
  }
  function Configuration$lambda$lambda($props) {
    return function ($this$invoke) {
      var tmp1_css = $this$invoke;
      var tmp$ret$9;
      // Inline function 'emotion.css.ClassName' call
      var tmp$ret$8;
      // Inline function 'js.core.jso' call
      var tmp$ret$7;
      // Inline function 'kotlin.apply' call
      var tmp$ret$0;
      // Inline function 'js.core.jso' call
      tmp$ret$0 = {};
      var tmp0_apply = tmp$ret$0;
      // Inline function 'kotlin.contracts.contract' call
      // Inline function 'eu.fbk.st.cryptoac.view.sidebar.Configuration.<anonymous>.<anonymous>.<anonymous>' call
      var tmp$ret$3;
      // Inline function 'csstype.number' call
      var tmp$ret$2;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$1;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$1 = 1.0;
      tmp$ret$2 = tmp$ret$1;
      tmp$ret$3 = tmp$ret$2;
      tmp0_apply.flex = tmp$ret$3;
      var tmp$ret$6;
      // Inline function 'csstype.number' call
      var tmp$ret$5;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$4;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$4 = 1.0;
      tmp$ret$5 = tmp$ret$4;
      tmp$ret$6 = tmp$ret$5;
      tmp0_apply.flexGrow = tmp$ret$6;
      tmp$ret$7 = tmp0_apply;
      tmp$ret$8 = tmp$ret$7;
      tmp$ret$9 = css(tmp$ret$8);
      tmp1_css.className = tmp$ret$9;
      var tmp$ret$13;
      // Inline function 'react.dom.html.ReactHTML.p' call
      var tmp2__get_p__qh4lul = ReactHTML_getInstance();
      var tmp$ret$12;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$11;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$10;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$10 = 'p';
      tmp$ret$11 = tmp$ret$10;
      tmp$ret$12 = tmp$ret$11;
      tmp$ret$13 = tmp$ret$12;
      var tmp = tmp$ret$13;
      $this$invoke.x4r(tmp, Configuration$lambda$lambda$lambda);
      var tmp$ret$17;
      // Inline function 'react.dom.html.ReactHTML.div' call
      var tmp3__get_div__fkdzdv = ReactHTML_getInstance();
      var tmp$ret$16;
      // Inline function 'react.IntrinsicType' call
      var tmp$ret$15;
      // Inline function 'kotlin.js.unsafeCast' call
      var tmp$ret$14;
      // Inline function 'kotlin.js.asDynamic' call
      tmp$ret$14 = 'div';
      tmp$ret$15 = tmp$ret$14;
      tmp$ret$16 = tmp$ret$15;
      tmp$ret$17 = tmp$ret$16;
      var tmp_0 = tmp$ret$17;
      $this$invoke.x4r(tmp_0, Configuration$lambda$lambda$lambda_0($props));
      return Unit_getInstance();
    };
  }
  var properties_initialized_Configuration_kt_gex7mu;
  function _init_properties_Configuration_kt__48zwcc() {
    if (properties_initialized_Configuration_kt_gex7mu) {
    } else {
      properties_initialized_Configuration_kt_gex7mu = true;
      Configuration = FC(Configuration$lambda);
    }
  }
  function get_Empty() {
    _init_properties_Empty_kt__8baa8r();
    return Empty;
  }
  var Empty;
  function Empty$lambda($this$FC, it) {
    _init_properties_Empty_kt__8baa8r();
    var tmp$ret$3;
    // Inline function 'react.dom.html.ReactHTML.div' call
    var tmp0__get_div__2k2o9m = ReactHTML_getInstance();
    var tmp$ret$2;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = 'div';
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    var tmp = tmp$ret$3;
    $this$FC.x4r(tmp, Empty$lambda$lambda);
    return Unit_getInstance();
  }
  function Empty$lambda$lambda($this$invoke) {
    _init_properties_Empty_kt__8baa8r();
    // Inline function 'emotion.react.css' call
    var tmp1_css = $this$invoke;
    var tmp$ret$9;
    // Inline function 'emotion.css.ClassName' call
    var tmp$ret$8;
    // Inline function 'js.core.jso' call
    var tmp$ret$7;
    // Inline function 'kotlin.apply' call
    var tmp$ret$0;
    // Inline function 'js.core.jso' call
    tmp$ret$0 = {};
    var tmp0_apply = tmp$ret$0;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'eu.fbk.st.cryptoac.view.sidebar.Empty.<anonymous>.<anonymous>.<anonymous>' call
    var tmp$ret$3;
    // Inline function 'csstype.number' call
    var tmp$ret$2;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$1 = 1.0;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    tmp0_apply.flex = tmp$ret$3;
    var tmp$ret$6;
    // Inline function 'csstype.number' call
    var tmp$ret$5;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$4;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$4 = 1.0;
    tmp$ret$5 = tmp$ret$4;
    tmp$ret$6 = tmp$ret$5;
    tmp0_apply.flexGrow = tmp$ret$6;
    tmp$ret$7 = tmp0_apply;
    tmp$ret$8 = tmp$ret$7;
    tmp$ret$9 = css(tmp$ret$8);
    tmp1_css.className = tmp$ret$9;
    return Unit_getInstance();
  }
  var properties_initialized_Empty_kt_tdnf6l;
  function _init_properties_Empty_kt__8baa8r() {
    if (properties_initialized_Empty_kt_tdnf6l) {
    } else {
      properties_initialized_Empty_kt_tdnf6l = true;
      Empty = FC(Empty$lambda);
    }
  }
  function get_Evaluation() {
    _init_properties_Evaluation_kt__eq9nh8();
    return Evaluation;
  }
  var Evaluation;
  function Evaluation$lambda($this$FC, it) {
    _init_properties_Evaluation_kt__eq9nh8();
    var tmp$ret$3;
    // Inline function 'react.dom.html.ReactHTML.div' call
    var tmp0__get_div__2k2o9m = ReactHTML_getInstance();
    var tmp$ret$2;
    // Inline function 'react.IntrinsicType' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$0;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$0 = 'div';
    tmp$ret$1 = tmp$ret$0;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    var tmp = tmp$ret$3;
    $this$FC.x4r(tmp, Evaluation$lambda$lambda);
    return Unit_getInstance();
  }
  function Evaluation$lambda$lambda($this$invoke) {
    _init_properties_Evaluation_kt__eq9nh8();
    // Inline function 'emotion.react.css' call
    var tmp1_css = $this$invoke;
    var tmp$ret$9;
    // Inline function 'emotion.css.ClassName' call
    var tmp$ret$8;
    // Inline function 'js.core.jso' call
    var tmp$ret$7;
    // Inline function 'kotlin.apply' call
    var tmp$ret$0;
    // Inline function 'js.core.jso' call
    tmp$ret$0 = {};
    var tmp0_apply = tmp$ret$0;
    // Inline function 'kotlin.contracts.contract' call
    // Inline function 'eu.fbk.st.cryptoac.view.sidebar.Evaluation.<anonymous>.<anonymous>.<anonymous>' call
    var tmp$ret$3;
    // Inline function 'csstype.number' call
    var tmp$ret$2;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$1;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$1 = 1.0;
    tmp$ret$2 = tmp$ret$1;
    tmp$ret$3 = tmp$ret$2;
    tmp0_apply.flex = tmp$ret$3;
    var tmp$ret$6;
    // Inline function 'csstype.number' call
    var tmp$ret$5;
    // Inline function 'kotlin.js.unsafeCast' call
    var tmp$ret$4;
    // Inline function 'kotlin.js.asDynamic' call
    tmp$ret$4 = 1.0;
    tmp$ret$5 = tmp$ret$4;
    tmp$ret$6 = tmp$ret$5;
    tmp0_apply.flexGrow = tmp$ret$6;
    tmp$ret$7 = tmp0_apply;
    tmp$ret$8 = tmp$ret$7;
    tmp$ret$9 = css(tmp$ret$8);
    tmp1_css.className = tmp$ret$9;
    return Unit_getInstance();
  }
  var properties_initialized_Evaluation_kt_s68m2m;
  function _init_properties_Evaluation_kt__eq9nh8() {
    if (properties_initialized_Evaluation_kt_s68m2m) {
    } else {
      properties_initialized_Evaluation_kt_s68m2m = true;
      Evaluation = FC(Evaluation$lambda);
    }
  }
  //region block: post-declaration
  protoOf($serializer).x2t = typeParametersSerializers;
  protoOf($serializer_0).x2t = typeParametersSerializers;
  protoOf($serializer_1).x2t = typeParametersSerializers;
  protoOf($serializer_2).x2t = typeParametersSerializers;
  protoOf($serializer_3).x2t = typeParametersSerializers;
  protoOf($serializer_4).x2t = typeParametersSerializers;
  protoOf($serializer_5).x2t = typeParametersSerializers;
  protoOf($serializer_6).x2t = typeParametersSerializers;
  protoOf($serializer_7).x2t = typeParametersSerializers;
  protoOf($serializer_8).x2t = typeParametersSerializers;
  protoOf($serializer_9).x2t = typeParametersSerializers;
  protoOf($serializer_10).x2t = typeParametersSerializers;
  protoOf($serializer_11).x2t = typeParametersSerializers;
  protoOf($serializer_12).x2t = typeParametersSerializers;
  protoOf($serializer_13).x2t = typeParametersSerializers;
  protoOf($serializer_14).x2t = typeParametersSerializers;
  protoOf($serializer_15).x2t = typeParametersSerializers;
  protoOf($serializer_16).x2t = typeParametersSerializers;
  //endregion
  //region block: init
  divider = '4%&\xA3$5';
  //endregion
  main();
  return _;
}));

//# sourceMappingURL=CryptoAC.js.map
