{"version":3,"file":"ktor-ktor-serialization-kotlinx-json-js-legacy.js","sources":["../../../../../ktor-shared/ktor-serialization/ktor-serialization-kotlinx/ktor-serialization-kotlinx-json/common/src/io/ktor/serialization/kotlinx/json/JsonSupport.kt"],"sourcesContent":["/*\n * Copyright 2014-2021 JetBrains s.r.o and contributors. Use of this source code is governed by the Apache 2.0 license.\n */\n\npackage io.ktor.serialization.kotlinx.json\n\nimport io.ktor.http.*\nimport io.ktor.serialization.*\nimport io.ktor.serialization.kotlinx.*\nimport kotlinx.serialization.*\nimport kotlinx.serialization.json.*\nimport kotlinx.serialization.modules.*\nimport kotlin.native.concurrent.*\n\n/**\n * The default JSON configuration used in [KotlinxSerializationConverter]. The settings are:\n * - defaults are serialized\n * - pretty printing is disabled\n * - array polymorphism is disabled\n * - keys and values are quoted, non-quoted are not allowed\n *\n * See [Json] for more details.\n */\n\npublic val DefaultJson: Json = Json {\n    encodeDefaults = true\n    isLenient = true\n    allowSpecialFloatingPointValues = true\n    allowStructuredMapKeys = true\n    prettyPrint = false\n    useArrayPolymorphism = false\n}\n\n/**\n * Registers the `application/json` (or another specified [contentType]) content type\n * to the [ContentNegotiation] plugin using kotlinx.serialization.\n *\n * The example below shows how to register the JSON serializer with\n * customized serialization settings provided by JsonBuilder:\n * ```kotlin\n * install(ContentNegotiation) {\n *     json(Json {\n *         prettyPrint = true\n *         isLenient = true\n *     })\n * }\n * ```\n * You can learn more from [Content negotiation and serialization](https://ktor.io/docs/serialization.html).\n *\n * @param json a format instance (optional)\n * @param contentType to register with, `application/json` by default\n */\n@OptIn(ExperimentalSerializationApi::class)\npublic fun Configuration.json(\n    json: Json = DefaultJson,\n    contentType: ContentType = ContentType.Application.Json\n) {\n    serialization(contentType, json)\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;EAwBoC,uC;IAChC,2BAAiB,I;IACjB,sBAAY,I;IACZ,4CAAkC,I;IAClC,mCAAyB,I;IACzB,wBAAc,K;IACd,iCAAuB,K;IAC3B,W;EAAA,C;;EAEA,4C;IAqBI,oB;MAAA,OAAa,W;IACb,2B;MAAA,cAAmD,4B;IAEnD,yBAAc,WAAd,EAA2B,IAA3B,C;EACJ,C;;;;;;;;;;;;gBAlC+B,aAAK,kBAAL,C;;;;"}