openapi: "3.0.0"
info:
  version: 0.1.0
  title: "CryptoAC"
  description: "[CryptoAC](https://github.com/stfbk/CryptoAC) is an open-source tool for the E2E protection of sensitive data through cryptographic enforcement of access control policies. CryptoAC is written in (multiplatform) Kotlin and comes with an easy microservice-based architecture including an optimisation step to maximize the performance and security of the deployment. Moreover, CryptoAC is highly modular, can easily be extended to fit the needs of new scenarios and its APIs allow for straightforward integration with other services. In the description of the APIs, the \"Admin\" tag denotes that the admin only can invoke the API. The \"CAC\" tag indicates that the API is related to the management of the cryptographic access control policy (e.g., read file, assign permission), while the \"Profile\" tag indicates that the API is related to the management of users' profiles (e.g., storage solution configuration, cryptographic keys). Mandatory parameters are rendered as path parameters, while optional parameters are rendered as query parameters."
  termsOfService: http://swagger.io/terms/
  contact:
    name: FBK - Security and Trust
    email: sberlato@fbk.eu
    url: https://st.fbk.eu/
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost:8443/v1
paths:

  
  /profile/{CORE}/{Username}:
    get:
      tags: ["Profile"]
      summary: "Get the profile of the specified user for the given core."
      description: "Get the profile of the specified user for the given core. The admin can get the profile of all users, while a user can only get her own profile. Possible outcome codes are: CODE_000_SUCCESS, CODE_019_MISSING_PARAMETERS, CODE_020_INVALID_PARAMETER, CODE_035_FORBIDDEN, CODE_036_UNAUTHORIZED, CODE_038_PROFILE_NOT_FOUND, CODE_047_UNEXPECTED."
      operationId: getUserProfile
      security:
        - cookieAuth: []
        - basicAuth: []
      parameters:
        - name: CORE
          in: path
          description: "The core."
          required: true
          schema:
            type: string
        - name: Username
          in: path
          description: "The name of the user to get the profile of."
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "A JSON object containing the requested user's profile. The schema of the JSON depends on the configuration gave by the user."
          content:
            application/json:
              example: '
              {
               "type":"eu.fbk.st.cryptoac.core.CoreParametersMQTT",
               "coreType":"RBAC_MQTT",
               "cryptoType":"SODIUM",
               "versionNumber":1,
               "user":{
                  "name":"admin",
                  "isAdmin":true
               },
               "mmInterfaceParameters":{
                  "type":"eu.fbk.st.cryptoac.implementation.mm.MMInterfaceRedisParameters",
                  "mmType":"REDIS",
                  "username":"admin",
                  "password":"password",
                  "port":6379,
                  "url":"10.1.0.5"
               },
               "dmInterfaceParameters":{
                  "type":"eu.fbk.st.cryptoac.implementation.dm.DMInterfaceMosquittoParameters",
                  "dmType":"MOSQUITTO",
                  "username":"admin",
                  "password":[
                     112,
                     97,
                     115,
                     115,
                     119,
                     111,
                     114,
                     100
                  ],
                  "port":1883,
                  "url":"10.1.0.8",
                  "tls":false
               }
            }
            '
        '401':
          description: "Unauthorized."
          content:
            text/plain:
              examples:
                CODE_036_UNAUTHORIZED:
                  summary: "The user is not logged in."
                  value: "CODE_036_UNAUTHORIZED"
        '403':
          description: "Forbidden."
          content:
            text/plain:
              examples:
                CODE_035_FORBIDDEN:
                  summary: "A not-admin user cannot invoke this API."
                  value: "CODE_035_FORBIDDEN"
        '404':
          description: "Not found."
          content:
            text/plain:
              examples:
                CODE_038_PROFILE_NOT_FOUND:
                  summary: "The profile of the logged user or the requested profile was not found in this instance of CryptoAC."
                  value: "CODE_038_PROFILE_NOT_FOUND"
        '422':
          description: "Unprocessable Entity."
          content:
            text/plain:
              examples:
                CODE_019_MISSING_PARAMETERS:
                  summary: "Missing a mandatory parameter."
                  value: "CODE_019_MISSING_PARAMETERS"
                CODE_020_INVALID_PARAMETER:
                  summary: "Supplied a wrong parameter."
                  value: "CODE_020_INVALID_PARAMETER"
        '500':
          description: "Internal Server Error."
          content:
            text/plain:
              examples:
                outcomeCode:
                  summary: "An outcome code describing the error."
                  value: "CODE_047_UNEXPECTED"
    delete:
      tags: ["Profile"]
      summary: "Delete the profile of the specified user for the given core, if present in this CryptoAC instance."
      description: "Delete the profile of the specified user for the given core, if present in this CryptoAC instance. The admin can delete the profile of all users, while a user can only delete her own profile. This API does not delete the user from the access control policy. Possible outcome codes are: CODE_000_SUCCESS, CODE_019_MISSING_PARAMETERS, CODE_020_INVALID_PARAMETER, CODE_035_FORBIDDEN, CODE_036_UNAUTHORIZED, CODE_038_PROFILE_NOT_FOUND, CODE_047_UNEXPECTED."
      operationId: deleteUserProfile
      security:
        - cookieAuth: []
        - basicAuth: []
      parameters:
        - name: CORE
          in: path
          description: "The core."
          required: true
          schema:
            type: string
        - name: Username
          in: path
          description: "The name of the user to delete the profile of."
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Success."
          content:
            text/plain:
              examples:
                CODE_000_SUCCESS:
                  summary: "Success."
                  value: "CODE_000_SUCCESS"
        '401':
          description: "Unauthorized."
          content:
            text/plain:
              examples:
                CODE_036_UNAUTHORIZED:
                  summary: "The user is not logged in."
                  value: "CODE_036_UNAUTHORIZED"
        '403':
          description: "Forbidden."
          content:
            text/plain:
              examples:
                CODE_035_FORBIDDEN:
                  summary: "A not-admin user cannot invoke this API."
                  value: "CODE_035_FORBIDDEN"
        '404':
          description: "Not found."
          content:
            text/plain:
              examples:
                CODE_038_PROFILE_NOT_FOUND:
                  summary: "The profile of the logged user or the profile to delete was not found in this instance of CryptoAC."
                  value: "CODE_038_PROFILE_NOT_FOUND"
        '422':
          description: "Unprocessable Entity."
          content:
            text/plain:
              examples:
                CODE_019_MISSING_PARAMETERS:
                  summary: "Missing a mandatory parameter."
                  value: "CODE_019_MISSING_PARAMETERS"
                CODE_020_INVALID_PARAMETER:
                  summary: "Supplied a wrong parameter."
                  value: "CODE_020_INVALID_PARAMETER"
        '500':
          description: "Internal Server Error."
          content:
            text/plain:
              examples:
                outcomeCode:
                  summary: "An outcome code describing the error."
                  value: "CODE_047_UNEXPECTED"
  
  /profile/{CORE}:
    post:
      tags: ["Profile"]
      summary: "Create the profile of a user for the given core."
      description: "Create the profile of a user for the given core. The admin can create the profile for other users, while a user can only create her own profile. Note that is it mandatory to provide all the needed parameters, except for the cryptographic keys which, if not given, are created within CryptoAC. Possible outcome codes are: CODE_000_SUCCESS, CODE_002_ROLE_ALREADY_EXISTS, CODE_004_USER_NOT_FOUND, CODE_010_ROLETUPLE_ALREADY_EXISTS, CODE_013_USER_WAS_DELETED, CODE_014_ROLE_WAS_DELETED, CODE_018_INTERFACE_CONFIGURATION_PARAMETERS, CODE_019_MISSING_PARAMETERS, CODE_020_INVALID_PARAMETER, CODE_028_OPA_POLICY_CREATION, CODE_030_OPA_DOCUMENT_DOWNLOAD, CODE_031_LOCK_CALLED_IN_INCONSISTENT_STATUS, CODE_034_ADMIN_ALREADY_INITIALIZED, CODE_035_FORBIDDEN, CODE_036_UNAUTHORIZED, CODE_038_PROFILE_NOT_FOUND, CODE_042_RM_CONNECTION_TIMEOUT, CODE_043_DM_CONNECTION_TIMEOUT, CODE_044_MM_CONNECTION_TIMEOUT, CODE_047_UNEXPECTED, CODE_060_ADMIN_NAME, CODE_061_USER_ALREADY_INITIALIZED."
      operationId: createUserProfile
      security:
        - cookieAuth: []
        - basicAuth: []
      parameters:
        - name: CORE
          in: path
          description: "The core."
          required: true
          schema:
            type: string
      requestBody:
        required: true
        description: "A JSON object containing the user's profile. The schema of the JSON depends on the configuration given by the user."
        content:
          application/json:
            example: '
            {
             "type":"eu.fbk.st.cryptoac.core.CoreParametersMQTT",
             "coreType":"RBAC_MQTT",
             "cryptoType":"SODIUM",
             "versionNumber":1,
             "user":{
                "name":"admin",
                "isAdmin":true
             },
             "mmInterfaceParameters":{
                "type":"eu.fbk.st.cryptoac.implementation.mm.MMInterfaceRedisParameters",
                "mmType":"REDIS",
                "username":"admin",
                "password":"password",
                "port":6379,
                "url":"10.1.0.5"
             },
             "dmInterfaceParameters":{
                "type":"eu.fbk.st.cryptoac.implementation.dm.DMInterfaceMosquittoParameters",
                "dmType":"MOSQUITTO",
                "username":"admin",
                "password":[
                   112,
                   97,
                   115,
                   115,
                   119,
                   111,
                   114,
                   100
                ],
                "port":1883,
                "url":"10.1.0.8",
                "tls":false
             }
          }
          '
      responses:
        '200':
          description: "Success."
          content:
            text/plain:
              examples:
                CODE_000_SUCCESS:
                  summary: "Success."
                  value: "CODE_000_SUCCESS"
        '401':
          description: "Unauthorized."
          content:
            text/plain:
              examples:
                CODE_036_UNAUTHORIZED:
                  summary: "The user is not logged in."
                  value: "CODE_036_UNAUTHORIZED"
        '403':
          description: "Forbidden."
          content:
            text/plain:
              examples:
                CODE_035_FORBIDDEN:
                  summary: "A not-admin user cannot invoke this API."
                  value: "CODE_035_FORBIDDEN"
        '404':
          description: "Not found."
          content:
            text/plain:
              examples:
                CODE_038_PROFILE_NOT_FOUND:
                  summary: "The profile of the logged user was not found in this instance of CryptoAC."
                  value: "CODE_038_PROFILE_NOT_FOUND"
        '422':
          description: "Unprocessable Entity."
          content:
            text/plain:
              examples:
                CODE_018_INTERFACE_CONFIGURATION_PARAMETERS:
                  summary: "Semantically incorrect parameters."
                  value: "CODE_018_INTERFACE_CONFIGURATION_PARAMETERS"
                CODE_019_MISSING_PARAMETERS:
                  summary: "Missing a mandatory parameter."
                  value: "CODE_019_MISSING_PARAMETERS"
                CODE_020_INVALID_PARAMETER:
                  summary: "Supplied a wrong parameter."
                  value: "CODE_020_INVALID_PARAMETER"
        '500':
          description: "Internal Server Error."
          content:
            text/plain:
              examples:
                outcomeCode:
                  summary: "An outcome code describing the error."
                  value: "CODE_047_UNEXPECTED"
    patch:
      tags: ["Profile"]
      summary: "Update the profile of a user for the given core, if present in this CryptoAC instance."
      description: "Update the profile of a user for the given core, if present in this CryptoAC instance. The admin can update the profile for other users, while a user can only update her own profile. Note that some fields of the profile (which depend on the core type and configuration) cannot be updated. Possible outcome codes are: CODE_000_SUCCESS, CODE_018_INTERFACE_CONFIGURATION_PARAMETERS, CODE_019_MISSING_PARAMETERS, CODE_020_INVALID_PARAMETER, CODE_035_FORBIDDEN, CODE_036_UNAUTHORIZED, CODE_038_PROFILE_NOT_FOUND, CODE_047_UNEXPECTED."
      operationId: updateUserProfile
      security:
        - cookieAuth: []
        - basicAuth: []
      parameters:
        - name: CORE
          in: path
          description: "The core."
          required: true
          schema:
            type: string
      requestBody:
        required: true
        description: "A JSON object containing the user's profile. The schema of the JSON depends on the configuration given by the user."
        content:
          application/json:
            example: '
            {
             "type":"eu.fbk.st.cryptoac.core.CoreParametersMQTT",
             "coreType":"RBAC_MQTT",
             "cryptoType":"SODIUM",
             "versionNumber":1,
             "user":{
                "name":"admin",
                "isAdmin":true
             },
             "mmInterfaceParameters":{
                "type":"eu.fbk.st.cryptoac.implementation.mm.MMInterfaceRedisParameters",
                "mmType":"REDIS",
                "username":"admin",
                "password":"password",
                "port":6379,
                "url":"10.1.0.5"
             },
             "dmInterfaceParameters":{
                "type":"eu.fbk.st.cryptoac.implementation.dm.DMInterfaceMosquittoParameters",
                "dmType":"MOSQUITTO",
                "username":"admin",
                "password":[
                   112,
                   97,
                   115,
                   115,
                   119,
                   111,
                   114,
                   100
                ],
                "port":1883,
                "url":"10.1.0.8",
                "tls":false
             }
          }
          '
      responses:
        '200':
          description: "Success."
          content:
            text/plain:
              examples:
                CODE_000_SUCCESS:
                  summary: "Success."
                  value: "CODE_000_SUCCESS"
        '401':
          description: "Unauthorized."
          content:
            text/plain:
              examples:
                CODE_036_UNAUTHORIZED:
                  summary: "The user is not logged in."
                  value: "CODE_036_UNAUTHORIZED"
        '403':
          description: "Forbidden."
          content:
            text/plain:
              examples:
                CODE_035_FORBIDDEN:
                  summary: "A not-admin user cannot invoke this API."
                  value: "CODE_035_FORBIDDEN"
        '404':
          description: "Not found."
          content:
            text/plain:
              examples:
                CODE_038_PROFILE_NOT_FOUND:
                  summary: "The profile of the logged user or the profile to update was not found in this instance of CryptoAC."
                  value: "CODE_038_PROFILE_NOT_FOUND"
        '422':
          description: "Unprocessable Entity."
          content:
            text/plain:
              examples:
                CODE_018_INTERFACE_CONFIGURATION_PARAMETERS:
                  summary: "Semantically incorrect parameters."
                  value: "CODE_018_INTERFACE_CONFIGURATION_PARAMETERS"
                CODE_019_MISSING_PARAMETERS:
                  summary: "Missing a mandatory parameter."
                  value: "CODE_019_MISSING_PARAMETERS"
                CODE_020_INVALID_PARAMETER:
                  summary: "Supplied a wrong parameter."
                  value: "CODE_020_INVALID_PARAMETER"
        '500':
          description: "Internal Server Error."
          content:
            text/plain:
              examples:
                outcomeCode:
                  summary: "An outcome code describing the error."
                  value: "CODE_047_UNEXPECTED"



  /CryptoAC/users/{CORE}:
    get:
      tags: ["CAC", "Admin"]
      summary: "Get the list of currently existing users in the given core."
      description: "Get the list of currently existing users in the given core. Note that this is not related to the users' profiles, but to the access control policy. Possible outcome codes are: CODE_000_SUCCESS, CODE_019_MISSING_PARAMETERS, CODE_020_INVALID_PARAMETER, CODE_031_LOCK_CALLED_IN_INCONSISTENT_STATUS, CODE_036_UNAUTHORIZED, CODE_043_DM_CONNECTION_TIMEOUT, CODE_044_MM_CONNECTION_TIMEOUT."
      operationId: listUsers
      security:
        - cookieAuth: []
        - basicAuth: []
      parameters:
        - name: CORE
          in: path
          description: "The core."
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "A JSON object containing the list of users. The schema of the JSON depends on the configuration of the core."
          content:
            application/json:
              example: '
              [
                {
                  "name":"admin",
                  "status":"OPERATIONAL",
                  "asymEncKeys":null,
                  "asymSigKeys":null,
                  "isAdmin":true,
                  "token":"admin"
                }
              ]
            '
        '401':
          description: "Unauthorized."
          content:
            text/plain:
              examples:
                CODE_036_UNAUTHORIZED:
                  summary: "The user is not logged in."
                  value: "CODE_036_UNAUTHORIZED"
        '403':
          description: "Forbidden."
          content:
            text/plain:
              examples:
                CODE_035_FORBIDDEN:
                  summary: "A not-admin user cannot invoke this API."
                  value: "CODE_035_FORBIDDEN"
        '404':
          description: "Not found."
          content:
            text/plain:
              examples:
                CODE_038_PROFILE_NOT_FOUND:
                  summary: "The profile of the logged user was not found in this instance of CryptoAC."
                  value: "CODE_038_PROFILE_NOT_FOUND"
        '422':
          description: "Unprocessable Entity."
          content:
            text/plain:
              examples:
                CODE_019_MISSING_PARAMETERS:
                  summary: "Missing a mandatory parameter."
                  value: "CODE_019_MISSING_PARAMETERS"
                CODE_020_INVALID_PARAMETER:
                  summary: "Supplied a wrong parameter."
                  value: "CODE_020_INVALID_PARAMETER"
        '500':
          description: "Internal Server Error."
          content:
            text/plain:
              examples:
                outcomeCode:
                  summary: "An outcome code describing the error."
                  value: "CODE_047_UNEXPECTED"
    post:
      tags: ["CAC", "Admin"]
      summary: "Add a user to the access control policy for the given core."
      description: "Add a user to the access control policy for the given core. Note that the API returns the (partial) profile of the user that is necessary for its initialization. Possible outcome codes are: CODE_000_SUCCESS, CODE_001_USER_ALREADY_EXISTS, CODE_013_USER_WAS_DELETED, CODE_019_MISSING_PARAMETERS, CODE_020_INVALID_PARAMETER, CODE_030_OPA_DOCUMENT_DOWNLOAD, CODE_031_LOCK_CALLED_IN_INCONSISTENT_STATUS, CODE_036_UNAUTHORIZED, CODE_043_DM_CONNECTION_TIMEOUT, CODE_044_MM_CONNECTION_TIMEOUT, CODE_062_CREATE_USER_MM."
      operationId: addUser
      security:
        - cookieAuth: []
        - basicAuth: []
      parameters:
        - name: CORE
          in: path
          description: "The core."
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Username:
                  type: string
                  description: The name of the user to add.
      responses:
        '200':
          description: "A JSON object containing the (partial) new user's profile. The schema of the JSON depends on the configuration gave by the admin."
          content:
            application/json:
              example: '
              {
               "type":"eu.fbk.st.cryptoac.core.CoreParametersMQTT",
               "coreType":"RBAC_MQTT",
               "cryptoType":"SODIUM",
               "versionNumber":1,
               "user":{
                  "name":"bruno",
                  "isAdmin":false
               },
               "mmInterfaceParameters":{
                  "type":"eu.fbk.st.cryptoac.implementation.mm.MMInterfaceRedisParameters",
                  "mmType":"REDIS",
                  "username":"bruno",
                  "password":"passwordOfBruno",
                  "port":6379,
                  "url":"10.1.0.5"
               },
               "dmInterfaceParameters":{
                  "type":"eu.fbk.st.cryptoac.implementation.dm.DMInterfaceMosquittoParameters",
                  "dmType":"MOSQUITTO",
                  "username":"bruno",
                  "password":[
                     102,
                     93,
                     117,
                     112,
                     114,
                     107,
                     117,
                     102
                  ],
                  "port":1883,
                  "url":"10.1.0.8",
                  "tls":false
               }
            }
            '
        '401':
          description: "Unauthorized."
          content:
            text/plain:
              examples:
                CODE_036_UNAUTHORIZED:
                  summary: "The user is not logged in."
                  value: "CODE_036_UNAUTHORIZED"
        '403':
          description: "Forbidden."
          content:
            text/plain:
              examples:
                CODE_035_FORBIDDEN:
                  summary: "A not-admin user cannot invoke this API."
                  value: "CODE_035_FORBIDDEN"
        '404':
          description: "Not found."
          content:
            text/plain:
              examples:
                CODE_038_PROFILE_NOT_FOUND:
                  summary: "The profile of the logged user was not found in this instance of CryptoAC."
                  value: "CODE_038_PROFILE_NOT_FOUND"
        '422':
          description: "Unprocessable Entity."
          content:
            text/plain:
              examples:
                CODE_019_MISSING_PARAMETERS:
                  summary: "Missing a mandatory parameter."
                  value: "CODE_019_MISSING_PARAMETERS"
                CODE_020_INVALID_PARAMETER:
                  summary: "Supplied a wrong parameter."
                  value: "CODE_020_INVALID_PARAMETER"
        '500':
          description: "Internal Server Error."
          content:
            text/plain:
              examples:
                outcomeCode:
                  summary: "An outcome code describing the error."
                  value: "CODE_047_UNEXPECTED"

  /CryptoAC/users/{CORE}/{Username}:   
    delete:
      tags: ["CAC", "Admin"]
      summary: "Delete the user from the access control policy for the given core."
      description: "Delete the user from the access control policy for the given core. Note that this API does not delete the user's profile from this instance of CryptoAC, if present. Possible outcome codes are: CODE_000_SUCCESS, CODE_004_USER_NOT_FOUND, CODE_005_ROLE_NOT_FOUND, CODE_006_FILE_NOT_FOUND, CODE_007_ROLETUPLE_NOT_FOUND, CODE_008_PERMISSIONTUPLE_NOT_FOUND, CODE_010_ROLETUPLE_ALREADY_EXISTS, CODE_011_PERMISSIONTUPLE_ALREADY_EXISTS, CODE_013_USER_WAS_DELETED, CODE_014_ROLE_WAS_DELETED, CODE_015_FILE_WAS_DELETED, CODE_019_MISSING_PARAMETERS, CODE_020_INVALID_PARAMETER, CODE_022_ADMIN_CANNOT_BE_MODIFIED, CODE_036_UNAUTHORIZED, CODE_030_OPA_DOCUMENT_DOWNLOAD, CODE_031_LOCK_CALLED_IN_INCONSISTENT_STATUS, CODE_040_UR_ASSIGNMENTS_NOT_FOUND, CODE_043_DM_CONNECTION_TIMEOUT, CODE_044_MM_CONNECTION_TIMEOUT."
      operationId: deleteUser
      security:
        - cookieAuth: []
        - basicAuth: []
      parameters:
        - name: CORE
          in: path
          description: "The core."
          required: true
          schema:
            type: string
        - name: Username
          in: path
          description: "The name of the user to delete from the access control policy."
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Success."
          content:
            text/plain:
              examples:
                CODE_000_SUCCESS:
                  summary: "Success."
                  value: "CODE_000_SUCCESS"
        '401':
          description: "Unauthorized."
          content:
            text/plain:
              examples:
                CODE_036_UNAUTHORIZED:
                  summary: "The user is not logged in."
                  value: "CODE_036_UNAUTHORIZED"
        '403':
          description: "Forbidden."
          content:
            text/plain:
              examples:
                CODE_035_FORBIDDEN:
                  summary: "A not-admin user cannot invoke this API."
                  value: "CODE_035_FORBIDDEN"
        '404':
          description: "Not found."
          content:
            text/plain:
              examples:
                CODE_038_PROFILE_NOT_FOUND:
                  summary: "The profile of the logged user was not found in this instance of CryptoAC."
                  value: "CODE_038_PROFILE_NOT_FOUND"
        '422':
          description: "Unprocessable Entity."
          content:
            text/plain:
              examples:
                CODE_019_MISSING_PARAMETERS:
                  summary: "Missing a mandatory parameter."
                  value: "CODE_019_MISSING_PARAMETERS"
                CODE_020_INVALID_PARAMETER:
                  summary: "Supplied a wrong parameter."
                  value: "CODE_020_INVALID_PARAMETER"
        '500':
          description: "Internal Server Error."
          content:
            text/plain:
              examples:
                outcomeCode:
                  summary: "An outcome code describing the error."
                  value: "CODE_047_UNEXPECTED"



  /CryptoAC/roles/{CORE}:
    get:
      tags: ["CAC", "Admin"]
      summary: "Get the list of currently existing roles in the given core."
      description: "Get the list of currently existing roles in the given core. Possible outcome codes are: CODE_000_SUCCESS, CODE_019_MISSING_PARAMETERS, CODE_020_INVALID_PARAMETER, CODE_031_LOCK_CALLED_IN_INCONSISTENT_STATUS, CODE_036_UNAUTHORIZED, CODE_043_DM_CONNECTION_TIMEOUT, CODE_044_MM_CONNECTION_TIMEOUT."
      operationId: listRoles
      security:
        - cookieAuth: []
        - basicAuth: []
      parameters:
        - name: CORE
          in: path
          description: "The core."
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "A JSON object containing the list of roles. The schema of the JSON depends on the configuration of the core."
          content:
            application/json:
              example: '
              [
                 {
                    "name":"admin",
                    "status":"OPERATIONAL",
                    "versionNumber":1,
                    "token":"admin"
                 }
              ]
            '
        '401':
          description: "Unauthorized."
          content:
            text/plain:
              examples:
                CODE_036_UNAUTHORIZED:
                  summary: "The user is not logged in."
                  value: "CODE_036_UNAUTHORIZED"
        '403':
          description: "Forbidden."
          content:
            text/plain:
              examples:
                CODE_035_FORBIDDEN:
                  summary: "A not-admin user cannot invoke this API."
                  value: "CODE_035_FORBIDDEN"
        '404':
          description: "Not found."
          content:
            text/plain:
              examples:
                CODE_038_PROFILE_NOT_FOUND:
                  summary: "The profile of the logged user was not found in this instance of CryptoAC."
                  value: "CODE_038_PROFILE_NOT_FOUND"
        '422':
          description: "Unprocessable Entity."
          content:
            text/plain:
              examples:
                CODE_019_MISSING_PARAMETERS:
                  summary: "Missing a mandatory parameter."
                  value: "CODE_019_MISSING_PARAMETERS"
                CODE_020_INVALID_PARAMETER:
                  summary: "Supplied a wrong parameter."
                  value: "CODE_020_INVALID_PARAMETER"
        '500':
          description: "Internal Server Error."
          content:
            text/plain:
              examples:
                outcomeCode:
                  summary: "An outcome code describing the error."
                  value: "CODE_047_UNEXPECTED"
    post:
      tags: ["CAC", "Admin"]
      summary: "Add a role to the access control policy for the given core."
      description: "Add a user to the access control policy for the given core. Possible outcome codes are: CODE_000_SUCCESS, CODE_002_ROLE_ALREADY_EXISTS, CODE_010_ROLETUPLE_ALREADY_EXISTS, CODE_014_ROLE_WAS_DELETED, CODE_019_MISSING_PARAMETERS, CODE_020_INVALID_PARAMETER, CODE_030_OPA_DOCUMENT_DOWNLOAD, CODE_031_LOCK_CALLED_IN_INCONSISTENT_STATUS, CODE_036_UNAUTHORIZED, CODE_043_DM_CONNECTION_TIMEOUT, CODE_044_MM_CONNECTION_TIMEOUT."
      operationId: addRole
      security:
        - cookieAuth: []
        - basicAuth: []
      parameters:
        - name: CORE
          in: path
          description: "The core."
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Role_Name:
                  type: string
                  description: The name of the role to add.
      responses:
        '200':
          description: "Success."
          content:
            text/plain:
              examples:
                CODE_000_SUCCESS:
                  summary: "Success."
                  value: "CODE_000_SUCCESS"
        '401':
          description: "Unauthorized."
          content:
            text/plain:
              examples:
                CODE_036_UNAUTHORIZED:
                  summary: "The user is not logged in."
                  value: "CODE_036_UNAUTHORIZED"
        '403':
          description: "Forbidden."
          content:
            text/plain:
              examples:
                CODE_035_FORBIDDEN:
                  summary: "A not-admin user cannot invoke this API."
                  value: "CODE_035_FORBIDDEN"
        '404':
          description: "Not found."
          content:
            text/plain:
              examples:
                CODE_038_PROFILE_NOT_FOUND:
                  summary: "The profile of the logged user was not found in this instance of CryptoAC."
                  value: "CODE_038_PROFILE_NOT_FOUND"
        '422':
          description: "Unprocessable Entity."
          content:
            text/plain:
              examples:
                CODE_019_MISSING_PARAMETERS:
                  summary: "Missing a mandatory parameter."
                  value: "CODE_019_MISSING_PARAMETERS"
                CODE_020_INVALID_PARAMETER:
                  summary: "Supplied a wrong parameter."
                  value: "CODE_020_INVALID_PARAMETER"
        '500':
          description: "Internal Server Error."
          content:
            text/plain:
              examples:
                outcomeCode:
                  summary: "An outcome code describing the error."
                  value: "CODE_047_UNEXPECTED"
  
  /CryptoAC/roles/{CORE}/{Role_Name}:   
    delete:
      tags: ["CAC", "Admin"]
      summary: "Delete the role from the access control policy for the given core and remove every user and permission from the role."
      description: "Delete the role from the access control policy for the given core and remove every user and permission from the role. Possible outcome codes are: CODE_000_SUCCESS, CODE_004_USER_NOT_FOUND, CODE_005_ROLE_NOT_FOUND, CODE_006_FILE_NOT_FOUND, CODE_007_ROLETUPLE_NOT_FOUND, CODE_008_PERMISSIONTUPLE_NOT_FOUND, CODE_011_PERMISSIONTUPLE_ALREADY_EXISTS, CODE_014_ROLE_WAS_DELETED, CODE_015_FILE_WAS_DELETED, CODE_016_INVALID_PERMISSION, CODE_019_MISSING_PARAMETERS, CODE_020_INVALID_PARAMETER, CODE_022_ADMIN_CANNOT_BE_MODIFIED, CODE_030_OPA_DOCUMENT_DOWNLOAD, CODE_031_LOCK_CALLED_IN_INCONSISTENT_STATUS, CODE_036_UNAUTHORIZED, CODE_041_PA_ASSIGNMENTS_NOT_FOUND, CODE_040_UR_ASSIGNMENTS_NOT_FOUND, CODE_043_DM_CONNECTION_TIMEOUT, CODE_044_MM_CONNECTION_TIMEOUT."
      operationId: deleteRole
      security:
        - cookieAuth: []
        - basicAuth: []
      parameters:
        - name: CORE
          in: path
          description: "The core."
          required: true
          schema:
            type: string
        - name: Role_Name
          in: path
          description: "The name of the role to delete from the access control policy."
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Success."
          content:
            text/plain:
              examples:
                CODE_000_SUCCESS:
                  summary: "Success."
                  value: "CODE_000_SUCCESS"
        '401':
          description: "Unauthorized."
          content:
            text/plain:
              examples:
                CODE_036_UNAUTHORIZED:
                  summary: "The user is not logged in."
                  value: "CODE_036_UNAUTHORIZED"
        '403':
          description: "Forbidden."
          content:
            text/plain:
              examples:
                CODE_035_FORBIDDEN:
                  summary: "A not-admin user cannot invoke this API."
                  value: "CODE_035_FORBIDDEN"
        '404':
          description: "Not found."
          content:
            text/plain:
              examples:
                CODE_038_PROFILE_NOT_FOUND:
                  summary: "The profile of the logged user was not found in this instance of CryptoAC."
                  value: "CODE_038_PROFILE_NOT_FOUND"
        '422':
          description: "Unprocessable Entity."
          content:
            text/plain:
              examples:
                CODE_019_MISSING_PARAMETERS:
                  summary: "Missing a mandatory parameter."
                  value: "CODE_019_MISSING_PARAMETERS"
                CODE_020_INVALID_PARAMETER:
                  summary: "Supplied a wrong parameter."
                  value: "CODE_020_INVALID_PARAMETER"
        '500':
          description: "Internal Server Error."
          content:
            text/plain:
              examples:
                outcomeCode:
                  summary: "An outcome code describing the error."
                  value: "CODE_047_UNEXPECTED"



  /CryptoAC/files/{CORE}:
    get:
      tags: ["CAC", "Admin"]
      summary: "Get the list of currently existing files in the given core."
      description: "Get the list of currently existing files in the given core. Possible outcome codes are: CODE_000_SUCCESS, CODE_019_MISSING_PARAMETERS, CODE_020_INVALID_PARAMETER, CODE_031_LOCK_CALLED_IN_INCONSISTENT_STATUS, CODE_036_UNAUTHORIZED, CODE_043_DM_CONNECTION_TIMEOUT, CODE_044_MM_CONNECTION_TIMEOUT."
      operationId: listFiles
      security:
        - cookieAuth: []
        - basicAuth: []
      parameters:
        - name: CORE
          in: path
          description: "The core."
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "A JSON object containing the list of files. The schema of the JSON depends on the configuration of the core."
          content:
            application/json:
              example: '
              [
                 {
                    "name":"documentA",
                    "status":"OPERATIONAL",
                    "symEncKeyVersionNumber":1,
                    "enforcement":"COMBINED",
                    "token":"4to49ta5TW5MOjiA1Nee"
                 }
              ]
            '
        '401':
          description: "Unauthorized."
          content:
            text/plain:
              examples:
                CODE_036_UNAUTHORIZED:
                  summary: "The user is not logged in."
                  value: "CODE_036_UNAUTHORIZED"
        '403':
          description: "Forbidden."
          content:
            text/plain:
              examples:
                CODE_035_FORBIDDEN:
                  summary: "A not-admin user cannot invoke this API."
                  value: "CODE_035_FORBIDDEN"
        '404':
          description: "Not found."
          content:
            text/plain:
              examples:
                CODE_038_PROFILE_NOT_FOUND:
                  summary: "The profile of the logged user was not found in this instance of CryptoAC."
                  value: "CODE_038_PROFILE_NOT_FOUND"
        '422':
          description: "Unprocessable Entity."
          content:
            text/plain:
              examples:
                CODE_019_MISSING_PARAMETERS:
                  summary: "Missing a mandatory parameter."
                  value: "CODE_019_MISSING_PARAMETERS"
                CODE_020_INVALID_PARAMETER:
                  summary: "Supplied a wrong parameter."
                  value: "CODE_020_INVALID_PARAMETER"
        '500':
          description: "Internal Server Error."
          content:
            text/plain:
              examples:
                outcomeCode:
                  summary: "An outcome code describing the error."
                  value: "CODE_047_UNEXPECTED"
    post:
      tags: ["CAC"]
      summary: "Add a resource to the access control policy for the given core."
      description: "Add a resource to the access control policy for the given core. Possible outcome codes are: CODE_000_SUCCESS, CODE_003_FILE_ALREADY_EXISTS, CODE_004_USER_NOT_FOUND, CODE_006_FILE_NOT_FOUND, CODE_011_PERMISSIONTUPLE_ALREADY_EXISTS, CODE_015_FILE_WAS_DELETED, CODE_016_INVALID_PERMISSION, CODE_017_INVALID_VERSION_NUMBER, CODE_019_MISSING_PARAMETERS, CODE_020_INVALID_PARAMETER, CODE_021_RM_CONFIGURATION, CODE_024_FILE_DELETE, CODE_025_FILE_RENAMING, CODE_026_TUPLE_FORMAT, CODE_030_OPA_DOCUMENT_DOWNLOAD, CODE_031_LOCK_CALLED_IN_INCONSISTENT_STATUS, CODE_036_UNAUTHORIZED, CODE_038_PROFILE_NOT_FOUND, CODE_042_RM_CONNECTION_TIMEOUT, CODE_043_DM_CONNECTION_TIMEOUT, CODE_044_MM_CONNECTION_TIMEOUT, CODE_053_INCONSISTENT_STATUS_DELETE_TEMPORARY_FILE_IN_DM."
      operationId: addFile
      security:
        - cookieAuth: []
        - basicAuth: []
      parameters:
        - name: CORE
          in: path
          description: "The core."
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                Access_Control_Enforcement:
                  type: string
                  description: "The access control enforcement level."
                File:
                  type: string
                  format: binary
                  description: "The file to add."
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Access_Control_Enforcement:
                  type: string
                  description: "The access control enforcement level."
                File_Name:
                  type: string
                  description: "The name of the file."
      responses:
        '200':
          description: "Success."
          content:
            text/plain:
              examples:
                CODE_000_SUCCESS:
                  summary: "Success."
                  value: "CODE_000_SUCCESS"
        '401':
          description: "Unauthorized."
          content:
            text/plain:
              examples:
                CODE_036_UNAUTHORIZED:
                  summary: "The user is not logged in."
                  value: "CODE_036_UNAUTHORIZED"
        '403':
          description: "Forbidden."
          content:
            text/plain:
              examples:
                CODE_035_FORBIDDEN:
                  summary: "A not-admin user cannot invoke this API."
                  value: "CODE_035_FORBIDDEN"
        '404':
          description: "Not found."
          content:
            text/plain:
              examples:
                CODE_038_PROFILE_NOT_FOUND:
                  summary: "The profile of the logged user was not found in this instance of CryptoAC."
                  value: "CODE_038_PROFILE_NOT_FOUND"
        '422':
          description: "Unprocessable Entity."
          content:
            text/plain:
              examples:
                CODE_019_MISSING_PARAMETERS:
                  summary: "Missing a mandatory parameter."
                  value: "CODE_019_MISSING_PARAMETERS"
                CODE_020_INVALID_PARAMETER:
                  summary: "Supplied a wrong parameter."
                  value: "CODE_020_INVALID_PARAMETER"
        '500':
          description: "Internal Server Error."
          content:
            text/plain:
              examples:
                outcomeCode:
                  summary: "An outcome code describing the error."
                  value: "CODE_047_UNEXPECTED"
    patch:
      tags: ["CAC"]
      summary: "Update a resource in the access control policy for the given core."
      description: "Update a resource in the access control policy for the given core. Possible outcome codes are: CODE_000_SUCCESS, CODE_003_FILE_ALREADY_EXISTS, CODE_004_USER_NOT_FOUND, CODE_006_FILE_NOT_FOUND, CODE_009_FILETUPLE_NOT_FOUND, CODE_015_FILE_WAS_DELETED, CODE_017_INVALID_VERSION_NUMBER, CODE_019_MISSING_PARAMETERS, CODE_020_INVALID_PARAMETER, CODE_021_RM_CONFIGURATION, CODE_024_FILE_DELETE, CODE_025_FILE_RENAMING, CODE_027_AC_ENFORCEMENT_INCONSISTENT, CODE_030_OPA_DOCUMENT_DOWNLOAD, CODE_031_LOCK_CALLED_IN_INCONSISTENT_STATUS, CODE_036_UNAUTHORIZED, CODE_038_PROFILE_NOT_FOUND, CODE_042_RM_CONNECTION_TIMEOUT, CODE_043_DM_CONNECTION_TIMEOUT, CODE_044_MM_CONNECTION_TIMEOUT, CODE_053_INCONSISTENT_STATUS_DELETE_TEMPORARY_FILE_IN_DM."
      operationId: updateFile
      security:
        - cookieAuth: []
        - basicAuth: []
      parameters:
        - name: CORE
          in: path
          description: "The core."
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                File:
                  type: string
                  format: binary
                  description: "The file to add."
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                File_Content:
                  type: string
                  description: "The updated content of the resource."
                File_Name:
                  type: string
                  description: "The name of the file."
      responses:
        '200':
          description: "Success."
          content:
            text/plain:
              examples:
                CODE_000_SUCCESS:
                  summary: "Success."
                  value: "CODE_000_SUCCESS"
        '401':
          description: "Unauthorized."
          content:
            text/plain:
              examples:
                CODE_036_UNAUTHORIZED:
                  summary: "The user is not logged in."
                  value: "CODE_036_UNAUTHORIZED"
        '403':
          description: "Forbidden."
          content:
            text/plain:
              examples:
                CODE_035_FORBIDDEN:
                  summary: "A not-admin user cannot invoke this API."
                  value: "CODE_035_FORBIDDEN"
        '404':
          description: "Not found."
          content:
            text/plain:
              examples:
                CODE_038_PROFILE_NOT_FOUND:
                  summary: "The profile of the logged user was not found in this instance of CryptoAC."
                  value: "CODE_038_PROFILE_NOT_FOUND"
        '422':
          description: "Unprocessable Entity."
          content:
            text/plain:
              examples:
                CODE_019_MISSING_PARAMETERS:
                  summary: "Missing a mandatory parameter."
                  value: "CODE_019_MISSING_PARAMETERS"
                CODE_020_INVALID_PARAMETER:
                  summary: "Supplied a wrong parameter."
                  value: "CODE_020_INVALID_PARAMETER"
        '500':
          description: "Internal Server Error."
          content:
            text/plain:
              examples:
                outcomeCode:
                  summary: "An outcome code describing the error."
                  value: "CODE_047_UNEXPECTED"

  /CryptoAC/files/{CORE}/{File_Name}:   
    get:
      tags: ["CAC"]
      summary: "Require read access to the specified resource for the given core."
      description: "Require read access to the specified resource for the given core. The actual behaviour depends on the configuration of the core (e.g., download the resource as a file, subscribe to an MQTT topic). Regardless of whether the resource actually exists or the user does not have access to it, the API always returns 404. Possible outcome codes are: CODE_000_SUCCESS, CODE_006_FILE_NOT_FOUND, CODE_019_MISSING_PARAMETERS, CODE_020_INVALID_PARAMETER, CODE_030_OPA_DOCUMENT_DOWNLOAD, CODE_031_LOCK_CALLED_IN_INCONSISTENT_STATUS, CODE_036_UNAUTHORIZED, CODE_038_PROFILE_NOT_FOUND, CODE_043_DM_CONNECTION_TIMEOUT, CODE_044_MM_CONNECTION_TIMEOUT."
      operationId: getFile
      security:
        - cookieAuth: []
        - basicAuth: []
      parameters:
        - name: CORE
          in: path
          description: "The core."
          required: true
          schema:
            type: string
        - name: File_Name
          in: path
          description: "The name of the file."
          required: true
          schema:
            type: string
      responses:
        '200': 
          description: ok 
          content: 
            application/octet-stream: 
              schema: 
                type: string 
                format: binary 
            text/plain:
              examples:
                CODE_000_SUCCESS:
                  summary: "Success."
                  value: "CODE_000_SUCCESS"
          headers: 
            Content-Disposition: 
              schema: 
                type: string 
                description: Used only with `application/octet-stream` responses 
                example: attachment; filename="name.pdf"
        '401':
          description: "Unauthorized."
          content:
            text/plain:
              examples:
                CODE_036_UNAUTHORIZED:
                  summary: "The user is not logged in."
                  value: "CODE_036_UNAUTHORIZED"
        '403':
          description: "Forbidden."
          content:
            text/plain:
              examples:
                CODE_035_FORBIDDEN:
                  summary: "A not-admin user cannot invoke this API."
                  value: "CODE_035_FORBIDDEN"
        '404':
          description: "Not found."
          content:
            text/plain:
              examples:
                CODE_038_PROFILE_NOT_FOUND:
                  summary: "The profile of the logged user was not found in this instance of CryptoAC."
                  value: "CODE_038_PROFILE_NOT_FOUND"
        '422':
          description: "Unprocessable Entity."
          content:
            text/plain:
              examples:
                CODE_019_MISSING_PARAMETERS:
                  summary: "Missing a mandatory parameter."
                  value: "CODE_019_MISSING_PARAMETERS"
                CODE_020_INVALID_PARAMETER:
                  summary: "Supplied a wrong parameter."
                  value: "CODE_020_INVALID_PARAMETER"
        '500':
          description: "Internal Server Error."
          content:
            text/plain:
              examples:
                outcomeCode:
                  summary: "An outcome code describing the error."
                  value: "CODE_047_UNEXPECTED"
    delete:
      tags: ["CAC", "Admin"]
      summary: "Delete the file from the access control policy for the given core."
      description: "Delete the file from the access control policy for the given core. Possible outcome codes are: CODE_000_SUCCESS, CODE_005_ROLE_NOT_FOUND, CODE_006_FILE_NOT_FOUND, CODE_008_PERMISSIONTUPLE_NOT_FOUND, CODE_009_FILETUPLE_NOT_FOUND, CODE_015_FILE_WAS_DELETED, CODE_019_MISSING_PARAMETERS, CODE_020_INVALID_PARAMETER, CODE_022_ADMIN_CANNOT_BE_MODIFIED, CODE_030_OPA_DOCUMENT_DOWNLOAD, CODE_031_LOCK_CALLED_IN_INCONSISTENT_STATUS, CODE_036_UNAUTHORIZED, CODE_041_PA_ASSIGNMENTS_NOT_FOUND, CODE_043_DM_CONNECTION_TIMEOUT, CODE_044_MM_CONNECTION_TIMEOUT."
      operationId: deleteFile
      security:
        - cookieAuth: []
        - basicAuth: []
      parameters:
        - name: CORE
          in: path
          description: "The core."
          required: true
          schema:
            type: string
        - name: File_Name
          in: path
          description: "The name of the file to delete from the access control policy."
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Success."
          content:
            text/plain:
              examples:
                CODE_000_SUCCESS:
                  summary: "Success."
                  value: "CODE_000_SUCCESS"
        '401':
          description: "Unauthorized."
          content:
            text/plain:
              examples:
                CODE_036_UNAUTHORIZED:
                  summary: "The user is not logged in."
                  value: "CODE_036_UNAUTHORIZED"
        '403':
          description: "Forbidden."
          content:
            text/plain:
              examples:
                CODE_035_FORBIDDEN:
                  summary: "A not-admin user cannot invoke this API."
                  value: "CODE_035_FORBIDDEN"
        '404':
          description: "Not found."
          content:
            text/plain:
              examples:
                CODE_038_PROFILE_NOT_FOUND:
                  summary: "The profile of the logged user was not found in this instance of CryptoAC."
                  value: "CODE_038_PROFILE_NOT_FOUND"
        '422':
          description: "Unprocessable Entity."
          content:
            text/plain:
              examples:
                CODE_019_MISSING_PARAMETERS:
                  summary: "Missing a mandatory parameter."
                  value: "CODE_019_MISSING_PARAMETERS"
                CODE_020_INVALID_PARAMETER:
                  summary: "Supplied a wrong parameter."
                  value: "CODE_020_INVALID_PARAMETER"
        '500':
          description: "Internal Server Error."
          content:
            text/plain:
              examples:
                outcomeCode:
                  summary: "An outcome code describing the error."
                  value: "CODE_047_UNEXPECTED"




  /CryptoAC/assignments/{CORE}:
    get:
      tags: ["CAC"]
      summary: "Get the list of roles currently assigned to the logged user."
      description: "Get the list of roles currently assigned to the logged user. It is possible to specify as query parameters the name of the user (that makes the API ignore the name of the logged user) and the name of the role to filter the assignments by. Only the administrator can specify a username in the query parameters. Possible outcome codes are: CODE_000_SUCCESS, CODE_019_MISSING_PARAMETERS, CODE_020_INVALID_PARAMETER, CODE_031_LOCK_CALLED_IN_INCONSISTENT_STATUS, CODE_036_UNAUTHORIZED, CODE_038_PROFILE_NOT_FOUND, CODE_043_DM_CONNECTION_TIMEOUT, CODE_044_MM_CONNECTION_TIMEOUT."
      operationId: listAssignments
      security:
        - cookieAuth: []
        - basicAuth: []
      parameters:
        - name: CORE
          in: path
          description: "The core."
          required: true
          schema:
            type: string
        - name: Username
          in: query
          description: "The name of the user to filter the assignments by."
          required: false
          schema:
            type: string
        - name: Role_Name
          in: query
          description: "The name of the role to filter the assignments by."
          required: false
          schema:
            type: string
      responses:
        '200':
          description: "A JSON object containing the list of assignments. The schema of the JSON depends on the configuration of the core."
          content:
            application/json:
              example: '
              [
                 {
                    "signature":[
                       101,
                       -31
                    ],
                    "signer":"admin",
                    "signerType":"USER",
                    "username":"admin",
                    "roleName":"admin",
                    "roleVersionNumber":1
                 }
              ]
            '
        '401':
          description: "Unauthorized."
          content:
            text/plain:
              examples:
                CODE_036_UNAUTHORIZED:
                  summary: "The user is not logged in."
                  value: "CODE_036_UNAUTHORIZED"
        '403':
          description: "Forbidden."
          content:
            text/plain:
              examples:
                CODE_035_FORBIDDEN:
                  summary: "A not-admin user cannot invoke this API."
                  value: "CODE_035_FORBIDDEN"
        '404':
          description: "Not found."
          content:
            text/plain:
              examples:
                CODE_038_PROFILE_NOT_FOUND:
                  summary: "The profile of the logged user was not found in this instance of CryptoAC."
                  value: "CODE_038_PROFILE_NOT_FOUND"
        '422':
          description: "Unprocessable Entity."
          content:
            text/plain:
              examples:
                CODE_019_MISSING_PARAMETERS:
                  summary: "Missing a mandatory parameter."
                  value: "CODE_019_MISSING_PARAMETERS"
                CODE_020_INVALID_PARAMETER:
                  summary: "Supplied a wrong parameter."
                  value: "CODE_020_INVALID_PARAMETER"
        '500':
          description: "Internal Server Error."
          content:
            text/plain:
              examples:
                outcomeCode:
                  summary: "An outcome code describing the error."
                  value: "CODE_047_UNEXPECTED"
    post:
      tags: ["CAC", "Admin"]
      summary: "Add a user-role assignment to the access control policy for the given core."
      description: "Add a user-role assignment to the access control policy for the given core. Possible outcome codes are: CODE_000_SUCCESS, CODE_004_USER_NOT_FOUND, CODE_005_ROLE_NOT_FOUND, CODE_010_ROLETUPLE_ALREADY_EXISTS, CODE_013_USER_WAS_DELETED, CODE_019_MISSING_PARAMETERS, CODE_020_INVALID_PARAMETER, CODE_022_ADMIN_CANNOT_BE_MODIFIED, CODE_030_OPA_DOCUMENT_DOWNLOAD, CODE_031_LOCK_CALLED_IN_INCONSISTENT_STATUS, CODE_036_UNAUTHORIZED, CODE_037_USER_DOES_NOT_EXIST_OR_WAS_NOT_INITIALIZED_OR_WAS_DELETED, CODE_043_DM_CONNECTION_TIMEOUT, CODE_044_MM_CONNECTION_TIMEOUT."
      operationId: addAssignment
      security:
        - cookieAuth: []
        - basicAuth: []
      parameters:
        - name: CORE
          in: path
          description: "The core."
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Username:
                  type: string
                  description: The name of the user.
                Role_Name:
                  type: string
                  description: The name of the role.
      responses:
        '200':
          description: "Success."
          content:
            text/plain:
              examples:
                CODE_000_SUCCESS:
                  summary: "Success."
                  value: "CODE_000_SUCCESS"
        '401':
          description: "Unauthorized."
          content:
            text/plain:
              examples:
                CODE_036_UNAUTHORIZED:
                  summary: "The user is not logged in."
                  value: "CODE_036_UNAUTHORIZED"
        '403':
          description: "Forbidden."
          content:
            text/plain:
              examples:
                CODE_035_FORBIDDEN:
                  summary: "A not-admin user cannot invoke this API."
                  value: "CODE_035_FORBIDDEN"
        '404':
          description: "Not found."
          content:
            text/plain:
              examples:
                CODE_038_PROFILE_NOT_FOUND:
                  summary: "The profile of the logged user was not found in this instance of CryptoAC."
                  value: "CODE_038_PROFILE_NOT_FOUND"
        '422':
          description: "Unprocessable Entity."
          content:
            text/plain:
              examples:
                CODE_019_MISSING_PARAMETERS:
                  summary: "Missing a mandatory parameter."
                  value: "CODE_019_MISSING_PARAMETERS"
                CODE_020_INVALID_PARAMETER:
                  summary: "Supplied a wrong parameter."
                  value: "CODE_020_INVALID_PARAMETER"
        '500':
          description: "Internal Server Error."
          content:
            text/plain:
              examples:
                outcomeCode:
                  summary: "An outcome code describing the error."
                  value: "CODE_047_UNEXPECTED"
                  
  /CryptoAC/assignments/{CORE}/{Username}/{Role_Name}:
    delete:
      tags: ["CAC", "Admin"]
      summary: "Delete the user-role assignment from the access control policy for the given core."
      description: "Delete the user-role assignment from the access control policy for the given core. Possible outcome codes are: CODE_000_SUCCESS, CODE_004_USER_NOT_FOUND, CODE_005_ROLE_NOT_FOUND, CODE_006_FILE_NOT_FOUND, CODE_007_ROLETUPLE_NOT_FOUND, CODE_008_PERMISSIONTUPLE_NOT_FOUND, CODE_010_ROLETUPLE_ALREADY_EXISTS, CODE_011_PERMISSIONTUPLE_ALREADY_EXISTS, CODE_014_ROLE_WAS_DELETED, CODE_015_FILE_WAS_DELETED, CODE_019_MISSING_PARAMETERS, CODE_020_INVALID_PARAMETER, CODE_022_ADMIN_CANNOT_BE_MODIFIED, CODE_030_OPA_DOCUMENT_DOWNLOAD, CODE_031_LOCK_CALLED_IN_INCONSISTENT_STATUS, CODE_036_UNAUTHORIZED, CODE_040_UR_ASSIGNMENTS_NOT_FOUND, CODE_043_DM_CONNECTION_TIMEOUT, CODE_044_MM_CONNECTION_TIMEOUT."
      operationId: deleteAssignment
      security:
        - cookieAuth: []
        - basicAuth: []
      parameters:
        - name: CORE
          in: path
          description: "The core."
          required: true
          schema:
            type: string
        - name: Username
          in: path
          description: "The name of the user."
          required: true
          schema:
            type: string
        - name: Role_Name
          in: path
          description: "The name of the role."
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Success."
          content:
            text/plain:
              examples:
                CODE_000_SUCCESS:
                  summary: "Success."
                  value: "CODE_000_SUCCESS"
        '401':
          description: "Unauthorized."
          content:
            text/plain:
              examples:
                CODE_036_UNAUTHORIZED:
                  summary: "The user is not logged in."
                  value: "CODE_036_UNAUTHORIZED"
        '403':
          description: "Forbidden."
          content:
            text/plain:
              examples:
                CODE_035_FORBIDDEN:
                  summary: "A not-admin user cannot invoke this API."
                  value: "CODE_035_FORBIDDEN"
        '404':
          description: "Not found."
          content:
            text/plain:
              examples:
                CODE_038_PROFILE_NOT_FOUND:
                  summary: "The profile of the logged user was not found in this instance of CryptoAC."
                  value: "CODE_038_PROFILE_NOT_FOUND"
        '422':
          description: "Unprocessable Entity."
          content:
            text/plain:
              examples:
                CODE_019_MISSING_PARAMETERS:
                  summary: "Missing a mandatory parameter."
                  value: "CODE_019_MISSING_PARAMETERS"
                CODE_020_INVALID_PARAMETER:
                  summary: "Supplied a wrong parameter."
                  value: "CODE_020_INVALID_PARAMETER"
        '500':
          description: "Internal Server Error."
          content:
            text/plain:
              examples:
                outcomeCode:
                  summary: "An outcome code describing the error."
                  value: "CODE_047_UNEXPECTED"



  /CryptoAC/permissions/{CORE}:
    get:
      tags: ["CAC"]
      summary: "Get the list of permissions currently assigned to the logged user."
      description: "Get the list of permissions currently assigned to the logged user. It is possible to specify as query parameters the name of the user (that makes the API ignore the name of the logged user), the name of the role and the name of the file to filter the assignments by. Only the administrator can specify a username in the query parameters. Possible outcome codes are: CODE_000_SUCCESS, CODE_019_MISSING_PARAMETERS, CODE_020_INVALID_PARAMETER, CODE_031_LOCK_CALLED_IN_INCONSISTENT_STATUS, CODE_036_UNAUTHORIZED, CODE_038_PROFILE_NOT_FOUND, CODE_043_DM_CONNECTION_TIMEOUT, CODE_044_MM_CONNECTION_TIMEOUT."
      operationId: listPermissions
      security:
        - cookieAuth: []
        - basicAuth: []
      parameters:
        - name: CORE
          in: path
          description: "The core."
          required: true
          schema:
            type: string
        - name: Username
          in: query
          description: "The name of the user to filter the assignments by."
          required: false
          schema:
            type: string
        - name: Role_Name
          in: query
          description: "The name of the role to filter the assignments by."
          required: false
          schema:
            type: string
        - name: File_Name
          in: query
          description: "The name of the file to filter the assignments by."
          required: false
          schema:
            type: string
      responses:
        '200':
          description: "A JSON object containing the list of permissions. The schema of the JSON depends on the configuration of the core."
          content:
            application/json:
              example: '
              [
                 {
                    "signature":[
                       92,
                       -32
                    ],
                    "signer":"admin",
                    "signerType":"USER",
                    "roleName":"admin",
                    "fileName":"documentA",
                    "roleToken":"admin",
                    "fileToken":"4to49ta5TW5MOjiA1Nee",
                    "permission":"READWRITE",
                    "encryptedSymKey":{
                       "key":[
                          -18,
                          -19
                       ]
                    },
                    "roleVersionNumber":1,
                    "symKeyVersionNumber":1
                 }
              ]
            '
        '401':
          description: "Unauthorized."
          content:
            text/plain:
              examples:
                CODE_036_UNAUTHORIZED:
                  summary: "The user is not logged in."
                  value: "CODE_036_UNAUTHORIZED"
        '403':
          description: "Forbidden."
          content:
            text/plain:
              examples:
                CODE_035_FORBIDDEN:
                  summary: "A not-admin user cannot invoke this API."
                  value: "CODE_035_FORBIDDEN"
        '404':
          description: "Not found."
          content:
            text/plain:
              examples:
                CODE_038_PROFILE_NOT_FOUND:
                  summary: "The profile of the logged user was not found in this instance of CryptoAC."
                  value: "CODE_038_PROFILE_NOT_FOUND"
        '422':
          description: "Unprocessable Entity."
          content:
            text/plain:
              examples:
                CODE_019_MISSING_PARAMETERS:
                  summary: "Missing a mandatory parameter."
                  value: "CODE_019_MISSING_PARAMETERS"
                CODE_020_INVALID_PARAMETER:
                  summary: "Supplied a wrong parameter."
                  value: "CODE_020_INVALID_PARAMETER"
        '500':
          description: "Internal Server Error."
          content:
            text/plain:
              examples:
                outcomeCode:
                  summary: "An outcome code describing the error."
                  value: "CODE_047_UNEXPECTED"
    post:
      tags: ["CAC", "Admin"]
      summary: "Add a role-permission assignment to the access control policy for the given core."
      description: "Add a role-permission assignment to the access control policy for the given core. Possible outcome codes are: CODE_000_SUCCESS, CODE_005_ROLE_NOT_FOUND, CODE_006_FILE_NOT_FOUND, CODE_008_PERMISSIONTUPLE_NOT_FOUND, CODE_011_PERMISSIONTUPLE_ALREADY_EXISTS, CODE_016_INVALID_PERMISSION, CODE_019_MISSING_PARAMETERS, CODE_020_INVALID_PARAMETER, CODE_030_OPA_DOCUMENT_DOWNLOAD, CODE_031_LOCK_CALLED_IN_INCONSISTENT_STATUS, CODE_036_UNAUTHORIZED, CODE_041_PA_ASSIGNMENTS_NOT_FOUND, CODE_043_DM_CONNECTION_TIMEOUT, CODE_044_MM_CONNECTION_TIMEOUT."
      operationId: addPermission
      security:
        - cookieAuth: []
        - basicAuth: []
      parameters:
        - name: CORE
          in: path
          description: "The core."
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Role_Name:
                  type: string
                  description: The name of the role.
                File_Name:
                  type: string
                  description: The name of the file.
                Permission:
                  type: string
                  description: The permission to assign.
                  enum: [READ, WRITE, READWRITE]
      responses:
        '200':
          description: "Success."
          content:
            text/plain:
              examples:
                CODE_000_SUCCESS:
                  summary: "Success."
                  value: "CODE_000_SUCCESS"
        '401':
          description: "Unauthorized."
          content:
            text/plain:
              examples:
                CODE_036_UNAUTHORIZED:
                  summary: "The user is not logged in."
                  value: "CODE_036_UNAUTHORIZED"
        '403':
          description: "Forbidden."
          content:
            text/plain:
              examples:
                CODE_035_FORBIDDEN:
                  summary: "A not-admin user cannot invoke this API."
                  value: "CODE_035_FORBIDDEN"
        '404':
          description: "Not found."
          content:
            text/plain:
              examples:
                CODE_038_PROFILE_NOT_FOUND:
                  summary: "The profile of the logged user was not found in this instance of CryptoAC."
                  value: "CODE_038_PROFILE_NOT_FOUND"
        '422':
          description: "Unprocessable Entity."
          content:
            text/plain:
              examples:
                CODE_019_MISSING_PARAMETERS:
                  summary: "Missing a mandatory parameter."
                  value: "CODE_019_MISSING_PARAMETERS"
                CODE_020_INVALID_PARAMETER:
                  summary: "Supplied a wrong parameter."
                  value: "CODE_020_INVALID_PARAMETER"
        '500':
          description: "Internal Server Error."
          content:
            text/plain:
              examples:
                outcomeCode:
                  summary: "An outcome code describing the error."
                  value: "CODE_047_UNEXPECTED"
                  
  /CryptoAC/permissions/{CORE}/{Role_Name}/{File_Name}/{Permission}:
    delete:
      tags: ["CAC", "Admin"]
      summary: "Delete the role-permission assignment from the access control policy for the given core."
      description: "Delete the role-permission assignment from the access control policy for the given core. Possible outcome codes are: CODE_000_SUCCESS, CODE_005_ROLE_NOT_FOUND, CODE_006_FILE_NOT_FOUND, CODE_008_PERMISSIONTUPLE_NOT_FOUND, CODE_011_PERMISSIONTUPLE_ALREADY_EXISTS, CODE_015_FILE_WAS_DELETED, CODE_016_INVALID_PERMISSION, CODE_019_MISSING_PARAMETERS, CODE_020_INVALID_PARAMETER, CODE_022_ADMIN_CANNOT_BE_MODIFIED, CODE_030_OPA_DOCUMENT_DOWNLOAD, CODE_031_LOCK_CALLED_IN_INCONSISTENT_STATUS, CODE_036_UNAUTHORIZED, CODE_041_PA_ASSIGNMENTS_NOT_FOUND, CODE_043_DM_CONNECTION_TIMEOUT, CODE_044_MM_CONNECTION_TIMEOUT."
      operationId: deletePermissions
      security:
        - cookieAuth: []
        - basicAuth: []
      parameters:
        - name: CORE
          in: path
          description: "The core."
          required: true
          schema:
            type: string
        - name: Role_Name
          in: path
          description: "The name of the role."
          required: true
          schema:
            type: string
        - name: File_Name
          in: path
          description: "The name of the file."
          required: true
          schema:
            type: string
        - name: Permission
          in: path
          description: "The permission to revoke."
          required: true
          schema:
            type: string
            enum: [READ, WRITE, READWRITE]
      responses:
        '200':
          description: "Success."
          content:
            text/plain:
              examples:
                CODE_000_SUCCESS:
                  summary: "Success."
                  value: "CODE_000_SUCCESS"
        '401':
          description: "Unauthorized."
          content:
            text/plain:
              examples:
                CODE_036_UNAUTHORIZED:
                  summary: "The user is not logged in."
                  value: "CODE_036_UNAUTHORIZED"
        '403':
          description: "Forbidden."
          content:
            text/plain:
              examples:
                CODE_035_FORBIDDEN:
                  summary: "A not-admin user cannot invoke this API."
                  value: "CODE_035_FORBIDDEN"
        '404':
          description: "Not found."
          content:
            text/plain:
              examples:
                CODE_038_PROFILE_NOT_FOUND:
                  summary: "The profile of the logged user was not found in this instance of CryptoAC."
                  value: "CODE_038_PROFILE_NOT_FOUND"
        '422':
          description: "Unprocessable Entity."
          content:
            text/plain:
              examples:
                CODE_019_MISSING_PARAMETERS:
                  summary: "Missing a mandatory parameter."
                  value: "CODE_019_MISSING_PARAMETERS"
                CODE_020_INVALID_PARAMETER:
                  summary: "Supplied a wrong parameter."
                  value: "CODE_020_INVALID_PARAMETER"
        '500':
          description: "Internal Server Error."
          content:
            text/plain:
              examples:
                outcomeCode:
                  summary: "An outcome code describing the error."
                  value: "CODE_047_UNEXPECTED"
                


  /login/:
    post:
      summary: "Log in with the given credentials."
      description: "Log in the given credentials. As of now, any password works for logging in. Possible outcome codes are: CODE_000_SUCCESS, CODE_019_MISSING_PARAMETERS."
      operationId: login
      security:
        - cookieAuth: []
        - basicAuth: []
      requestBody:
        required: true
        description: "The user's credentials."
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                User:
                  type: string
                  description: "The username."
      responses:
        '200':
          description: "Success."
          content:
            text/plain:
              examples:
                CODE_000_SUCCESS:
                  summary: "Success."
                  value: "CODE_000_SUCCESS"
        '422':
          description: "Unprocessable Entity."
          content:
            text/plain:
              examples:
                CODE_019_MISSING_PARAMETERS:
                  summary: "Missing a mandatory parameter."
                  value: "CODE_019_MISSING_PARAMETERS"
                  
  /logout/:
    delete:
      summary: "Log out the user."
      description: "Log out the user"
      operationId: logout
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        '200':
          description: "Success."
          content:
            text/plain:
              examples:
                CODE_000_SUCCESS:
                  summary: "Success."
                  value: "CODE_000_SUCCESS"


components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: JSESSIONID
    basicAuth:
      type: http
      scheme: basic


